######################################################
################### FAITH WINDOW #####################
######################################################

window = {
	name = "faith_window"
	datacontext = "[FaithWindow.GetFaith]"
	datacontext = "[GetVariableSystem]"
	movable = no
	layer = windows_layer

	using = Window_Size_Sidebar
	using = Window_Background_Sidebar

	state = {
		name = _show
		position = { 0 0 }
		on_start = "[GetVariableSystem.Set( 'faith_view_tabs', 'beliefs' )]"
		on_start = "[GetVariableSystem.Set( 'left_sidebar_open', 'true' )]"
		on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"

		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		position = { -60 0 }
		on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"

		using = Animation_FadeOut_Quick
	}

	state = {
		position_x = 0
		name = hide
		next = _hide

		trigger_when = "[GetVariableSystem.Exists( 'county_view_open' )]"
	}

	### INSIDE WINDOW
	vbox = {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding

		using = Window_Margins_Sidebar

		### Header
		header_with_picture = {
			name = "header"
			datacontext = "[GetIllustration( 'religion_interior' )]"
			size = { 0 130 }
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = fixed

			blockoverride "header_text"
			{
				text = "FAITH_VIEW_HEADING"
				tooltip = "[Faith.GetDesc]"
				using = tooltip_es

				state = {
					name = "faith_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}
			}

			blockoverride "button_close"
			{
				onclick = "[FaithWindow.Close]"
			}

			blockoverride "button_back"
			{
				visible = "[HasViewHistory]"
				onclick = "[OpenFromViewHistory]"
				tooltip = "[GetViewHistoryTooltip]"
			}

			blockoverride "illustration_texture"
			{
				texture = "[Illustration.GetTextureForFaith( FaithWindow.GetFaith )]"
				spriteType = stretched
				fittype = centercrop
				alpha = 0.35
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				datacontext = "[FaithWindow.GetFaith]"

				button = {
					size = { 60 40 }
					onclick = "[AddWatchWindow( FaithWindow.GetFaith.MakeScope )]"
				}

				icon = {
					name = "faith_icon"
					size = { 100 100 }
					texture = "[Faith.GetIcon]"
					tooltip = "[Faith.GetDesc]"

					state = {
						name = "faith_view_refresh"
						using = Animation_Refresh_FadeOut
					}

					state = {
						using = Animation_Refresh_FadeIn
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					expand = {}

					hbox = {
						layoutpolicy_horizontal = expanding

						flowcontainer = {
							visible = "[Not(ObjectsEqual( GetPlayer.GetFaith, Faith.Self ))]"
							direction = vertical
							spacing = 2

							text_single = {
								name = "our_view"
								layoutpolicy_horizontal = expanding
								text = "FAITH_VIEW_OUR_VIEW"
								align = nobaseline
							}

							text_single = {
								name = "their_view"
								layoutpolicy_horizontal = expanding
								text = "FAITH_VIEW_THEIR_VIEW"
								align = nobaseline
							}
						}

						text_single = {
							name = "your_faith"
							visible = "[ObjectsEqual( GetPlayer.GetFaith, Faith.Self )]"
							text = "FAITH_VIEW_YOUR_FAITH"
							align = nobaseline
						}

						expand = {}

						vbox = {
							margin = { 10 0 }
							#spacing = 2

							vbox = {
								name = "fervor_container"
								tooltip = "FERVOR_TT"
								spacing = -8

								# Fervor
								hbox = {

									icon = {
										texture = "gfx/interface/icons/icon_fervor.dds"
										size = { 22 22 }
									}

									text_single = {
										text = "FAITH_WINDOW_FERVOR"
										default_format = "#high"
										align = nobaseline
									}
								}
								hbox = {
									layoutpolicy_horizontal = expanding

									expand = {}

									text_single = {
										name = "fervor_trend"
										margin_right = 1
										text = "[Faith.GetMonthlyFervorChange|=+2]"
										max_width = 110
										align = right|nobaseline
										default_format = "#low"
										fontsize = 12
										fontsize_min = 11
										size = { 0 12 }
									}
								}
							}

							button_group = {
								name = "religion_information"
								datacontext = "[Faith.GetReligion]"
								onclick = "[FaithWindow.ToggleReligionWindow]"
								tooltip = "TOGGLE_RELIGION_VIEW_TOOLTIP"

								using = tooltip_nw

								hbox = {

									text_single = {
										text = "TOGGLE_RELIGION_VIEW"
										default_format = "#clickable"
										align = nobaseline
									}

									button_expand = {}
								}
							}
						}
					}
				}
			}

			text_single = {
				visible = "[And( Not( Faith.GetReligion.HasPaganRoots ), Not( Faith.IsUnreformed ) )]"
				text = "FAITH_VIEW_SUBHEADING"
				align = center
				parentanchor = top|hcenter
				position = {0 40}
			}

			text_single = {
				visible = "[Faith.IsUnreformed]"
				text = "FAITH_VIEW_UNREFORMED_SUBHEADING"
				align = center
				parentanchor = top|hcenter
				position = {0 40}
			}

			text_single = {
				visible = "[And( Faith.GetReligion.HasPaganRoots, Not( Faith.IsUnreformed ) )]"
				text = "FAITH_VIEW_REFORMED_SUBHEADING"
				align = center
				parentanchor = top|hcenter
				position = {0 40}
			}
		}

		### Tabs
		hbox = {
			layoutpolicy_horizontal = expanding
			name = "tabs"

			button_tab = {
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'faith_view_tabs', 'beliefs' )]"
				down = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'beliefs' )]"
				text = "FAITH_BELIEFS"
				default_format = "#low"

				using = tooltip_below
			}

			button_tab = {
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'faith_view_tabs', 'holy_sites' )]"
				down = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'holy_sites' )]"
				text = "FAITH_HOLY_SITES"
				default_format = "#low"

				using = tooltip_below
			}
		}

		vbox = {
			name = "tab_beliefs"
			visible = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'beliefs' )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				alpha = 0
			}

			### Core Tenets
			vbox = {
				layoutpolicy_horizontal = expanding
				spacing = 15
				margin_top = 15

				text_label_center = {
					text = "FAITH_CORE_TENETS_HEADING"
				}

				hbox = {
					name = "doctrines_grid_core_tenets"
					datamodel = "[FaithWindow.GetGroupingHelper( 'core_tenets' ).GetGrouping]"
					spacing = 45

					state = {
						name = "faith_view_refresh"
						using = Animation_Refresh_FadeOut
					}

					state = {
						using = Animation_Refresh_FadeIn
					}

					item = {

						container_tenet_item = {
							datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
							tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP"
						}
					}
				}
			}

			### Doctrines
			vbox = {
				name = "doctrines"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin_top = 10
				# spacing = 5

				scrollbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content"
					{
						spacing = 10
						# margin_left = 35
						margin_top = 20

						state = {
							name = "faith_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						hbox = {
							name = "sins_and_virtues"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 15
							# margin_right = 30

							expand = {
								layoutstretchfactor_horizontal = 1
							}

							vbox = {
								name = "sins"
								spacing = 3
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding

								hbox = {
									spacing = 5

									expand = {}

									icon = {
										texture = "gfx/interface/icons/traits/sin_big.dds"
									}

									text_single = {
										text = "FAITH_WINDOW_SINS"
										align = right|nobaseline
									}
								}

								dynamicgridbox = {
									name = "virtues_grid"
									datamodel = "[FaithWindow.GetSins]"
									flipdirection = yes
									datamodel_wrap = 6

									item = {
										icon = {
											datacontext = "[GuiVirtueOrSinItem.GetTrait]"
											size = { 40 40 }
											alwaystransparent = yes
											texture = "[Trait.GetIcon( GetPlayer )]"

											tooltipwidget = {
												using = faith_window_trait_tooltip
											}

											block "tooltip_placement"
											{
												using = tooltip_ne
												tooltip_offset = { 0 20 }
											}
										}
									}
								}

								expand = {}
							}

							divider_light = {
								layoutpolicy_vertical = expanding
							}

							vbox = {
								name = "virtues"
								spacing = 3
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								hbox = {
									spacing = 5
									expand = {}

									icon = {
										texture = "gfx/interface/icons/traits/virtue_big.dds"
									}

									text_single = {
										text = "FAITH_WINDOW_VIRTUES"
										align = nobaseline
									}
								}

								dynamicgridbox = {
									name = "virtues_grid"
									datamodel = "[FaithWindow.GetVirtues]"
									flipdirection = yes
									datamodel_wrap = 6

									item = {
										icon = {
											datacontext = "[GuiVirtueOrSinItem.GetTrait]"
											size = { 40 40 }
											alwaystransparent = yes
											texture = "[Trait.GetIcon( GetPlayer )]"

											tooltipwidget = {
												using = faith_window_trait_tooltip
											}

											block "tooltip_placement"
											{
												using = tooltip_ne
												tooltip_offset = { 0 20 }
											}
										}
									}
								}

								expand = {}
							}

							expand = {
								layoutstretchfactor_horizontal = 1
							}
						}

						text_label_center = {
							layoutpolicy_horizontal = expanding
							text = "FAITH_DOCTRINES_IMPORTANT"
							default_format = "#low"
						}

						hbox = {
							name = "important_doctrines"
							datamodel = "[FaithWindow.GetGroupingHelper( 'main_group' ).GetGrouping]"
							spacing = 35
							layoutpolicy_vertical = expanding

							item = {
								vbox = {
									layoutpolicy_vertical = expanding
									name = "doctrine_list_item"
									datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
									visible = "[FaithDoctrine.IsVisible]"
									tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP"
									using = tooltip_se

									icon_doctrine = {
										name = "doctrine_group_icon"
										size = { 60 60 }
										texture = "[FaithDoctrine.GetIcon]"
									}

									text_single = {
										name = "doctrine_name"
										align = center
										text = "[FaithDoctrine.GetName( GuiFaithDoctrineItem.GetFaith )]"
										default_format = "#high"
										multiline = yes
										max_width = 100   ##### minimum in order to look good in german
									}

									expand = {}
								}
							}
						}

						divider = {
							layoutpolicy_horizontal = expanding
						}

						text_label_left = {
							layoutpolicy_horizontal = expanding
							text = "FAITH_DOCTRINES_MARRIAGE"
							default_format = "#low"
						}

						fixedgridbox = {
							datamodel = "[FaithWindow.GetGroupingHelper( 'marriage' ).GetGrouping]"
							flipdirection = yes
							addcolumn = 270
							addrow = 65
							datamodel_wrap = 2

							item = {
								widget_doctrine_item = {}
							}
						}

						text_label_left = {
							layoutpolicy_horizontal = expanding
							text = "FAITH_DOCTRINES_CRIMES"
							default_format = "#low"
						}

						fixedgridbox = {
							datamodel = "[FaithWindow.GetGroupingHelper( 'crimes' ).GetGrouping]"
							flipdirection = yes
							addcolumn = 270
							addrow = 65
							datamodel_wrap = 2

							item = {
								widget_doctrine_item = {}
							}
						}

						text_label_left = {
							layoutpolicy_horizontal = expanding
							text = "FAITH_DOCTRINES_CLERGY"
							default_format = "#low"
						}

						fixedgridbox = {
							datamodel = "[FaithWindow.GetGroupingHelper( 'clergy' ).GetGrouping]"
							flipdirection = yes
							addcolumn = 270
							addrow = 65
							datamodel_wrap = 2

							item = {
								widget_doctrine_item = {}
							}
						}

### START: FOR RELIGION-SPECIFIC DOCTRINES HERE

						divider = {
							layoutpolicy_horizontal = expanding
						}

						text_label_left = {
							layoutpolicy_horizontal = expanding
							text = "FAITH_DOCTRINES_RELIGION_SPECIFIC"
							default_format = "#low"
						}

						fixedgridbox = {
							datamodel = "[FaithWindow.GetGroupingHelper( 'christian_doctrines' ).GetGrouping]"
							flipdirection = yes
							addcolumn = 270
							addrow = 65
							datamodel_wrap = 2

							item = {
								widget_doctrine_item = {}
							}
						}

### END: FOR RELIGION-SPECIFIC DOCTRINES HERE

						vbox = {
							visible = "[DataModelHasItems(FaithWindow.GetGroupingHelper( 'special' ).GetGrouping)]"
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_left = {
								layoutpolicy_horizontal = expanding
								text = "FAITH_DOCTRINES_SPECIAL"
								default_format = "#low"
							}

							vbox = {
								datamodel = "[FaithWindow.GetGroupingHelper( 'special' ).GetGrouping]"
								layoutpolicy_horizontal = expanding

								item = {
									hbox = {
										name = "doctrine_list_item"
										datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
										layoutpolicy_horizontal = expanding
										margin_left = 4

										text_single = {
											name = "doctrine_name"
											layoutpolicy_horizontal = expanding
											text = "[FaithDoctrine.GetName( GuiFaithDoctrineItem.GetFaith )]"
											tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP"
											default_format = "#low"
										}
									}
								}
							}
						}
					}
				}
			}

			### Religious Head // Footer
			vbox = {
				name = "religious_head"
				layoutpolicy_horizontal = expanding
				margin = { 0 10 }

				state = {
					name = "faith_view_refresh"
					using = Animation_Refresh_FadeOut
				}

				state = {
					using = Animation_Refresh_FadeIn
				}

				hbox = {
					name = "current_hof"
					layoutpolicy_horizontal = expanding
					spacing = 5

					background = {
						using = Background_Area
					}

					portrait_head = {
						name = "character_portrait"
						datacontext = "[Faith.GetReligiousHead]"
						visible = "[Faith.GetReligiousHead.IsValid]"

						blockoverride "coa" {}
						blockoverride "opinion_box"{}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						spacing = 3

						spacer = {
							visible = "[Not( Faith.GetReligiousHead.IsValid)]"
							size = { 12 3 }
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 3
							margin = { 0 10 }

							text_label_left = {
								layoutpolicy_horizontal = expanding
								text = "RELIGIOUS_HEAD"
								default_format = "#low"
								fontsize_min = 14
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									visible = "[Faith.GetReligiousHead.IsValid]"
									text = "RELIGIOUS_HEAD_WITH_NAME"
									default_format = "#high"
									layoutpolicy_horizontal = expanding
									fontsize_min = 10
								}

								text_multi = {
									visible = "[Not( Faith.GetReligiousHead.IsValid)]"
									text = "RELIGIOUS_HEAD_EMPTY_DESC"
									default_format = "#weak"
									layoutpolicy_horizontal = expanding
									align = left
									fontsize_min = 10
								}

								expand = {}
							}

							expand = {}

						}
					}

					expand = {}

					vbox = {
						margin = { 5 10 }
						spacing = 5

						widget_doctrine_item = {
							visible = "[Faith.HasDoctrineByKey( 'doctrine_no_head' )]"

							blockoverride "background" {}

							blockoverride "doctrine_icon"
							{
								texture = "[GetDoctrine( 'doctrine_no_head' ).GetIcon]"
							}

							blockoverride "wdi_context"
							{
								datacontext = "[GetDoctrine('doctrine_no_head')]"
								datacontext = "[Faith]"
							}
						}

						widget_doctrine_item = {
							visible = "[Faith.HasDoctrineByKey( 'doctrine_spiritual_head' )]"

							blockoverride "background" {}

							blockoverride "doctrine_icon"
							{
								texture = "[GetDoctrine( 'doctrine_spiritual_head' ).GetIcon]"
							}

							blockoverride "wdi_context"
							{
								datacontext = "[GetDoctrine('doctrine_spiritual_head')]"
								datacontext = "[Faith]"
							}
						}

						widget_doctrine_item = {
							visible = "[Faith.HasDoctrineByKey( 'doctrine_temporal_head' )]"

							blockoverride "background" {}

							blockoverride "doctrine_icon"
							{
								texture = "[GetDoctrine( 'doctrine_temporal_head' ).GetIcon]"
							}

							blockoverride "wdi_context"
							{
								datacontext = "[GetDoctrine('doctrine_temporal_head')]"
								datacontext = "[Faith]"
							}
						}

						hbox = {
							name = "hof_title"
							spacing = 5
							layoutpolicy_horizontal = expanding
							datacontext = "[Faith.GetReligiousHeadTitle]"
							visible = "[Title.IsValid]"

							coa_title_tiny_crown = {
								name = "head_title"
							}

							text_multi = {
								text = "[Title.GetNameNoTooltip|U]"
								layoutpolicy_horizontal = expanding
								align = left
							}
						}

						expand = {}
					}
				}
			}

			hbox = {
				spacing = 10
				margin_bottom = 30
				margin_top = 5
				layoutpolicy_horizontal = expanding

				expand = {}

				button_standard = {
					name = "convert_faith"
					minimumsize = { 240 0 }
					visible = "[NotEqualTo_uint32( Faith.GetID, GetPlayer.GetFaith.GetID )]"
					text = "FAITH_CONVERSION_CONVERT"
					onclick = "[OpenFaithConversionWindow( Faith.GetID )]"

					using = tooltip_nw
				}

				button_standard = {
					name = "create_faith"
					minimumsize = { 240 0 }
					visible = "[And( ObjectsEqual(Faith.Self, GetPlayer.GetFaith ), GetVariableSystem.HasValue( 'faith_view_tabs', 'beliefs' ))]"
					text = "CREATE_REFORM_FAITH_TEXT"
					onclick = "[OpenFaithCreationWindow( Faith.GetID )]"
					tooltip = "CREATE_REFORM_FAITH_TOOLTIP"

					using = tooltip_nw
				}

				button_standard = {
					name = "create_head_of_faith"
					minimumsize = { 240 0 }
					visible = "[And( And( Not(Faith.HasDoctrineByKey( 'doctrine_no_head' )), Not( Faith.GetReligiousHeadTitle.IsValid ) ), ObjectsEqual( GetPlayer.GetFaith, Faith.Self ) )]"
					datacontext = "[GetScriptedGui( 'create_head_of_faith' )]"
					enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					text = "CREATE_TEMPORAL_HEAD_OF_FAITH_TITLE"
				}

				button_standard = {
					name = "recreate_head_of_faith"
					minimumsize = { 240 0 }
					visible = "[And( And( Not(Faith.HasDoctrineByKey( 'doctrine_no_head' )), And(Faith.GetReligiousHeadTitle.IsValid, Not( Faith.GetReligiousHeadTitle.HasHolder ))), ObjectsEqual( GetPlayer.GetFaith, Faith.Self ) )]"
					datacontext = "[GetScriptedGui( 'recreate_head_of_faith' )]"
					enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					text = "RECREATE_TEMPORAL_HEAD_OF_FAITH_TITLE"
				}

				expand = {}
			}
		}


		## HOLY SITES
		scrollbox = {
			name = "tab_holy_sites"
			visible = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'holy_sites' )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			datacontext = "[GetIllustration( 'religion_holding' )]"

			blockoverride "scrollbox_background" {}
			blockoverride "scrollbox_background_fade" {}

			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				alpha = 0
			}

			background = {
				texture = "[Illustration.GetTextureForFaith( FaithWindow.GetFaith )]"
				alpha = 0.5
				fittype = end

				modify_texture = {
					texture = "gfx/interface/buttons/background_button_fade.dds"
					blend_mode = alphamultiply
				}
			}

			blockoverride "scrollbox_content"
			{
				vbox = {
					name = "holy_sites"
					datamodel = "[FaithWindow.GetHolySites]"
					layoutpolicy_horizontal = expanding

					text_multi = {
						datacontext = "[FaithWindow.GetFaith]"
						layoutpolicy_horizontal = expanding
						size = { 0 45 }

						text = FAITH_HOLY_SITE_EXPLANATION
						#autoresize = yes
						#max_width = 500
						default_format = "#weak"
						margin = { 0 10 }
						align = center

						state = {
							name = "faith_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}
					}

					item = {
						vbox = {
							layoutpolicy_horizontal = expanding
							minimumsize = { 0 145 }

							hbox = {
								name = "faith_list_item"
								datacontext = "[GuiHolySiteItem.GetHolySite]"
								datacontext = "[HolySite.GetBarony]"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin = { 0 20 }
								margin_right = 15

								vbox = {
									layoutpolicy_vertical = expanding
									min_width = 180

									state = {
										name = "faith_view_refresh"
										using = Animation_Refresh_FadeOut
									}

									state = {
										using = Animation_Refresh_FadeIn
									}

									text_single = {
										name = "name_notheld"
										visible = "[Not( GuiHolySiteItem.IsHeldByFaith )]"
										max_width = 140
										text = "[HolySite.GetName]"
										default_format = "#low"
										using = Font_Size_Big
										fontsize_min = 12
									}

									text_single = {
										name = "name_held"
										visible = "[GuiHolySiteItem.IsHeldByFaith]"
										max_width = 140
										text = "[HolySite.GetName]"
										default_format = "#high"
										using = Font_Size_Big
										fontsize_min = 12
									}

									expand = {}

									hbox = {
										datacontext = "[Title.GetHolder]"
										tooltip = "FAITH_HOLY_SITE_HOLDER_TOOLTIP"

										background = {
											visible = "[Not( GuiHolySiteItem.IsHeldByFaith )]"
											using = Status_Bad
											margin_top = 3
											margin_bottom = -1
										}

										background = {
											visible = "[GuiHolySiteItem.IsHeldByFaith]"
											using = Background_Area
											margin = { 3 1 }
										}

										highlight_icon = {
											name = "faith_button"
											datacontext = "[Title.GetDeJureLiege.GetHolder.GetFaith]"
											size = { 45 45 }
											texture = "[Faith.GetIcon]"
										}

										coa_realm_small = {
											visible = "[Title.HasHolder]"
											datacontext = "[Title.GetHolder]"
											datacontext = "[FaithWindow.GetFaith]"
											datacontext = "[HolySite]"
										}
									}
								}

								vbox = {
									layoutpolicy_vertical = expanding
									margin_left = 15

									state = {
										name = "faith_view_refresh"
										using = Animation_Refresh_FadeOut
									}

									state = {
										using = Animation_Refresh_FadeIn
									}

									text_multi = {
										name = "effects_notheld"
										visible = "[Not( GuiHolySiteItem.IsHeldByFaith )]"
										layoutpolicy_horizontal = expanding
										text = "[HolySite.GetEffectDesc( GuiHolySiteItem.GetFaith )]"
										default_format = "#low"
										format_override = { P low }
										format_override = { L low }
										format_override = { E low }
										format_override = { S low }
										autoresize = yes
										max_width = 325
									}

									text_multi = {
										name = "effects_held"
										visible = "[GuiHolySiteItem.IsHeldByFaith]"

										layoutpolicy_horizontal = expanding
										text = "[HolySite.GetEffectDesc( GuiHolySiteItem.GetFaith )]"
										autoresize = yes
										max_width = 325
									}

									#expand = {}
								}

								expand = {}

								button_go_to_my_location = {
									onclick = "[DefaultOnCoatOfArmsRightClick(Title.GetID)]"
									tooltip = "GOTO_PROVINCE"
								}
							}

							divider_light = {
								layoutpolicy_horizontal = expanding
							}
						}
					}
				}
			}
		}
	}
}

### RELIGION VIEW
window = {
	name = "religion_window"
	# size = { 580 700 }
	size = { 550 80% }
	position = { 605 75 }
	# widgetanchor = top|left
	movable = yes
	datacontext = "[ReligionWindow.GetReligion]"
	layer = windows_layer

	using = Window_Background_Subwindow

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	attachto = {
		widgetid = "faith_window"
		inherit_visibility = no
	}

	vbox = {
		margin = { 4 4 }

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "RELIGION_WINDOW_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[ReligionWindow.Close]"
			}

			blockoverride "button_back"
			{
				visible = no
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 15 0 }
			margin_bottom = 5
			spacing = 20

			text_single = {
				text = HOUSE_LIST_SORT
				align = nobaseline
			}

			dropDown = {
				size = { 130 33 }
				datamodel = "[ReligionWindow.GetOrderByOptions]"
				onselectionchanged = "[ReligionWindow.OnOrderBySelectionChanged]"
				selectedindex = "[ReligionWindow.GetOrderBySelectedIndex]"

				active_item = {
					widget = {
						alwaystransparent = no
						size = { 100% 100% }

						button_normal = {
							size = { 100% 100% }
							button_trigger = none
							gfxtype = framedbuttongfx
							effectname = "NoHighlight"
							upframe = 1
							overframe = 2
							downframe = 3
							disableframe = 4
							texture = "gfx/interface/buttons/button_drop_down.dds"
							framesize = { 225 33 }
							spriteType = Corneredtiled
							spriteborder = { 75 11 }
						}

						text_single = {
							text = "[OrderFaithOption.GetName]"
							position = { 15 3 }
						}
					}
				}

				item = {
					widget = {
						alwaystransparent = no
						size = { 250 33 }

						button_normal = {
							size = { 100% 30 }
							button_trigger = none
							gfxtype = framedbuttongfx
							effectname = "NoHighlight"
							shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
							upframe = 1
							overframe = 2
							downframe = 3
							disableframe = 1
							texture = "gfx/interface/character_interaction/interaction_menu_button.dds"
							framesize = { 317 30 }

							text_single = {
								position = { 10 0 }
								text = "[OrderFaithOption.GetName]"
							}
						}
					}
				}

				list = {
					scrollarea = {
						position = { 5 32 }
						maximumsize = { 270 250 }
						autoresizescrollarea = yes
						scrollbarpolicy_horizontal = always_off

						using = Background_DropDown

						scrollwidget = {
							dynamicgridbox = {
								alwaystransparent = no
							}
						}

						scrollbar_vertical = {
							using = Scrollbar_Vertical
						}
					}
				}
			}

			expand = {}

			### Only Selected religion faiths
			hbox = {
				spacing = 5
				tooltip = "[ReligionWindow.GetShowOnlyReligionFaithsTooltip]"

				using = tooltip_nw

				button_checkbox = {
					checked = "[ReligionWindow.ShowOnlyReligionFaiths]"
					onclick = "[ReligionWindow.OnShowOnlyReligionFaiths]"
				}

				text_single = {
					text = "RELIGION_SHOW_ONLY"
					align = nobaseline
				}
			}
		}

		scrollbox = {
			name = "faiths_scroll_area"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content"
			{
				vbox = {
					datamodel = "[ReligionWindow.GetFaiths]"
					layoutpolicy_horizontal = expanding

					item = {
						button_list = {
							name = "show_faith_info"
							datacontext = "[FaithRef.Get]"
							layoutpolicy_horizontal = expanding
							size = { 0 75 }
							tooltipwidget = { faith_tooltip_click = {} }
							onclick = "[PdxGuiTriggerAllAnimations('faith_view_refresh')]"

							using = tooltip_es

							state = {
								name = _mouse_click
								#	delay = 0.1
								on_finish = "[DefaultOnFaithClick(Faith.GetID)]"
							}

							background = {
								visible = "[FaithRef.Get.IsSelected]"
								using = Background_Area
							}

							divider_light = {
								alpha = "[Select_float(GreaterThan_int32(Faith.GetNumberOfCountiesOfFaith,'(int32)0'), '(float)1.0','(float)0.5'))]"
								size = { 100% 3 }
								parentanchor = bottom
								position = { 0 5 }
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin  = { 10 5 }
								alpha = "[Select_float(GreaterThan_int32(Faith.GetNumberOfCountiesOfFaith,'(int32)0'), '(float)1.0','(float)0.5'))]"

								spacing = 10

								icon = {
									name = "faith_icon"
									texture = "[Faith.GetIcon]"
									size = { 60 60 }
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										text_single = {
											name = "faith_name"
											align = left
											text = "[Faith.GetNameNoTooltip]"
											using = Font_Size_Medium
											default_format = "#high"
											max_width = 240
										}

										expand = {}
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										icon = {
											texture = "gfx/interface/icons/icon_fervor.dds"
											size = { 22 22 }
										}

										text_single = {
											name = "fervor"
											text = "FAITH_WINDOW_FERVOR"
											using = Font_Size_Small
										}

										expand = {}
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										text_single = {
											name = "counties"
											align = left
											text = "FAITH_WINDOW_COUNTIES"
											using = Font_Size_Small
											default_format = "#low"
										}

										expand = {}
									}
								}

								text_single = {
									name = "religion_faith_name"
									# align = right
									text = "FAITH_RELIGION"
									using = Font_Size_Small
								}
							}
						}
					}
				}
			}
		}
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################

types FaithCreationWindow
{
	type name_entry_big = container {

		text_single = {
			name = "label"

			block "label"
			{
				text = "#D enter label...#!"
			}
		}

		editbox = {
			block "name" {}
			position = { -1 29 }
			default_format = "#high"
			alwaystransparent = no
			multiline = no
			margin = { 10 5 }

			using = Font_Type_Standard
			using = Font_Size_Small

			background =  {
				using = Background_Area_Border
			}

			block "text_size"
			{
				size = { 380 30 }
			}

			block "input"
			{
				ontextedited = "[FaithCreationWindow.OnEditName]"
			}

			block "align" {

				align = hcenter|top
			}

			block "max_characters" {
				maxcharacters = 30
			}
		}
	}
}

types FaithShared
{
	type container_tenet_item = container {

		using = tooltip_se

		highlight_icon = {
			name = "doctrine_group_bg"
			texture = "[GuiFaithDoctrineItem.GetFaith.GetDoctrineBackgroundIcon]"
			size = { 130 200 }
		}

		highlight_icon = {
			name = "doctrine_group_icon"
			texture = "[FaithDoctrine.GetIcon]"
			size = { 130 200 }
			alpha = 0.85
			position = {0 0}
		}

		text_label_center = {
			name = "doctrine_name"
			parentanchor = bottom|hcenter
			widgetanchor = center
			position = { 0 -24 }
			maximumsize = { 130 44 }
			fontsize_min = 12
			multiline = yes
			align = center
			elide = right
			text = "[FaithDoctrine.GetName( GuiFaithDoctrineItem.GetFaith )]"
			default_format = "#high"

			using = Font_Size_Medium
		}
	}
}

types FaithWindow
{
	type widget_doctrine_item = widget {
		# size = { 240 53 }
		size = { 210 53 }
		block "wdi_context"
		{
			datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
			datacontext = "[GuiFaithDoctrineItem.GetFaith]"
		}

		block "background" {
			background = {
				using = Background_Area
				margin = { 5 5 }
			}
		}

		hbox = {
			name = "faith_list_item"
			tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP_WITH_FAITH"
			spacing = 8

			using = tooltip_nw

			icon_doctrine = {
				name = "doctrine_group_icon"
				size = { 50 50 }

				block "doctrine_icon"
				{
					texture = "[FaithDoctrine.GetGroup.GetIcon]"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				text_single = {
					name = "doctrine_group_name"
					layoutpolicy_horizontal = expanding
					align = left
					autoresize = no
					fontsize_min = 12
					default_format = "#low"
					text = "[FaithDoctrine.GetGroup.GetName( Faith.Self )]"
				}

				text_single = {
					name = "faith_name"
					layoutpolicy_horizontal = expanding
					elide = right
					autoresize = no
					fontsize_min = 12
					align = left
					text = "[FaithDoctrine.GetName( Faith.Self )]"
				}
			}
		}
	}
}
