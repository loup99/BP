
namespace = middle_europe_decisions

##################################################

### Middle Europe Major Decision Events
# by Flavio Verna

# 0001 - Forming the Swiss Confederation
# 0003 - Forming the Archduchy of Austria
# 0005 - Reforming the Carolingian Empire
# 0007 - Unifying the Burgundies
# 0010 - Empowering Sicilian Parliament
# 0012 - Gothic Innovations

# Others

# 0015 - Reform the Holy Roman Empire

##################################################

##################################################
# HRE "Kingdoms"
##################################################

##################################################
# Forming the Swiss Confederation
##################################################

middle_europe_decisions.0001 = {
	type = character_event
	title = middle_europe_decisions.0001.t
	desc = middle_europe_decisions.0001.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:scoped_emperor
		animation = shock
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		form_switzerland_scripted_effect = yes
	}
	option = {
		name = middle_europe_decisions.0001.a

		# Send narrative fluff to other players (if any).
		every_player = {
			limit = {
				NOT = { this = root }
				top_liege = scope:scoped_emperor
			}
			trigger_event = middle_europe_decisions.0002
		}
	}
}

middle_europe_decisions.0002 = {
	type = character_event
	title = middle_europe_decisions.0001.t
	desc = {
		first_valid = {
			# Emperor's reaction.
			triggered_desc = {
				trigger = {
					has_title = title:e_hre
				}
				desc = middle_europe_decisions.0002.desc.emperor
			}
			# Everybody else's.
			triggered_desc = {
				trigger = {
					NOT = { has_title = title:e_hre }
				}
				desc = middle_europe_decisions.0002.desc.vassals
			}
		}
	}
	theme = realm
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_bold
	}
	right_portrait = {
		character = scope:scoped_emperor
		animation = shock
	}

	immediate = {
		#The Emperor hears the future!
		if = {
			limit = { has_title = title:e_hre }
			play_music_cue = "mx_cue_combat_2"
		}
		title:e_hre.holder = { save_scope_as = scoped_emperor }
	}
	option = {
		name = middle_europe_decisions.0002.a
	}
}

##################################################
# Forming the Archduchy of Austria
##################################################

middle_europe_decisions.0003 = {
	type = character_event
	title = middle_europe_decisions.0003.t
	desc = middle_europe_decisions.0003.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		trigger = {
			NOT = { scope:scoped_emperor = root }
		}
		character = scope:scoped_emperor
		animation = happiness
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		form_austria_scripted_effect = yes
	}
	option = {
		name = middle_europe_decisions.0003.a
		# Send narrative fluff to other players (if any).
		every_player = {
			limit = {
				NOT = { this = root }
				top_liege = scope:scoped_emperor
			}
			trigger_event = middle_europe_decisions.0004
		}
	}
}

middle_europe_decisions.0004 = {
	type = character_event
	title = middle_europe_decisions.0003.t
	desc = {
		first_valid = {
			# Emperor granted the archduchy to themself.
			triggered_desc = {
				trigger = { root = scope:scoped_emperor }
				desc = middle_europe_decisions.0004.desc.emperor_archduke
			}
			# Emperor's reaction.
			triggered_desc = {
				trigger = {
					has_title = title:e_hre
					dynasty = scope:scoped_ruler.dynasty
				}
				desc = middle_europe_decisions.0004.desc.emperor
			}
			# Blackmailed Emperor's reaction.
			triggered_desc = {
				trigger = {
					has_title = title:e_hre
					NOT = { dynasty = scope:scoped_ruler.dynasty }
				}
				desc = middle_europe_decisions.0004.desc.emperor_blackmailed
			}
			# Everybody else's.
			triggered_desc = {
				trigger = {
					NOT = { has_title = title:e_hre }
				}
				desc = middle_europe_decisions.0004.desc.vassals
			}
		}
	}
	theme = realm
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_bold
	}
	right_portrait = {
		character = scope:scoped_emperor
		animation = happiness
	}

	immediate = {
		#The Emperor hears the future!
		if = {
			limit = { has_title = title:e_hre }
			play_music_cue = "mx_cue_combat_2"
		}
	}

	option = {
		name = middle_europe_decisions.0004.a
		trigger = {
			has_title = title:e_hre
		}
	}
	option = {
		name = middle_europe_decisions.0004.b
		trigger = {
			NOT = { has_title = title:e_hre }
		}
	}
}

##################################################
# Reforming Carolingian Empire
##################################################

middle_europe_decisions.0005 = {
	type = character_event
	title = middle_europe_decisions.0005.t
	desc = middle_europe_decisions.0005.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:scoped_emperor
		animation = shock
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		form_carolingian_empire_scripted_effect = yes
	}
	option = {
		name = middle_europe_decisions.0005.a
		set_nickname_effect = { NICKNAME = nick_the_great }

		# Send narrative fluff to other players (if any).
		every_player = {
			limit = {
				NOT = { this = root }
				is_ruler = yes
				is_landed = yes
				capital_province = { geographical_region = world_europe }
				is_within_diplo_range = { CHARACTER = root }
			}
			trigger_event = middle_europe_decisions.0006
		}
		hidden_effect = { # Latins chance to convert to French.
			every_vassal = {
				limit = {
					NOR = {
						this = root
						has_culture = culture:french
					}
					OR = {
						culture = { has_cultural_pillar = heritage_frankish }
						culture = { has_cultural_pillar = heritage_central_germanic }
					}
					is_ai = yes
				}
				random = {
					chance = 33
					set_culture_same_as = root
				}
			}
		}
	}
}

middle_europe_decisions.0006 = {
	type = character_event
	title = middle_europe_decisions.0005.t
	desc = middle_europe_decisions.0006.desc
	theme = realm
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_bold
	}
	right_portrait = {
		character = scope:scoped_emperor
		animation = shock
	}

	immediate = {
		#The Emperor gets a sad.
		if = {
			limit = { has_title = title:e_hre }
			play_music_cue = "mx_cue_prison"
		}
		if = {
			limit = {
				this = scope:scoped_emperor
			}
			show_as_tooltip = {
				add_prestige = major_prestige_loss
				add_opinion = {
					target = scope:scoped_ruler
					modifier = pretender_opinion
				}
				destroy_title = title:e_hre
			}
		}
	}

	option = {
		name = middle_europe_decisions.0006.a
		trigger = {
			this = scope:scoped_emperor
		}
	}

	option = {
		name = middle_europe_decisions.0006.b
		trigger = {
			NOT = { this = scope:scoped_emperor }
		}
	}
}

##################################################
# Unifying the Burgundies
##################################################

middle_europe_decisions.0007 = {
	type = character_event
	title = middle_europe_decisions.0007.t
	desc = middle_europe_decisions.0007.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:former_liege
		animation = shock
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		unite_burgundies_scripted_effect = yes
	}

	option = {
		name = middle_europe_decisions.0007.a
		# Send narrative fluff to other players (if any).
		every_player = {
			limit = {
				NOT = { this = root }
				top_liege = scope:former_liege
			}
			trigger_event = middle_europe_decisions.0008
		}
		hidden_effect = { 
			every_vassal = {
				limit = {
					NOR = {
						this = root
						has_culture = culture:french
					}
					culture = { has_cultural_pillar = heritage_frankish }
					is_ai = yes
				}
				random = {
					chance = 50
					set_culture_same_as = root
				}
			}
		}
	}
}

middle_europe_decisions.0008 = {
	type = character_event
	title = middle_europe_decisions.0007.t
	desc = {
		first_valid = {
			# Liege's reaction.
			triggered_desc = {
				trigger = {
					this = scope:former_liege
				}
				desc = middle_europe_decisions.0008.desc.liege
			}
			# Everybody else's.
			triggered_desc = {
				trigger = {
					NOT = { this = scope:former_liege }
				}
				desc = middle_europe_decisions.0008.desc.others
			}
		}
	}
	theme = realm
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_bold
	}
	right_portrait = {
		character = scope:former_liege
		animation = shock
	}


	immediate = {
		if = {
			limit = { this = scope:former_liege }
			show_as_tooltip = {
				add_prestige = major_prestige_loss
				add_unpressed_claim = title:k_burgundy # Give chance to retaliate
				add_opinion = {
					target = scope:scoped_ruler
					modifier = pretender_opinion
				}
			}
		}
	}

	option = {
		name = middle_europe_decisions.0008.a
		trigger = {
			this = scope:former_liege
		}
	}
	option = {
		name = middle_europe_decisions.0008.b
		trigger = {
			NOT = { this = scope:former_liege }
		}
	}
}

##################################################
# Empowering Sicilian Parliament
##################################################

middle_europe_decisions.0010 = {
	type = character_event
	title = middle_europe_decisions.0010.t
	desc = middle_europe_decisions.0010.desc
	theme = stewardship
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_greedy
	}

	immediate = {
		play_music_cue = "mx_cue_positive_effect"
		save_scope_as = scoped_ruler
	}

	option = { # Parliament set in Palermo.
		name = middle_europe_decisions.0010.a
		trigger = {
			completely_controls = title:d_sicily
		}
		if = { # Nickname
			limit = {
				has_title = title:e_hre
				NOR = {
					has_trait = possessed
					has_trait = lunatic
					has_treatable_disease_trigger = yes
				}
				completely_controls_region = custom_sicily
			}
			set_nickname_effect = { NICKNAME = nick_the_stupor_mundi }
		}
		else = {
			set_nickname_effect = { NICKNAME = nick_the_lawgiver }
		}
		empower_sicilian_parliament_decision_scripted_effect = yes
		title:c_palermo = {
			sicilian_parliament_building_scripted_effect = yes
		}
		if = { # Usurp if not held personally.
			limit = {
				NOT = { title:c_palermo.holder = { this = root } }
			}
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:c_palermo = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change

		}
		set_realm_capital = title:c_palermo
		if = {
			limit = { # Potential split if the Kingdom is not held in its entirety.
				has_title = title:k_sicily
				NOT = { completely_controls_region = custom_sicily }
			}

			create_title_and_vassal_change = {
				type = created
				save_scope_as = change_trinacria
				add_claim_on_loss = no
			}
			title:k_trinacria = {
				change_title_holder = {
					holder = root
					change = scope:change_trinacria
				}
				copy_title_history = title:k_sicily
			}
			resolve_title_and_vassal_change = scope:change_trinacria

			hidden_effect = {
				sicilian_parliament_kingdom_split_scripted_effect = yes
			}
			if = {
				limit = {
					highest_held_title_tier < 5
				}
				hidden_effect = { set_primary_title_to = title:k_trinacria }
			}
		}
		hidden_effect = {
			every_player = { # Notify
				limit = {
					is_vassal_of = root
					NOT = { this = root }
				}
				trigger_event = middle_europe_decisions.0011
			}
		}
	}
	option = { # Parliament set in Naples.
		name = middle_europe_decisions.0010.b
		trigger = {
			completely_controls = title:d_capua
		}
		if = { # Nickname
			limit = {
				has_title = title:e_hre
				NOR = {
					has_trait = possessed
					has_trait = lunatic
					has_treatable_disease_trigger = yes
				}
				completely_controls_region = custom_sicily
			}
			set_nickname_effect = { NICKNAME = nick_the_stupor_mundi }
		}
		else = {
			set_nickname_effect = { NICKNAME = nick_the_lawgiver }
		}
		empower_sicilian_parliament_decision_scripted_effect = yes
		title:c_napoli = {
			sicilian_parliament_building_scripted_effect = yes
		}
		if = { # Usurp if not held personally.
			limit = {
				NOT = { title:c_napoli.holder = { this = root } }
			}
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:c_napoli = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change

		}
		set_realm_capital = title:c_napoli
		if = {
			limit = { # Potential split if the Kingdom is not held in its entirety.
				has_title = title:k_sicily
				NOT = { completely_controls_region = custom_sicily }
			}
			create_title_and_vassal_change = {
				type = created
				save_scope_as = change_naples
				add_claim_on_loss = no
			}
			title:k_naples = {
				change_title_holder = {
					holder = root
					change = scope:change_naples
				}
				copy_title_history = title:k_sicily
			}
			resolve_title_and_vassal_change = scope:change_naples

			hidden_effect = {
				sicilian_parliament_kingdom_split_scripted_effect = yes
			}
			if = {
				limit = {
					highest_held_title_tier < 5
				}
				hidden_effect = { set_primary_title_to = title:k_naples }
			}
		}
		hidden_effect = {
			every_player = { # Notify
				limit = {
					is_vassal_of = root
					NOT = { this = root }
				}
				trigger_event = middle_europe_decisions.0011
			}
		}
	}
	option = { # Changed my mind.
		name = middle_europe_decisions.0010.c
		trigger = { is_ai = no }
		hidden_effect = {
			remove_list_global_variable = {
				name = unavailable_unique_decisions
				target = flag:flag_empowered_sicilian_parliament
			}
		}
		hidden_effect = { # Reinburse cost.
			add_gold = 1500
			add_prestige_no_experience = 3000
		}
	}
}

middle_europe_decisions.0011 = {
	type = character_event
	title = middle_europe_decisions.0010.t
	desc = middle_europe_decisions.0011.desc
	theme = stewardship
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_greedy
	}

	option = {
		name = middle_europe_decisions.0011.a
	}
}

##################################################
# Gothic Innovations.
##################################################

middle_europe_decisions.0012 = {
	type = character_event
	title = middle_europe_decisions.0012.t
	desc = middle_europe_decisions.0012.desc
	theme = stewardship
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_rational
	}

	immediate = {
		play_music_cue = "mx_cue_positive_effect"
		save_scope_as = scoped_ruler
		promote_gothic_innovations_decision_scripted_effect = yes
	}

	option = {
		name = middle_europe_decisions.0012.a
		hidden_effect = {
			every_player = { # Notify
				limit = {
					NOT = { this = root }
					is_ruler = yes
					is_landed = yes
					capital_province = { geographical_region = world_europe }
					this.faith.religion = root.faith.religion
				}
				trigger_event = middle_europe_decisions.0013
			}
		}
	}
}

# Other players notified.
middle_europe_decisions.0013 = {
	type = character_event
	title = middle_europe_decisions.0013.t
	desc = {
		first_valid = {
			# French reaction
			triggered_desc = {
				trigger = {
					root = {
						culture = { has_cultural_pillar = heritage_frankish }
					}
				}
				desc = middle_europe_decisions.0013.desc.french
			}
			# Roman reaction
			triggered_desc = {
				trigger = {
					root = {
						culture = { has_cultural_pillar = heritage_latin}
					}
				}
				desc = middle_europe_decisions.0013.desc.italian
			}
			# Everybody else's.
			desc = middle_europe_decisions.0013.desc.fallback
		}
	}
	theme = stewardship
	left_portrait = {
		character = scope:scoped_ruler
		animation = personality_rational
	}

	immediate = {
		show_as_tooltip = {
			scope:scoped_ruler = {
				promote_gothic_innovations_decision_scripted_effect = yes
			}
		}
	}

	option = {
		name = {
			trigger = {
				root = {
					culture = { has_cultural_pillar = heritage_frankish }
				}
			}
			text = middle_europe_decisions.0013.a
		}
		name = {
			trigger = {
				root = {
					culture = { has_cultural_pillar = heritage_latin }
				}
			}
			text = middle_europe_decisions.0013.b
		}
		name = {
			trigger = {
				NOR = {
					culture = { has_cultural_pillar = heritage_frankish }
					culture = { has_cultural_pillar = heritage_latin }
				}
			}
			text = middle_europe_decisions.0013.c
		}
	}
}

##################################################
# Reform the Holy Roman Empire
# by Ewan Cowhig Croft
##################################################

#	Conduct the reformation
middle_europe_decisions.0015 = {
	type = character_event
	title = middle_europe_decisions.0015.t
	desc = middle_europe_decisions.0015.desc
	theme = realm
	left_portrait =	{
		character = scope:founder
		animation = personality_bold
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		restore_holy_roman_empire_decision_scripted_effect = yes
	}

	#Renovatio Imperii!
	option = {
		name = middle_europe_decisions.0015.a
		give_nickname = nick_the_great
		add_prestige_experience = monumental_fame_gain
		every_vassal = {
			add_opinion = {
				modifier = reformed_holy_roman_empire_opinion
				target = root
			}
			custom = restore_holy_roman_empire_decision_effects_vassal_opinion.tt
		}
		ai_chance = {	#When taken, the AI should always pick this.
			base = 100
		}
	}
	
	##No Germany please, we're Byzantine.
	#option = {
	#	name = middle_europe_decisions.0015.b
	#	ai_chance = {	#When taken, the AI should always go for the decision.
	#		base = 0
	#	}
	#}
}

#	Inform any players
middle_europe_decisions.0016 = {
	type = character_event
	title = middle_europe_decisions.0015.t
	desc = middle_europe_decisions.0016.desc
	theme = realm
	left_portrait =	{
		character = scope:founder
		animation = personality_bold
	}

	immediate = {
		#Other emperors are not happy about this.
		if = {
			limit = { highest_held_title_tier = tier_empire }
			play_music_cue = "mx_cue_combat_2"
		}
	}

	#Well, that happened.
	option = {
		name = {	#Other emperors are threatened.
			trigger = {
				highest_held_title_tier = tier_empire
				NOT = { has_title = title:e_byzantium }
			}
			text = middle_europe_decisions.0016.a
		}
		name = {	#The true emperor is a tad pissed off.
			trigger = { has_title = title:e_byzantium }
			text = middle_europe_decisions.0016.b
		}
		name = {	#All other rulers fear Roman invasion.
			trigger = {
				NOR = {
					highest_held_title_tier = tier_empire
					any_liege_or_above = { this = scope:founder }
				}
			}
			text = middle_europe_decisions.0016.c
		}
		name = {
			trigger = {
				any_liege_or_above = { this = scope:founder }
			}
			text = middle_europe_decisions.0016.d
		}
		ai_chance = {	#Solo option.
			base = 100
		}
	}
}

##################################################
# Establish the Electorate of Saxony
# by James Beaumont
##################################################

##### Changed from Vanilla: Removed k_sorbia references

##### Changed from Vanilla: Removed middle_europe_decisions_0017_most_powerful_saxon_vassal_trigger

##### Changed from Vanilla: Removed middle_europe_decisions_0017_get_theocratic_vassal_trigger

##### Changed from Vanilla: Removed middle_europe_decisions_0017_get_appropriate_courtier_trigger

#	Electorate of Saxony event

##### Changed from Vanilla: Removed middle_europe_decisions.0017

#	Electorate of Saxony event

##### Changed from Vanilla: Removed middle_europe_decisions.0018