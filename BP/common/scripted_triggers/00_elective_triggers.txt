#	Example:
#
#	example_trigger = {
#		is_country_type = default
#		free_leader_slots > 0
#	}
#
#
#	In a script file:
#
#	trigger = {
#		example_trigger = yes
#	}
#

has_unelectable_trait_trigger = {
	OR = {
		has_trait = disinherited
		has_trait = eunuch
		has_trait = crusader_king #Avoid realm merging after Crusade.
		has_trait = devoted
		has_trait = order_member
		AND = {
			has_trait = bastard #If landed, he might still be electable on the grounds of being an Elector.
			is_ruler = no
		}
	}
}

has_unelectable_government_trigger = {
	OR = {	
		has_government = republic_government
		has_government = theocracy_government
		has_government = mercenary_government
		has_government = holy_order_government
	}
}

this_is_martial_society_trigger = {
	NOR = {
		faith = { has_doctrine = tenet_pacifism }
		faith = { has_doctrine = tenet_dharmic_pacifism }
	}
	OR = {
		has_government = clan_government
		has_government = tribal_government
		has_government = mercenary_government
		has_government = holy_order_government
		faith = {
			OR = {
				has_doctrine_parameter = great_holy_wars_active
				has_doctrine_parameter = great_holy_wars_active_if_reformed
				has_doctrine_parameter = cheaper_holy_wars_active
			}
		}
	}
}

this_is_diplomatic_society_trigger = {
	OR = {
		has_government = feudal_government
		has_government = republic_government
		has_government = theocracy_government
	}
	OR = {
		faith = { has_doctrine = tenet_communal_identity }
		faith = { has_doctrine = tenet_alexandrian_catechism }
		faith = { has_doctrine = tenet_legalism }
	}
}
this_is_spiritual_society_trigger = {
	faith = {
		NOR = {
			has_doctrine = tenet_false_conversion_sanction
			has_doctrine = tenet_hedonistic
			has_doctrine = tenet_carnal_exaltation
			has_doctrine = tenet_exaltation_of_pain
			has_doctrine = tenet_pursuit_of_power
		}
		OR = {
			has_doctrine = tenet_inner_journey
			has_doctrine = tenet_asceticism
			has_doctrine = tenet_literalism
			has_doctrine = tenet_esotericism
			has_doctrine = tenet_astrology
			has_doctrine = tenet_monasticism
		}
	}
}

ere_elective_politician_titles_trigger = { #Used in Byzantine Elective to determine AI behavior.
	OR = {
		has_council_position = councillor_chancellor
		has_council_position = councillor_marshal
		has_council_position = councillor_steward
		has_council_position = councillor_spymaster
		has_council_position = councillor_court_chaplain
	}
}

parent_for_elective_succession_trigger = { #This trigger is used to prevent grandchildren from being selectable when their parent is still available as a candidate.
	NOT = { this = scope:holder } #Not the current ruler.
	dynasty = scope:holder.dynasty
	is_child_of = scope:holder

	OR = {
		is_female = no
		scope:title = {
			NOT = { has_title_law = male_only_law }
		}
	}
	OR = {
		is_female = yes
		scope:title = {
			NOT = { has_title_law = female_only_law }
		}
	}

	OR = { #Candidate should not be a landless Courtier that is about to inherit a Theocracy or Republic
		AND = {
			is_ruler = yes
			is_landed = yes
			has_unelectable_government_trigger = no
		}
		NOT = {
			any_heir_title = {
				exists = holder
				holder = {
					has_unelectable_government_trigger = yes
				}
			}
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = cope:title.holder.faith)
			}
		}
		faith = scope:holder.faith
	}
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
}

feudal_elective_potential_landed_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	has_same_government = scope:holder
	#Either the candidate is in the realm, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = {
			this = scope:holder
		}
		scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	OR = {
		highest_held_title_tier > 2 #Or Duke-tier... (if title is King or Emperor tier)
		AND = {
			scope:holder = {
				highest_held_title_tier = 3
			}
			highest_held_title_tier > 1 #...Or Count-tier under a Duchy...
		}
		AND = {
			scope:holder = {
				highest_held_title_tier < 3
			}
			is_ruler = yes #...Or Baron-tier under a County.
			is_landed = yes
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = scope:holder.faith)
			}
		}
		this.faith = scope:holder.faith
	}
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
}

feudal_elective_potential_landless_claimant_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	#Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = {
			this = scope:holder
		}
		is_ruler = no
		scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	NOT = { #Landless characters should not be heirs to Theocracies/Republics.
		any_heir_title = {
			exists = holder
			holder = {
				has_unelectable_government_trigger = yes
			}
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = scope:holder.faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = scope:holder.faith)
			}
		}
		faith = scope:holder.faith
	}
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
}

feudal_elective_potential_landless_dynastic_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	#Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = {
			this = scope:holder
		}
		is_ruler = no
		scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	NOT = { #Landless characters should not be heirs to Theocracies/Republics.
		any_heir_title = {
			exists = holder
			holder = {
				has_unelectable_government_trigger = yes
			}
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = scope:holder.faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = scope:holder.faith)
			}
		}
		faith = scope:holder.faith
	}
	NOR = {
		AND = {
			exists = mother
			mother = {
				is_alive = yes
				parent_for_elective_succession_trigger = yes
			}
		}
		AND = {
			exists = father
			father = {
				is_alive = yes
				parent_for_elective_succession_trigger = yes
			}
		}
	}
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
}

byzantine_elective_deformed_candidate_trigger = {
	OR = {
		has_trait = disfigured
		has_trait = blind
		has_trait = eunuch
		has_trait = dwarf
		has_trait = clubfooted
		has_trait = inbred
	}
}

imperial_elective_potential_landless_dynastic_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	#Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = { 
		any_liege_or_above = { this = scope:holder }
		is_ruler = no
		scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	NOT = { #Landless characters should not be heirs to Theocracies/Republics.
		any_heir_title = {
			exists = holder
			holder = { has_unelectable_government_trigger = yes }
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = scope:holder.faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = scope:holder.faith)
			}
		}
		faith = scope:holder.faith
	}
	NOR = {
		AND = {
			exists = mother
			mother = {
				is_alive = yes
				parent_for_elective_succession_trigger = yes
			}
		}
		AND = {
			exists = father
			father = {
				is_alive = yes
				parent_for_elective_succession_trigger = yes
			}
		}
	}
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
	byzantine_elective_deformed_candidate_trigger = no
}

imperial_elective_potential_landless_claimant_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	#Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = { this = scope:holder }
		is_ruler = no
		scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	NOT = { #Landless characters should not be heirs to Theocracies/Republics.
		any_heir_title = {
			exists = holder
			holder = { has_unelectable_government_trigger = yes }
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = scope:holder.faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = scope:holder.faith)
			}
		}
		faith = scope:holder.faith
	}
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
	byzantine_elective_deformed_candidate_trigger = no
}

feudal_elective_potential_landed_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	has_same_government = scope:holder
	#Either the candidate is in the realm, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = { this = scope:holder }
		scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	OR = {
		highest_held_title_tier > 2 #Or Duke-tier... (if title is King or Emperor tier)
		AND = {
			scope:holder = { highest_held_title_tier = 3 }
			highest_held_title_tier > 1 #...Or Count-tier under a Duchy...
		}
		AND = {
			scope:holder = { highest_held_title_tier < 3 }
			is_ruler = yes #...Or Baron-tier under a County.
			is_landed = yes
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = scope:holder.faith)
			}
		}
		this.faith = scope:holder.faith
	}
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
	byzantine_elective_deformed_candidate_trigger = no
}



