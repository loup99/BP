#Christian Decisions
peregrinition_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = peregrinition_decision_desc
	selection_tooltip = peregrinition_decision_tooltip
	major = yes

	is_shown = {
		faith = { has_doctrine_parameter = peregrinition_active }
	}

	is_valid = {
		has_trait = zealous
		NOT = { has_trait = ambitious }
		#You can't leave without your heir being of age
		trigger_if = {
			limit = { is_ruler = yes }
			custom_description = {
				text = is_a_ruler_and_has_a_valid_player_heir
				exists = player_heir
				player_heir = { age >= 16 }
			}
		}
	}

	effect = {
		save_scope_as = actor
		hidden_effect = { add_piety_level = 1 }
		show_as_tooltip = { add_piety_level = 1 }
		add_trait = devoted
		if = {
			limit = { is_ruler = yes }
			depose = yes
		}
		#Remove spouses and spouse adjacent
		if = {
			limit = { is_married = yes }
			every_spouse = { divorce = scope:actor }
		}
		if = {
			limit = { exists = betrothed }
			break_betrothal = betrothed
		}
		if = {
			limit = { is_concubine = yes }
			this.concubinist = { remove_concubine = scope:actor }
		}
		if = {
			limit = { number_of_concubines > 0 }
			every_concubine = { scope:actor = { remove_concubine = prev } }
		}
		#Remove wards
		if = {
			limit = { any_courtier = { has_relation_ward = scope:actor } }
			every_courtier = {
				limit = { has_relation_ward = scope:actor }
				remove_relation_ward = scope:actor
				return_to_court = yes
			}
		}
		#Remove all claims
		every_claim = {
			scope:actor = { remove_claim = prev }
		}
		#Go into the wilderness
		select_and_move_to_pool_effect = yes
	}

	ai_check_interval = 60
	
	ai_potential = {
		exists = primary_heir
		primary_heir = { dynasty = root.dynasty }
		is_at_war = no
	}

	#Cribbed from Consolateum
	ai_will_do = {
		base = 0

		# 100% chance at 50 zeal
		ai_value_modifier = {
			ai_zeal = 2
		}

		modifier = {
			add = 40
			is_close_family_of = primary_heir
		}
	}
}

#Pagan Decisions
automutiliation_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = automutiliation_decision_desc
	selection_tooltip = automutiliation_decision_tooltip
	major = yes

	is_shown = {
		faith = { has_doctrine = special_doctrine_sacred_eunuchs }
	}

	is_valid = {
		has_trait = zealous
		#You can't hurt yourself without at least an heir
		trigger_if = {
			limit = { is_ruler = yes }
			custom_description = {
				text = is_a_ruler_and_has_a_player_heir
				exists = player_heir
			}
		}
	}

	effect = {
		save_scope_as = actor
		hidden_effect = { add_piety_level = 1 }
		show_as_tooltip = { add_piety_level = 1 }
		add_trait = devoted
		add_trait = eunuch
		
		#Remove spouses and spouse adjacent
		if = {
			limit = { is_married = yes }
			every_spouse = { divorce = scope:actor }
		}
		if = {
			limit = { exists = betrothed }
			break_betrothal = betrothed
		}
		if = {
			limit = { is_concubine = yes }
			this.concubinist = { remove_concubine = scope:actor }
		}
		if = {
			limit = { number_of_concubines > 0 }
			every_concubine = { scope:actor = { remove_concubine = prev } }
		}
		show_as_tooltip = {
			random_list = {
				90 = {}
				4 = { add_trait = ill }
				3 = { add_trait = wounded_1 }
				2 = { add_trait = wounded_2 }
				1 = { add_trait = wounded_3 }
			}
		}
	}
	
	ai_check_interval = 60
	
	ai_potential = {
		exists = primary_heir
		primary_heir = { dynasty = root.dynasty }
		is_at_war = no
	}

	#Cribbed from Consolateum
	ai_will_do = {
		base = 0

		# 100% chance at 50 zeal
		ai_value_modifier = {
			ai_zeal = 2
		}

		modifier = {
			add = 40
			is_close_family_of = primary_heir
		}
	}
}

#Hindu Decisions

#Philosophies
# Orthodox Schools: Samkhya, Yoga, Vedanta, Vaiśeṣika, Nyaya, Mīmāṃsā
# Hetrodox Schools: Sramana, Carvaka, Ajivika

select_hindu_philosophy_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = select_hindu_philosophy_decision_desc
	selection_tooltip = select_hindu_philosophy_decision_tooltip

	is_shown = {
		religion = religion:hinduism_religion
		is_adult = yes
	}

	is_valid = {
		has_trait = scholar
	}

	is_valid_showing_failures_only = {
		# Have to at _least_ not be in piety debt.
		piety >= 0
		is_imprisoned = no
	}

	cooldown = { years = 2 }

	#Link triggers to BP_hindu_decisions.txt
	effect = {
		show_as_tooltip = {
			random_list = {
				desc = select_hindu_philosophy_decision_tt
				100 = {
					show_chance = no
					desc = select_hindu_philosophy_decision.samkhya
					add_trait = hindu_philosophy_samkhya
				}
				100 = {
					trigger = { NOT = { has_trait = cynical } }
					show_chance = no
					desc = select_hindu_philosophy_decision.yoga
					add_trait = hindu_philosophy_yoga
				}
				100 = {
					show_chance = no
					desc = select_hindu_philosophy_decision.nyaya
					add_trait = hindu_philosophy_nyaya
				}
				100 = {
					show_chance = no
					desc = select_hindu_philosophy_decision.vaisheshika
					add_trait = hindu_philosophy_vaisheshika
				}
				100 = {
					show_chance = no
					desc = select_hindu_philosophy_decision.mimamsa
					add_trait = hindu_philosophy_mimamsa
				}
				100 = {
					show_chance = no
					desc = select_hindu_philosophy_decision.vedanta
					add_trait = hindu_philosophy_vedanta
				}
				100 = {
					trigger = { NOT = { has_trait = zealous } }
					show_chance = no
					desc = select_hindu_philosophy_decision.charvaka
					add_trait = hindu_philosophy_charvaka
				}
				100 = {
					trigger = { NOT = { has_trait = zealous } }
					show_chance = no
					desc = select_hindu_philosophy_decision.ajivika
					add_trait = hindu_philosophy_ajivika
				}
			}
		}
		trigger_event = hindu_decision.0101
	}

	ai_check_interval = 96
	
	ai_potential = {
		piety >= minor_piety_value
		NOR = {
			has_trait = hindu_philosophy_samkhya
			has_trait = hindu_philosophy_yoga
			has_trait = hindu_philosophy_nyaya
			has_trait = hindu_philosophy_vaisheshika
			has_trait = hindu_philosophy_mimamsa
			has_trait = hindu_philosophy_vedanta
			has_trait = hindu_philosophy_charvaka
			has_trait = hindu_philosophy_ajivika
		}
	}

	ai_will_do = {
		base = 100
	}
}
