set_capital_constantinople_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"

	desc = set_capital_constantinople_decision_desc
	selection_tooltip = set_capital_constantinople_decision_tooltip
	major = yes

	ai_check_interval = 12

	is_shown = {
		is_ruler = yes
		is_landed = yes
		OR = {
			has_title = title:e_byzantium
			has_title = title:e_roman_empire
		}
		NOR = {
			capital_county = { this = title:c_byzantion }
			capital_county = { this = title:c_roma }
		}
		OR = {
			title:c_byzantion.holder = { any_liege_or_above = { this = root } }
			title:c_byzantion.holder = { this = root }
		}
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_independent_ruler = yes
	}

	effect = {
		if = { #Usurp if not held personally.
			limit = {
				NOT = { title:c_byzantion.holder = { this = root } }
			}
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:c_byzantion = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change

		}
		set_realm_capital = title:c_byzantion
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = { #Do it always, for coherence.
		base = 100
	}
}

set_capital_rome_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"

	desc = set_capital_rome_decision_desc
	selection_tooltip = set_capital_rome_decision_tooltip
	major = yes

	ai_check_interval = 12

	is_shown = {
		is_ruler = yes
		is_landed = yes
		OR = {
			has_title = title:e_roman_empire
			has_title = title:e_wre
		}
		NOR = {
			capital_county = { this = title:c_roma }
			capital_county = { this = title:c_byzantion }
		}
		OR = {
			title:c_roma.holder = { any_liege_or_above = { this = root } }
			title:c_roma.holder = { this = root }
		}
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_independent_ruler = yes
	}

	effect = {
		if = { #Usurp if not held personally.
			limit = {
				NOT = { title:c_roma.holder = { this = root } }
			}
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			title:c_roma = {
				change_title_holder = {
					holder = root
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change

		}
		set_realm_capital = title:c_roma
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = { #Do it always, for coherence.
		base = 100
	}
}
