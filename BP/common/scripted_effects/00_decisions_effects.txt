##### Change from Vanilla vvvv
reclaim_britannia_decision_effect = {
	every_sub_realm_county = {
		limit = {
			NOT = { culture_group = culture_group:celtic_group }
			title_province = { geographical_region = world_europe_west_britannia }
		}
		custom = british_isles.0001.custom
		add_county_modifier = {
			modifier = reclaim_britannia_culture_modifier
			days = 3650
		}
	}
	capital_county = { set_county_culture = root.culture }
	if = {
		limit = {
			OR = {
				culture = culture:gaelic
				culture = culture:irish
			}
		}
		give_nickname = nick_the_tuatha_de_danann
	}
	else = { give_nickname = nick_pendragon }
}
##### Change from Vanilla ^^^^

create_holy_order_effect = {
	if = {
		limit = {
			exists = faith.religious_head
		}
		faith.religious_head = {
			add_opinion = {
				target = root
				modifier = founded_holy_order_opinion
			}
		}
	}
	if = {
		limit = {
			NOT = { has_character_modifier = founded_holy_order_modifier }
		}
		add_character_modifier = {
			modifier = founded_holy_order_modifier
			years = 5
		}
	}
	faith = {
		change_fervor = 10
	}
}

#### Changed from Vanilla: Removed form_portugal_decision_effects

#### Changed from Vanilla: Removed unite_the_spanish_thrones_decision_effects

#### Changed from Vanilla vvvv
unite_africa_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Religion bonuses
	if = {
		limit = {
			faith = {
				OR = {
					religion_tag = islam_religion
					religion_tag = west_african_roog_religion
					religion_tag = west_african_religion
					religion_tag = west_african_bori_religion
					this = faith:miaphysitism

				}
			}
		}
		add_piety = massive_piety_gain
		faith = { change_fervor = medium_fervor_gain }

		if = {
			limit = {
				any_vassal_or_below = {
					NOT = { faith = scope:africa_uniter.faith }
					is_ai = yes
					exists = capital_province
					capital_province = { geographical_region = world_africa }
				}
			}
			every_vassal_or_below = {
				custom = every_non_root_faith_vassal_africa
				limit = {
					NOT = { faith = scope:africa_uniter.faith }
					is_ai = yes
					exists = capital_province
					capital_province = { geographical_region = world_africa }
				}
				random = {
					chance = 33
					set_character_faith = scope:africa_uniter.faith
				}
			}
		}

		if = {
			limit = {
				any_realm_province = {
					NOT = { faith = scope:africa_uniter.faith }
					geographical_region = world_africa
				}
			}
			every_realm_province = {
				limit = {
					NOT = { faith = scope:africa_uniter.faith }
					geographical_region = world_africa
				}
				county = { add_to_list = every_realm_county }
			}

			every_in_list = {
				list = every_realm_county
				custom = every_non_root_faith_county_africa
				random = {
					chance = 33
					custom_tooltip = every_non_africa_uniter_faith_convert
					hidden_effect = { set_county_faith = scope:africa_uniter.faith }
				}
			}
		}
	}
}
#### Changed from Vanilla ^^^^

#### Changed from Vanilla: removed avenge_the_battle_of_tours_decision_effects

unite_the_western_slavs_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Innovations
	culture = {
		add_random_innovation = culture_group_military
		add_random_innovation = culture_group_civic
	}

	#Laws
	if = {
		limit = { has_realm_law = crown_authority_0 }
		add_realm_law_skip_effects = crown_authority_2
	}
	else_if = {
		limit = {
			OR = {
				has_realm_law = crown_authority_1
				has_realm_law = crown_authority_2
			}
		}
		add_realm_law_skip_effects = crown_authority_3
	}

	#Handle de jure drift & destructions of other kingdom titles
	title:k_poland = { add_to_list = west_slavic_kingdoms }
	title:k_pomerania = { add_to_list = west_slavic_kingdoms }
	title:k_bohemia = { add_to_list = west_slavic_kingdoms }
	title:k_moravia = { add_to_list = west_slavic_kingdoms }

	if = {
		limit = { highest_held_title_tier = tier_kingdom }
		custom_tooltip = unite_the_western_slavs_decision_titles_tt
	}
	else = { custom_tooltip = unite_the_western_slavs_decision_titles_empire_tt }
	hidden_effect = {
		scope:western_slav_uniter = {
			#If king-tier, proceed as normal.
			if = {
				limit = { highest_held_title_tier = tier_kingdom }
				primary_title = { save_scope_as = wsu_primary_title }
				every_in_list = {
					list = west_slavic_kingdoms
					limit = {
						NOT = { this = scope:wsu_primary_title }
						scope:western_slav_uniter = { completely_controls = prev }
					}
					#De jure shift all held west slavic titles into your primary title
					every_in_de_jure_hierarchy = {
						limit = { tier = tier_duchy }
						set_de_jure_liege_title = scope:western_slav_uniter.primary_title
					}
				}
				#Destroy the waste titles
				every_in_list = {
					list = west_slavic_kingdoms
					limit = {
						NOT = { this = scope:wsu_primary_title }
					}
					scope:western_slav_uniter = { destroy_title = prev }
				}
			}
			#If higher than king tier, drift kingdoms to empire
			else = {
				every_in_list = {
					list = west_slavic_kingdoms
					set_de_jure_liege_title = scope:western_slav_uniter.primary_title
				}
			}
		}
	}	
}

unite_the_southern_slavs_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Innovations
	culture = {
		add_random_innovation = culture_group_military
		add_random_innovation = culture_group_civic
	}

	#Handle de jure drift & destructions of other kingdom titles
	title:k_croatia = { add_to_list = south_slavic_kingdoms }
	title:k_serbia = { add_to_list = south_slavic_kingdoms }
	title:k_bulgaria = { add_to_list = south_slavic_kingdoms }
	title:k_dacia = { add_to_list = south_slavic_kingdoms }
	title:k_moldavia = { add_to_list = south_slavic_kingdoms }

	custom_tooltip = unite_the_southern_slavs_decision_titles_tt
	hidden_effect = {
		every_in_list = {
			list = south_slavic_kingdoms
			limit = {
				NOT = { this = scope:southern_slav_uniter.primary_title }
				scope:southern_slav_uniter = { completely_controls = prev }
			}

			#De jure shift all held west slavic titles into your primary title
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = scope:southern_slav_uniter.primary_title
			}

			#Destroys them all!
			scope:southern_slav_uniter = { destroy_title = prev }
		}
	}
}

unite_the_slavs_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Innovations
	custom_tooltip = unite_the_slavs_decision_effects_innovations_tt
	hidden_effect = {
		#Add all Slavic cultures in the realm in a list
		every_vassal_or_below = {
			limit = {
				OR = {
					has_culture_group = culture_group:west_slavic_group
					has_culture_group = culture_group:east_slavic_group
					has_culture_group = culture_group:south_slavic_group
				}
				save_temporary_scope_as = slavic_vassal
				NOT = {
					any_in_list = {
						list = slavic_cultures
						this = scope:slavic_vassal.culture
					}
				}
			}
			culture = {
				add_to_list = slavic_cultures
			}
		}
		#Add innovations from 3 random cultures
		every_in_list = {
			list = slavic_cultures
			save_scope_as = culture_getting_innovations

			set_while_counter_variable_effect = yes
			while = {
				limit = { var:while_counter < 3 }
				random_in_list = {
					limit = { scope:culture_getting_innovations = { can_get_innovation_from = prev } }
					list = slavic_cultures
					scope:culture_getting_innovations = { get_random_innovation_from = prev }
				}
				increase_while_counter_variable_effect = yes
			}
			remove_while_counter_variable_effect = yes
		}
	}

	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_slavia = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change

	set_primary_title_to = title:e_slavia
	title:e_slavia = { save_scope_as = slavia } #For localisation

	#Destroy the other three empires if I have them
	if = {
		limit = { has_title = title:e_russia }
		destroy_title = title:e_russia
	}
	if = {
		limit = { has_title = title:e_wendish_empire }
		destroy_title = title:e_wendish_empire
	}
	if = {
		limit = { has_title = title:e_carpathia }
		destroy_title = title:e_carpathia
	}

	###Handle de jure drift and empire destruction###

	#First: add all the kingdoms
	title:k_poland = { add_to_list = slavic_kingdoms }
	title:k_pomerania = { add_to_list = slavic_kingdoms }
	title:k_bohemia = { add_to_list = slavic_kingdoms }
	title:k_moravia = { add_to_list = slavic_kingdoms }
	title:k_croatia = { add_to_list = slavic_kingdoms }
	title:k_serbia = { add_to_list = slavic_kingdoms }
	title:k_bulgaria = { add_to_list = slavic_kingdoms }
	title:k_dacia = { add_to_list = slavic_kingdoms }
	title:k_moldavia = { add_to_list = slavic_kingdoms }
	title:k_white_rus = { add_to_list = slavic_kingdoms }
	title:k_galicia-volhynia = { add_to_list = slavic_kingdoms }
	title:k_ruthenia = { add_to_list = slavic_kingdoms }
	title:k_novgorod = { add_to_list = slavic_kingdoms }
	title:k_permia = { add_to_list = slavic_kingdoms }
	title:k_hungary = { add_to_list = slavic_kingdoms }

	# Inform players of the de jure drift
	title:e_slavia = { custom_tooltip = unite_the_slavs_decision_titles_tt } #Scope change for tooltip formatting.

	# Actually do the de jure drift
	hidden_effect = {
		every_in_list = {
			list = slavic_kingdoms

			set_de_jure_liege_title = scope:slav_uniter.primary_title
		}
	}
}

unite_india_decision_effect = {
	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_india = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	set_primary_title_to = title:e_india

	title:e_rajastan = { add_to_list = indian_empire }
	title:e_deccan = { add_to_list = indian_empire }
	title:e_bengal = { add_to_list = indian_empire }

	every_in_list = {
		list = indian_empire
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_kingdom
			}
			set_de_jure_liege_title = title:e_india
		}
	}

	hidden_effect = {
		if = {
			limit = { has_title = title:e_rajastan }
			destroy_title = title:e_rajastan
		}
		if = {
			limit = { has_title = title:e_deccan }
			destroy_title = title:e_deccan
		}
		if = {
			limit = { has_title = title:e_bengal }
			destroy_title = title:e_bengal
		}
	}
}

become_saoshyant_decision_effect = {
	set_nickname_effect = { NICKNAME = nick_the_saoshyant }
	add_trait = saoshyant
	custom_tooltip = become_saoshyant_decision_decendant_trait_tooltip
	dynasty = {
		add_dynasty_modifier = {
			modifier = resurging_saoshyant
			years = 25
		}
	}
	if = {
		limit = {
			any_held_title = {
				tier = tier_county
				NOT = { faith = root.faith }
			}
		}
		every_held_title = {
			custom = all_held_counties
			limit = {
				tier = tier_county
				NOT = { faith = root.faith }
			}
			random = {
				chance = 35
				set_county_faith = root.faith
			}
		}
	}
	faith = { change_fervor = 15 }
}

build_grand_church_decision_effect = {
	faith = { activate_holy_site = segrada_familia }
	if = {
		limit = {
			prestige_level < 5
		}
		add_prestige_level = 1
	}
}

accept_cannibalism_decision_effect = {
	custom_tooltip = faith_accept_cannibalism
	root.faith = {
		set_variable = {
			name = accepted_cannibalism
			value = yes
		}
	}
	root = {
		if = {
			limit = {
				any_spouse = {
					is_cannibal_trigger = no
					is_ai = yes
				}
			}
			every_spouse = {
				limit = {
					is_cannibal_trigger = no
					is_ai = yes
				}
				add_trait = cannibal
			}
		}
		if = {
			limit = {
				any_close_family_member = {
					is_cannibal_trigger = no
					is_landed = no
					is_ai = yes
				}
			}
			every_close_family_member = {
				limit = {
					is_cannibal_trigger = no
					is_landed = no
					is_ai = yes
				}
				custom = all_my_family_members
				add_trait = cannibal
			}
		}
		if = {
			limit = {
				any_vassal = {
					is_cannibal_trigger = no
					is_ai = yes
					dread_modified_ai_boldness = { #all vassals that are intimidated
						dreaded_character = root
						value <= -50
					}
				}
			}
			every_vassal = {
				limit = {
					is_cannibal_trigger = no
					is_ai = yes
					dread_modified_ai_boldness = {
						dreaded_character = root
						value <= -50
					}
				}
				custom = all_my_intimidated_vassals
				add_trait = cannibal
			}
		}
	}
	give_nickname = nick_the_devourer
}

found_university_decision_event_effect = {
	if = {
		limit = {
			NOT = { has_nickname = nick_the_scholar }
		}
		give_nickname = nick_the_scholar
	}

	hidden_effect = {
		#Event that gives you highly skilled courtier
		random = {
			chance = 75
			trigger_event = {
				id = major_decisions.2011
				days = { 50 365 }
			}
		}
	}
}

found_university_decision_effect = {
	found_university_decision_event_effect = yes

	if = {
		limit = {
			NOT = { has_variable = university }
		}
		show_as_tooltip = {
			every_held_title = {
				custom = decision_found_university_custom
				limit = { tier = tier_barony }
				title_capital_county.title_province = {
					add_special_building_slot = generic_university
				}
			}
		}
	}
}

lunatic_building_decision_effect = {
	capital_province = {
		set_variable = { #To unlock the building
			name = variable_greenhouse
			value = yes
		}
		add_building_slot = 1
		add_building = special_greenhouse_01
	}
	
	give_nickname = nick_the_glass
}

found_witch_coven_decision_effects = {
	save_scope_as = founder
	custom_tooltip = found_witch_coven_decision_effects.children.tt
	custom_tooltip = found_witch_coven_decision_effects.convert.tt
	custom_tooltip = found_witch_coven_decision_effects.grand_rite.tt
	house = {
		add_house_modifier = {
			modifier = witch_coven
		}
	}
	# Check for the Volva achievement.
	if = {
		limit = {
			# DLC check.
			has_fp1_dlc_trigger = yes
			fp1_achievement_religious_norse_trigger = yes
		}
		add_achievement_flag_effect = { FLAG = volva_achievement_flag }
	}
}

convert_whole_realm_to_feudalism_effect = {
	#TOOLTIP INFO
	#PLAYER EFFECTS
	##Liege has clan? Convert to clan!
	if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = clan_government }
		}
		change_government = clan_government
	}
	##Liege has feudal? Convert to feudal!
	else_if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = feudal_government }
		}
		change_government = feudal_government
	}
	##You're an independent Muslim? Convert to clan!
	else_if = {
		limit = {
			is_independent_ruler = yes
			faith = { religion_tag = islam_religion }
		}
		change_government = clan_government
	}
	##You're an independent anything else? Convert to feudal!
	else = { change_government = feudal_government }
	##General
	custom_tooltip = all_holding_will_change
	##Liege has clan? Convert to clan!
	if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = clan_government }
		}
		custom_tooltip = clan_liege_vassals_will_convert
	}
	#Liege has feudal? Convert to feudal!
	if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = feudal_government }
		}
		custom_tooltip = feudal_liege_vassals_will_convert
	}
	##If I am Islamic, we will become clan.
	if = {
		limit = {
			is_independent_ruler = yes
			faith = { religion_tag = islam_religion }
		}
		custom_tooltip = islamic_vassals_will_convert
	}
	##If I am not Islamic, we will become feudal.
	else_if = {
		limit = { is_independent_ruler = yes }
		custom_tooltip = other_vassals_will_convert
	}

	hidden_effect = {
		#Nuke tribal authorities.
		if = {
			limit = { has_realm_law = tribal_authority_0 }
			remove_realm_law = tribal_authority_0
		}
		if = {
			limit = { has_realm_law = tribal_authority_1 }
			remove_realm_law = tribal_authority_1
		}
		if = {
			limit = { has_realm_law = tribal_authority_2 }
			remove_realm_law = tribal_authority_2
		}
		if = {
			limit = { has_realm_law = tribal_authority_3 }
			remove_realm_law = tribal_authority_3
		}
		#Start off crown authorities.
		if = {
			limit = {
				NOT = { has_realm_law = crown_authority_0 }
			}
			add_realm_law_skip_effects = crown_authority_0
		}

		#Also convert every vassal.
		#Liege has taken clan, so become clan.
		if = {
			limit = {
				has_government = clan_government
			}
			every_vassal_or_below = {
				limit = { has_government = tribal_government }
				change_government = clan_government
				#Nuke tribal authorities.
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_0 }
					}
					add_realm_law_skip_effects = crown_authority_0
				}
			}
		}
		#Liege is not clan, become feudal.
		else = {
			every_vassal_or_below = {
				limit = { has_government = tribal_government }
				change_government = feudal_government
				#Nuke tribal authorities.
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_0 }
					}
					add_realm_law_skip_effects = crown_authority_0
				}
			}
		}
		
		## Spawn holdings in tribal counties
		
		every_sub_realm_county = { # Spawn temples in your holy sites
			limit = {
				any_county_province = {
					has_holding_type = tribal_holding
				}
				NOT = {
					any_county_province = {
						has_holding_type = church_holding
					}
				}
				any_county_province = {
					has_holding = no
					barony = {
						is_holy_site_of = root.faith
					}
				}
			}
			random_county_province = {
				limit = {
					has_holding = no
					barony = {
						is_holy_site_of = root.faith
					}
				}
				set_holding_type = church_holding
			}
		}
		
		every_sub_realm_county = { # Spawn a City
			limit = {
				any_county_province = {
					has_holding_type = tribal_holding
				}
				any_county_province = {
					has_holding = no
				}
				NOT = {
					any_county_province = {
						has_holding_type = city_holding
					}
				}
			}
			random_county_province = {
				limit = {
					has_holding = no
					OR = {
						terrain = floodplains
						terrain = oasis
						terrain = farmlands
					}
					is_coastal = yes
					has_special_building_slot = no
				}
				alternative_limit = {
					has_holding = no
					OR = {
						terrain = floodplains
						terrain = oasis
						terrain = farmlands
					}
					has_special_building_slot = no
				}
				alternative_limit = {
					has_holding = no
					OR = {
						terrain = floodplains
						terrain = oasis
						terrain = farmlands
					}
				}
				alternative_limit = {
					has_holding = no
				}
				random = {
					chance = 60
					modifier = {
						add = county.development_level
					}
					modifier = {
						add = 50
						this.county = root.capital_county
					}
					modifier = {
						add = 20
						OR = {
							terrain = floodplains
							terrain = oasis
							terrain = farmlands
						}
					}
					set_holding_type = city_holding
				}
			}
		}
		
		every_sub_realm_county = { # Spawn a Temple
			limit = {
				any_county_province = {
					has_holding_type = tribal_holding
				}
				any_county_province = {
					has_holding = no
				}
				NOT = {
					any_county_province = {
						has_holding_type = church_holding
					}
				}
			}
			random_county_province = {
				limit = {
					has_holding = no
					OR = {
						terrain = floodplains
						terrain = oasis
						terrain = farmlands
					}
					is_coastal = yes
					has_special_building_slot = no
				}
				alternative_limit = {
					has_holding = no
					OR = {
						terrain = floodplains
						terrain = oasis
						terrain = farmlands
					}
					has_special_building_slot = no
				}
				alternative_limit = {
					has_holding = no
					OR = {
						terrain = floodplains
						terrain = oasis
						terrain = farmlands
					}
				}
				alternative_limit = {
					has_holding = no
				}
				random = {
					chance = 50
					modifier = {
						add = county.development_level
					}
					modifier = {
						add = 50
						this.county = root.capital_county
					}
					modifier = {
						add = 20
						OR = {
							terrain = floodplains	
							terrain = oasis
							terrain = farmlands
						}
					}
					set_holding_type = church_holding
				}
			}
		}

		##Sort out new buildings for liege and all vassals
		every_realm_province = {
			limit = {
				has_holding_type = tribal_holding
				NOT = { is_in_list = feudal_conversion }
			}
			add_to_list = feudal_conversion

		}
		every_vassal_or_below = {
			every_realm_province = {
				limit = {
					has_holding_type = tribal_holding
					NOT = { is_in_list = feudal_conversion }
				}
				add_to_list = feudal_conversion

			}
		}
		every_in_list = {
			list = feudal_conversion
			set_variable = {
				name = tribal_to_feudal_building_level
				value = combined_building_level
				days = 1
			}
			set_holding_type = castle_holding
			while = {
				limit = {
					var:tribal_to_feudal_building_level > 1
				}
				generate_building = yes
				change_variable = {
					name = tribal_to_feudal_building_level
					subtract = 1
				}
			}
			remove_variable = tribal_to_feudal_building_level
			remove_from_list = feudal_conversion
		}
	}
}

##################################################
# Add Special Succession Effects

special_succession_witengamot_effect = {
	if = {
		limit = { highest_held_title_tier = tier_empire }
		every_held_title = {
			limit = {
				tier = tier_empire
				NOR = {
					has_title_law_flag = advanced_succession_law
					has_title_law_flag = elective_succession_law
				}
			}
			add_title_law = saxon_elective_succession_law
		}
		every_vassal = {
			limit = { special_succession_witengamot_trigger = yes }
			add_opinion = {
				modifier = implemented_traditional_succession_law_opinion
				years = 20
				target = root
			}
			custom = major_decisions.3100.tt_opinion_witengamot
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_kingdom
				NOR = {
					has_title_law_flag = advanced_succession_law
					has_title_law_flag = elective_succession_law
				}
			}
			add_title_law = saxon_elective_succession_law
		}
		every_vassal = {
			limit = { special_succession_witengamot_trigger = yes }
			add_opinion = {
				modifier = implemented_traditional_succession_law_opinion
				years = 20
				target = root
			}
			custom = major_decisions.3100.tt_opinion_witengamot
		}
	}
}

special_succession_thing_effect = {
	if = {
		limit = { highest_held_title_tier = tier_empire }
		every_held_title = {
			limit = {
				tier = tier_empire
				NOR = {
					has_title_law_flag = advanced_succession_law
					has_title_law_flag = elective_succession_law
				}
			}
			add_title_law = scandinavian_elective_succession_law
		}
		every_vassal = {
			limit = { special_succession_thing_trigger = yes }
			add_opinion = {
				modifier = implemented_traditional_succession_law_opinion
				years = 20
				target = root
			}
			custom = major_decisions.3100.tt_opinion_thing
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_kingdom
				NOR = {
					has_title_law_flag = advanced_succession_law
					has_title_law_flag = elective_succession_law
				}
			}
			add_title_law = scandinavian_elective_succession_law
		}
		every_vassal = {
			limit = { special_succession_thing_trigger = yes }
			add_opinion = {
				modifier = implemented_traditional_succession_law_opinion
				years = 20
				target = root
			}
			custom = major_decisions.3100.tt_opinion_thing
		}
	}
}

special_succession_tanistry_effect = {
	if = {
		limit = { highest_held_title_tier = tier_empire }
		every_held_title = {
			limit = {
				tier = tier_empire
				NOR = {
					has_title_law_flag = advanced_succession_law
					has_title_law_flag = elective_succession_law
				}
			}
			add_title_law = gaelic_elective_succession_law
		}
		every_vassal = {
			limit = { special_succession_tanistry_trigger = yes }
			add_opinion = {
				modifier = implemented_traditional_succession_law_opinion
				years = 20
				target = root
			}
			custom = major_decisions.3100.tt_opinion_tanistry
		}
	}
	else = {
		every_held_title = {
			limit = {
				tier = tier_kingdom
				NOR = {
					has_title_law_flag = advanced_succession_law
					has_title_law_flag = elective_succession_law
				}
			}
			add_title_law = gaelic_elective_succession_law
		}
		every_vassal = {
			limit = { special_succession_tanistry_trigger = yes }
			add_opinion = {
				modifier = implemented_traditional_succession_law_opinion
				years = 20
				target = root
			}
			custom = major_decisions.3100.tt_opinion_tanistry
		}
	}
}

##### Change from Vanilla: Removed Danelaw effects

##################################################
# Found Cadet House Effects
found_cadet_house_decision_effect = {
	hidden_effect = {
		house.house_head = {
			save_scope_as = former_house_head
		}
		house = {
			save_scope_as = former_house
		}
		add_achievement_flag_effect = { FLAG = achievement_a_house_of_my_own_flag }
	}
	create_cadet_branch = yes
	add_prestige = $PRESTIGE$
	hidden_effect = {
		save_scope_as = new_head
		house = {
			save_scope_as = new_house
		}
		every_player = {
			limit = {
				exists = house
				house = scope:new_house
				NOT = { this = $CHARACTER$ }
			}
			send_interface_toast = {
				type = msg_created_new_house
				title = created_cadet_branch_toast_new_house_desc
				left_icon = scope:new_head
				desc = created_cadet_branch_toast_new_house_other_tt
			}
		}
		send_interface_toast = {
			type = msg_created_new_house
			title = created_cadet_branch_toast_new_house_desc
			left_icon = scope:new_head
			right_icon = scope:former_house_head
			desc = created_cadet_branch_toast_new_house_other_tt
		}
	}
}
