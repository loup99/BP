# Bureaucratic Effects
apply_taxation_down_tree = {
	every_vassal_or_below = {
		if = {
			limit = {
				OR = {
					has_government = bureaucratic_government
					has_government = gubernatorial_government
				}
				NOT = { has_realm_law = bureaucratic_taxation_$VALUE$ }
			}
			add_realm_law_skip_effects = bureaucratic_taxation_$VALUE$
		}
	}
}

get_and_apply_previous_taxation_effect = {
	if = {
		limit = { $LIEGE$ = { has_realm_law = bureaucratic_taxation_0 } }
		apply_taxation_down_tree = { VALUE = 0 }
	}
	else_if = {
		limit = { $LIEGE$ = { has_realm_law = bureaucratic_taxation_1 } }
		apply_taxation_down_tree = { VALUE = 1 }
	}
	else_if = {
		limit = { $LIEGE$ = { has_realm_law = bureaucratic_taxation_2 } }
		apply_taxation_down_tree = { VALUE = 2 }
	}
	else_if = {
		limit = { $LIEGE$ = { has_realm_law = bureaucratic_taxation_3 } }
		apply_taxation_down_tree = { VALUE = 3 }
	}
	else_if = {
		limit = { $LIEGE$ = { has_realm_law = bureaucratic_taxation_4 } }
		apply_taxation_down_tree = { VALUE = 4 }
	}
}

change_vassal_gubernatorial_governments = {
	every_vassal_or_below = {
		limit = { primary_title.tier > tier_barony }
		if = {
			limit = { has_government = gubernatorial_government }
			change_government = subroman_government
			inherit_correct_subroman_taxation_law_effect = {
				TITLE_BEQUEATHER = this.liege
				TARGET = this
			}
		}
	}
}

# Eranshar Effects

#Replaces current clerical succession with new law
replace_current_clerical_succession = {
	if = {
		limit = { has_doctrine = doctrine_clerical_succession_temporal_appointment }
		remove_doctrine = doctrine_clerical_succession_temporal_appointment
	}
	else_if = {
		limit = { has_doctrine = doctrine_clerical_succession_spiritual_appointment }
		remove_doctrine = doctrine_clerical_succession_spiritual_appointment
	}
	else_if = {
		limit = { has_doctrine = doctrine_clerical_succession_temporal_fixed_appointment }
		remove_doctrine = doctrine_clerical_succession_temporal_fixed_appointment
	}
	else_if = {
		limit = { has_doctrine = doctrine_clerical_succession_spiritual_fixed_appointment }
		remove_doctrine = doctrine_clerical_succession_spiritual_fixed_appointment
	}
	else = { debug_log = "Found some unknown clerical succession doctrine. FIXME!" }
	add_doctrine = $THE_NEW_DOCTRINE$
}

# Sub-Roman Effects
decrease_subroman_taxation_one_level = {
	decrease_subroman_taxation_one_level_macro = { CHAR = $CHAR$ }
	every_vassal_or_below = {
		limit = { has_government = subroman_government }
		decrease_subroman_taxation_one_level_macro = { CHAR = this }
	}
}

decrease_subroman_taxation_one_level_macro = {
	if = {
		limit = { $CHAR$ = { has_realm_law = subroman_taxation_3 } }
		add_realm_law = subroman_taxation_2
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_taxation_2 } }
		add_realm_law = subroman_taxation_1
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_taxation_1 } }
		add_realm_law = subroman_taxation_0
	}
}

increase_population_anger = {
	increase_population_anger_macro = { CHAR = $CHAR$ }
	every_vassal_or_below = {
		limit = { has_government = subroman_government }
		increase_population_anger_macro = { CHAR = this }
	}
}

increase_population_anger_macro = {
	if = {
		limit = { $CHAR$ = { has_realm_law = subroman_popular_opinion_0 } }
		add_realm_law_skip_effects = subroman_popular_opinion_1
	}
}

improve_subroman_popular_opinion = {
	improve_subroman_popular_opinion_macro = { CHAR = $CHAR$ }
	every_vassal_or_below = {
		limit = { has_government = subroman_government }
		improve_subroman_popular_opinion_macro = { CHAR = this }
	}
}

improve_subroman_popular_opinion_macro = {
	if = {
		limit = { $CHAR$ = { has_realm_law = subroman_popular_opinion_1 } }
		add_realm_law_skip_effects = subroman_popular_opinion_0
	}
}

increase_feudal_transition = {
	increase_feudal_transition_macro = { CHAR = $CHAR$ }
	every_vassal_or_below = {
		limit = { has_government = subroman_government }
		increase_feudal_transition_macro = { CHAR = this }
	}
}

increase_feudal_transition_macro = {
	if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_0 } }
		add_realm_law_skip_effects = subroman_fedual_transition_1
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_1 } }
		add_realm_law_skip_effects = subroman_fedual_transition_2
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_2 } }
		add_realm_law_skip_effects = subroman_fedual_transition_3
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_3 } }
		add_realm_law_skip_effects = subroman_fedual_transition_4
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_4 } }
		add_realm_law_skip_effects = subroman_fedual_transition_5
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_5 } }
		add_realm_law_skip_effects = subroman_fedual_transition_6
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_6 } }
		add_realm_law_skip_effects = subroman_fedual_transition_7
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_7 } }
		add_realm_law_skip_effects = subroman_fedual_transition_8
	}
	else_if = {
		limit = { $CHAR$ = { has_realm_law = subroman_fedual_transition_8 } }
		add_realm_law_skip_effects = subroman_fedual_transition_9
	}
}

#Uses TITLE_BEQUEATHER because may no longer be your liege
inherit_correct_subroman_taxation_law_effect = {
	if = {
		limit = { $TITLE_BEQUEATHER$ = { has_government = subroman_government } }
		#Taxation
		if = {
			limit = { $TARGET$ = { has_subroman_taxation_law_trigger = no } }
			if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_taxation_3 } }
				add_realm_law_skip_effects = subroman_taxation_3
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_taxation_2 } }
				add_realm_law_skip_effects = subroman_taxation_2
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_taxation_1 } }
				add_realm_law_skip_effects = subroman_taxation_1
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_taxation_0 } }
				add_realm_law_skip_effects = subroman_taxation_0
			}
		}
		
		#The popular opinion resets as maybe the new liege will be kinder than the old one
		
		#And inherit the transistion variables
		if = {
			limit = { $TARGET$ = { has_subroman_transition_variables = no } }
			if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_9 } }
				add_realm_law_skip_effects = subroman_fedual_transition_9
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_8 } }
				add_realm_law_skip_effects = subroman_fedual_transition_8
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_7 } }
				add_realm_law_skip_effects = subroman_fedual_transition_7
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_6 } }
				add_realm_law_skip_effects = subroman_fedual_transition_6
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_5 } }
				add_realm_law_skip_effects = subroman_fedual_transition_5
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_4 } }
				add_realm_law_skip_effects = subroman_fedual_transition_4
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_3 } }
				add_realm_law_skip_effects = subroman_fedual_transition_3
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_2 } }
				add_realm_law_skip_effects = subroman_fedual_transition_2
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_1 } }
				add_realm_law_skip_effects = subroman_fedual_transition_1
			}
			else_if = {
				limit = { $TITLE_BEQUEATHER$ = { has_realm_law = subroman_fedual_transition_0 } }
				add_realm_law_skip_effects = subroman_fedual_transition_0
			}
		}
	}
	#Otherwise, default is fine!
}

# Crown-Authority Replacement Effects
# Governments with CA-like Mechanisims: Gupta, Eranshar, Feudal, High Tribal, Prefeudal
# Otherwise, should not use CA-like mechanisms when called in code

#The Macros
generic_reduce_crown_authority_level_effect = { add_realm_law = $LAW_TYPE$_$LEVEL$ }
reduce_crown_authority_level_effect = {
	if = {
		limit = { realm_law_use_crown_authority = yes }
		generic_reduce_crown_authority_level_effect = {
			LAW_TYPE = crown_authority
			LEVEL = $TO_LEVEL$
		}
	}
	else_if = {
		limit = { realm_law_use_high_tribal_organization = yes }
		generic_reduce_crown_authority_level_effect = {
			LAW_TYPE = high_tribal_organization
			LEVEL = $TO_LEVEL$
		}
	}
	else_if = {
		limit = { realm_law_use_prefeudal_authority = yes }
		generic_reduce_crown_authority_level_effect = {
			LAW_TYPE = prefeudal_authority
			LEVEL = $TO_LEVEL$
		}
	}
	else_if = {
		limit = { realm_law_use_gupta_authority = yes }
		generic_reduce_crown_authority_level_effect = {
			LAW_TYPE = gupta_authority
			LEVEL = $TO_LEVEL$
		}
	}
	else_if = {
		limit = { realm_law_use_eranshar_authority = yes }
		generic_reduce_crown_authority_level_effect = {
			LAW_TYPE = eranshar_authority
			LEVEL = $TO_LEVEL$
		}
	}
}
#The General Effect
reduce_crown_authority_effect = {
	if = {
		limit = { has_realm_law_level_1 = yes }
		reduce_crown_authority_level_effect = { TO_LEVEL = 0 }
	}
	if = {
		limit = { has_realm_law_level_2 = yes }
		reduce_crown_authority_level_effect = { TO_LEVEL = 1 }
	}
	if = {
		limit = { has_realm_law_level_3 = yes }
		reduce_crown_authority_level_effect = { TO_LEVEL = 2 }
	}
}
#For when we instantiate basic CA-like effects
apply_given_crown_authority_level_skip_effects_effect = {
	if = {
		limit = { realm_law_use_crown_authority = yes }
		add_realm_law_skip_effects = crown_authority_$LEVEL$
	}
	else_if = {
		limit = { realm_law_use_high_tribal_organization = yes }
		add_realm_law_skip_effects = high_tribal_organization_$LEVEL$
	}
	else_if = {
		limit = { realm_law_use_prefeudal_authority = yes }
		add_realm_law_skip_effects = prefeudal_authority_$LEVEL$
	}
	else_if = {
		limit = { realm_law_use_gupta_authority = yes }
		add_realm_law_skip_effects = gupta_authority_$LEVEL$
	}
	else_if = {
		limit = { realm_law_use_eranshar_authority = yes }
		add_realm_law_skip_effects = eranshar_authority_$LEVEL$
	}
}