##### Changed from Vanilla: Replaced brythonic, goidelic heritages
tradition_longbow_competitions = {
	category = combat
	layers = {
		0 = martial
		1 = western
		4 = bow.dds
	}
	
	##### Changed from Vanilla vvvvv
	is_shown = {
		OR = {
			has_cultural_pillar = heritage_west_germanic
			has_cultural_pillar = heritage_celtic
		}
	}
	##### Changed form Vanilla ^^^^^
	
	##### Changed from Vanilla vvvvv
	can_pick = {
		OR = {
			has_cultural_pillar = heritage_west_germanic
			has_cultural_pillar = heritage_celtic
		}
	}
	##### Changed form Vanilla ^^^^^
	
	parameters = {
		unlock_maa_longbowmen = yes
		archer_era_improvement = yes
	}
	character_modifier = {
		archers_max_size_add = 2
		heavy_cavalry_max_size_add = -2
		pikemen_max_size_add = -2
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			# Ethos requirement.
			if = {
				limit = {
					NOR = {
						# Stoic
						any_in_list = {
							list = traits
							this = flag:ethos_stoic
						}
						# Bureaucratic
						any_in_list = {
							list = traits
							this = flag:ethos_bureaucratic
						}
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_stoic_or_bureaucratic_desc
				}
			}
			# Certain number of archer MaA requirement.
			if = {
				limit = {
					scope:character = {
						number_maa_soldiers_of_base_type = {
							type = archers
							# Remember to sync the below with longbow_competitions_minimum_archer_maa_value.
							value < 1200
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = culture_head_lacks_archer_maa_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		if = {
			limit = {
				OR = {
					culture_has_pikemen_maa = yes
					culture_has_heavy_cavalry_maa = yes
				}
			}
			multiply = 0
		}
	}
}

##### Changed from Vanilla: Not available to Arabic heritages
tradition_warriors_of_the_dry = {
	category = combat

	layers = {
		0 = martial
		1 = mena
		4 = desert.dds
	}
	
	##### Changed from Vanilla vvvvv
	is_shown = { #Replaced by Mubarizuns
		NOR = {
			has_cultural_pillar = heritage_arabic
			has_cultural_pillar = heritage_south_semitic
		}
	}
	##### Changed from Vanilla ^^^^^
	
	can_pick = {
		culture_not_pacifistic_trigger = yes
		custom_description = {
			text = culture_in_dryland_desc
			any_culture_county = {
				any_county_province = {
					OR = {
						terrain = drylands
						terrain = desert
					}
				}
			}
		}
		NOT = { has_cultural_tradition = tradition_mubarizuns } #To prevent stacking after hybridization
	}
	parameters = {
		desert_warrior_trait_more_common = yes
		dry_trait_bonuses = yes
		can_recruit_dry_specialist = yes
	}
	province_modifier = {
		drylands_levy_size = 0.1
		desert_levy_size = 0.1
		drylands_supply_limit_mult = 0.25
		desert_supply_limit_mult = 0.25
	}
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_bellicose }
						any_in_list = { list = traits this = flag:ethos_stoic }
						any_in_list = { list = traits this = flag:ethos_communal }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_bellicose_stoic_or_communal_desc
				}
			}
			if = {
				limit = {
					NOT = {
						any_culture_county = {
							percent >= 0.3
							any_county_province = {
								OR = {
									terrain = drylands
									terrain = desert
								}
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = dry_percentage_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	ai_will_do = {
		value = 100
		if = {
			limit = {
				NOT = {
					scope:character = {
						any_sub_realm_county = {
							percent >= 0.2
							culture = scope:character.culture
							any_county_province = {
								OR = {
									terrain = drylands
									terrain = desert
								}
							}
						}
					}
				}
			}
			multiply = 0
		}
	}
}