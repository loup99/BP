on_title_gain = {
	on_actions = {
		#Government Handling stuff
		BP_handle_bureaucratic_succession
		BP_prevent_title_boostrapping
		BP_apply_title_laws
		BP_check_gubernatorial_status
		#Other On Actions
		BP_fall_of_rome
	}
}

#Handle Bureaucratic succession for landed chars
BP_handle_bureaucratic_succession = {
	effect = {
		if = {
			limit = { #Avoids a whole slew of related errors
				exists = scope:title.holder
				scope:title.tier = tier_empire
				scope:previous_holder = { has_government = bureaucratic_government }
			}
			#If the previous holder was bureaucratic, I become bureauctic (if having correct government)
			if = {
				limit = {
					root = {
						OR = { #Valid precursor governments
							has_government = subroman_government
							has_government = gubernatorial_government
							has_government = bureaucratic_government
							has_government = prefeudal_government
							has_government = feudal_government
						}
					}
				}
				#In the case of an external/non-bureaucratic_taxation ruler,
				#Update taxation rules after switching government
				if = {
					limit = {
						NOR = {
							has_realm_law = bureaucratic_taxation_0
							has_realm_law = bureaucratic_taxation_1
							has_realm_law = bureaucratic_taxation_2
							has_realm_law = bureaucratic_taxation_3
							has_realm_law = bureaucratic_taxation_4
						}
					}
					change_government = bureaucratic_government
					apply_taxation_down_tree = { VALUE = 2 }
				}
				#Otherwise, just switch government
				else = {
					change_government = bureaucratic_government
					
				}
			}
			else = {
				change_government = subroman_government
				inherit_correct_subroman_taxation_law_effect = {
					TITLE_BEQUEATHER = scope:previous_holder
					TARGET = root
				}
			}
			#Then, change the previous holder's government
			scope:previous_holder = {
				if = { #If not independent and under bureaucracy, adopt gubernatorial_government
					limit = {
						any_liege_or_above = {
							OR = {
								has_government = bureaucratic_government
								has_government = gubernatorial_government
							}
						}
					}
					change_government = gubernatorial_government
					get_and_apply_previous_taxation_effect = { LIEGE = root.liege } #Ensure proper taxation inherited
				}
				else = {
					change_government = subroman_government
					inherit_correct_subroman_taxation_law_effect = {
						TITLE_BEQUEATHER = scope:previous_holder
						TARGET = root
					}
				}
			}
		}
	}
}

#Give gubernatorial_government the correct title succession law
BP_apply_title_laws = {
	effect = {
		if = {
			limit = {
				scope:transfer_type = flag:granted
				root = { has_government = gubernatorial_government }
				NOT = { scope:title = { has_title_law = gubernatorial_elective_succession_law } }
				scope:title.tier >= tier_duchy
			}
			#Remove old laws and add the gubernatorial_elective_succession_law
			scope:title = {
				if = {
					limit = { has_title_law = feudal_elective_succession_law }
					remove_title_law = feudal_elective_succession_law
				}
				if = {
					limit = { has_title_law = princely_elective_succession_law }
					remove_title_law = princely_elective_succession_law
				}
				if = {
					limit = { has_title_law = saxon_elective_succession_law }
					remove_title_law = saxon_elective_succession_law
				}
				if = {
					limit = { has_title_law = scandinavian_elective_succession_law }
					remove_title_law = scandinavian_elective_succession_law
				}
				if = {
					limit = { has_title_law = gaelic_elective_succession_law }
					remove_title_law = gaelic_elective_succession_law
				}
				if = {
					limit = { has_title_law = mahestan_elective_succession_law }
					remove_title_law = mahestan_elective_succession_law
				}
				if = {
					limit = { has_title_law = kurultai_elective_succession_law }
					remove_title_law = kurultai_elective_succession_law
				}
				if = {
					limit = { has_title_law = eldership_elective_succession_law }
					remove_title_law = eldership_elective_succession_law
				}
				if = {
					limit = { has_title_law = tribal_elective_succession_law }
					remove_title_law = tribal_elective_succession_law
				}
				add_title_law = gubernatorial_elective_succession_law
			}
		}
		#If it has a gubernatorial_elective_succession_law but I'm not gubernatorial_government
		#remove the law
		if = {
			limit = {
				root = { NOT = { has_government = gubernatorial_government } }
				scope:title = { has_title_law = gubernatorial_elective_succession_law }
			}
			scope:title = { remove_title_law = gubernatorial_elective_succession_law }
		}
	}
}

#Prevent government boostraping effect
BP_prevent_title_boostrapping = {
	effect = {
		if = {
			limit = {
				AND = {
					scope:transfer_type = flag:granted #Only for title grants
					root = { #Only check if target has baronies/counties
						any_held_title = {
							count >= 1
							tier <= tier_county
						}
					}
					scope:title.tier <= tier_county
				}
			}
			#Unplayable Governments: Should not change whenever gaining titles
			if = {
				limit = {
					root = {
						OR = {
							has_government = republic_government
							has_government = mercenary_government
							has_government = holy_order_government
						}
					}
				}
			}
			#Theocracy (special)
			else_if = {
				limit = { scope:previous_holder = { has_government = theocracy_government } }
				change_government = theocracy_government
			}
			#Primitive Governments (can hold tribal_holding)
			else_if = {
				limit = { scope:previous_holder = { has_government = tribal_government } }
				change_government = tribal_government
			}
			else_if = {
				limit = { scope:previous_holder = { has_government = nomad_government } }
				change_government = nomad_government
			}
			else_if = {
				limit = { scope:previous_holder = { has_government = high_tribal_government } }
				change_government = high_tribal_government
			}
			#Advanced Governments (Cannot hold tribal_holding)
			else_if = {
				limit = { scope:previous_holder = { has_government = prefeudal_government } }
				if = {
					limit = { scope:title.title_province = { has_holding_type = tribal_holding } }
					change_government = high_tribal_government
				}
				else = { change_government = prefeudal_government }
			}
			else_if = {
				limit = { scope:previous_holder = { has_government = subroman_government } }
				if = {
					limit = { scope:title.title_province = { has_holding_type = tribal_holding } }
					change_government = high_tribal_government
				}
				else = {
					change_government = subroman_government
					inherit_correct_subroman_taxation_law_effect = {
						TITLE_BEQUEATHER = scope:previous_holder
						TARGET = root
					}
				}
			}
			else_if = {
				limit = { scope:previous_holder = { has_government = eranshar_government } }
				if = {
					limit = { scope:title.title_province = { has_holding_type = tribal_holding } }
					change_government = high_tribal_government
				}
				else = { change_government = eranshar_government }
			}
			else_if = {
				limit = { scope:previous_holder = { has_government = gupta_government } }
				if = {
					limit = { scope:title.title_province = { has_holding_type = tribal_holding } }
					change_government = high_tribal_government
				}
				else = { change_government = gupta_government } 
			}
			else_if = {
				limit = {
					scope:previous_holder = {
						OR = {
							has_government = gubernatorial_government
							has_government = bureaucratic_government
						}
					}
				}
				if = {
					limit = { scope:title.title_province = { has_holding_type = tribal_holding } }
					change_government = high_tribal_government
				}
				else = {
					change_government = gubernatorial_government #Errors
					get_and_apply_previous_taxation_effect = { LIEGE = root.liege }
				}
			}
		}
		else_if = {
			limit = {
				scope:transfer_type = flag:granted
				scope:previous_holder = { has_government = bureaucratic_government }
				scope:title = { tier = tier_barony }
				scope:title.title_province = { has_holding_type = castle_holding }
			}
			change_government = gubernatorial_government
			get_and_apply_previous_taxation_effect = { LIEGE = root.liege }
		}
	}
}

#When someone rules over a gubernatorial but doesn't have an appropriate government
BP_check_gubernatorial_status = {
	effect = {
		if = {
			limit = {
				NOR = {
					has_government = bureaucratic_government
					has_government = gubernatorial_government
				}
			}
			root = { change_vassal_gubernatorial_governments = yes }
		}
	}
}

#Fires when Rome falls
BP_fall_of_rome = {
	effect = {
		if = {
			limit = {
				#Only shocking the first time...
				NOT = { has_global_variable = fall_of_rome }
				title:c_roma.holder = {
					OR = {
						fall_of_rome_trigger = yes
						any_liege_or_above = { fall_of_rome_trigger = yes }
					}
				}
			}
			#Prevent from firing twice
			set_global_variable = {
				name = fall_of_rome
				value = title:c_roma.holder
			}
			every_ruler = { #Inform all playable characters
				limit = { primary_title.tier >= tier_county }
				trigger_event = { id = bp_narrative_events.0001 }
			}
		}
	}
}

on_title_destroyed = {
	on_actions = {
		BP_set_all_gubernatorials_to_subroman
	}
}

#On the off chance a bureaucratic title goes ka-pow, change all the independent gubernatorials
BP_set_all_gubernatorials_to_subroman = {
	effect = {
		every_independent_ruler = {
			if = {
				limit = { has_government = gubernatorial_government }
				this = { change_vassal_gubernatorial_governments = yes }
			}
		}
	}
}
