#Migration CB
# Originally written by Zusk, ported to CK3 by LT-Rascek
migration_war = { #Cribbed from Vanilla Invasions
	group = migration

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		current_year <= 800
		migration_cb_valid_religion_triggers = yes
		primary_title.tier <= tier_kingdom
		is_independent_ruler = yes
		NOT = { has_character_flag = launched_migration_war_recently }
	}

	allowed_for_character_display_regardless = {}
	
	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}
	target_titles = neighbor_land_or_water
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	valid_to_start = {
		scope:target = {
			any_in_de_jure_hierarchy = {
				tier = tier_county
				neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
			}
		}
	}

	cost = {}

	on_declaration = {
		on_declared_war = yes
		
		scope:attacker = {
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change_migration_declared
				add_claim_on_loss = no
			}
			#Liberate infidel/non-cultural vassals
			every_vassal = {
				limit = { primary_title.tier > tier_barony }
				
				if = {
					limit = {
						NOR = {
							faith = scope:attacker.faith
							culture = scope:attacker.culture
						}
					}
					becomes_independent = { change = scope:change_migration_declared }
				}
			}
			resolve_title_and_vassal_change = scope:change_migration_declared
			#Spawn armies in counties of the same faith & religion
			primary_title = {
				every_in_de_facto_hierarchy = {
					limit = {
						tier = tier_county
						culture = scope:attacker.culture
						faith = scope:attacker.faith
					}
					if = {
						limit = {
							culture = scope:attacker.culture
							faith = scope:attacker.faith
						}
						create_migratory_army = yes
						change_development_level = this.migration_depopulation
					}
				}
			}
		}
	}
	
	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = { target_is_same_character_or_above = scope:defender }
				}
			}
		}
	}

	on_invalidated_desc = {}
	
	on_invalidated = {}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = migration_war_victory_desc_attacker
			}
			desc = migration_war_victory_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = migration_war_warning_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		#Seize all holdings in the target kingdom
		every_in_list = {
			list = target_titles
			
			#Go over counties to seize
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					exists = holder
					holder = {
						OR = {
							target_is_liege_or_above = scope:defender
							this = scope:defender
						}
					}
				}
				add_to_temporary_list = titles_taken
			}
		}
		scope:attacker = { #Mark titles for later separation
			every_held_title = {
				limit = { tier = tier_county }
				add_to_temporary_list = attackers_counties
			}
		}
		#Seize counties outside of the target that are occupied
		scope:defender = {
			primary_title = {
				every_in_de_facto_hierarchy = {
					limit = { tier = tier_county }
					
					if = {
						limit = { this.county_controller = scope:attacker }
						add_to_temporary_list = titles_taken
					}
				}
			}
		}
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = 200
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 1
			LOSER_FAME_SCALE = -1
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
		
		#Add migratory invasion flag
		scope:attacker = {
			add_character_flag = {
				flag = launched_migration_war_recently
				years = 10
			}
		}
		hidden_effect = {
			#Liberate remaining vassals of your culture/religion
			scope:attacker = {
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change_victorious_migration
					add_claim_on_loss = yes
				}
				every_vassal = {
					limit = { primary_title.tier > tier_barony }
					becomes_independent = { change = scope:change_victorious_migration }
				}
			}
			every_in_list = {
				list = titles_taken
				
				change_development_level = this.migration_new_administration
				add_county_modifier = {
					modifier = county_recently_migrated_to_modifier
					years = 25
				}
			}
			#Create new chars and hand them the attacker's counties
			every_in_list = {
				list = attackers_counties
				
				add_county_modifier = {
					modifier = county_recently_migrated_away_modifier
					years = 25
				}
				change_county_control = -75
				
				create_character = {
					location = scope:attacker.location
					culture = this.culture
					faith = this.faith
					gender_female_chance = { #TODO: Make more-religion/culture dynamic
						if = {
							limit = { scope:attacker = { is_male = yes } }
							value = 0
						}
						else = {
							value = 100
						}
					}
					save_scope_as = new_char
				}
				change_title_holder = {
					holder = scope:new_char
					change = scope:change_victorious_migration
					take_baronies = yes
				}
				scope:new_char = {
					becomes_independent = { change = scope:change_victorious_migration }
				}
			}
			resolve_title_and_vassal_change = scope:change_victorious_migration
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = migration_war_white_peace_desc_defender
			}
			desc = migration_war_white_peace_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = migration_war_warning_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = { modifier = contributed_in_war }
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		scope:defender = { stress_impact = { arrogant = medium_stress_impact_gain } }
		
		#Add migratory invasion flag
		scope:attacker = {
			add_character_flag = {
				flag = launched_migration_war_recently
				years = 10
			}
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = migration_war_defeat_desc_defender
			}
			desc = migration_war_defeat_desc
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = migration_war_warning_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = { save_temporary_scope_as = loser }
		on_lost_aggression_war_discontent_loss = yes
		
		#Add migratory invasion flag
		scope:attacker = {
			add_character_flag = {
				flag = launched_migration_war_recently
				years = 10
			}
		}
		hidden_effect = {
			scope:attacker = {
				#Failing migration hurts you
				every_held_title = {
					limit = { tier = tier_county }
					add_county_modifier = {
						modifier = county_failed_migraiton_modifier
						years = 10
					}
					change_county_control = -25
				}
			}
		}
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "MIGRATION_WAR_NAME"
	war_name_base = "MIGRATION_WAR_NAME_BASE"
	cb_name = "MIGRATION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}