@prefeudal_authority_cooldown_years = 20
@high_tribal_organization_cooldown_years = 10
@bureaucracy_cooldown_years = 10
@subroman_decay_cooldown_years = 50
@recent_subroman_decay_upgrade_cooldown_years = 10

high_tribal_organization = {
	default = high_tribal_organization_0
	cumulative = yes
	flag = realm_law
	
	high_tribal_organization_0 = {
		modifier = {
			direct_vassal_opinion = 10
			development_growth_factor = -0.40
		}
		
		can_keep = { realm_law_use_high_tribal_organization = yes }
	}
	
	high_tribal_organization_1 = {
		modifier = { 
			direct_vassal_opinion = -20
			development_growth_factor = 0.10
		}
		flag = title_revocation_allowed
		
		can_keep = { realm_law_use_high_tribal_organization = yes }
		
		can_pass = {
			trigger_if = {
				limit = { has_realm_law = high_tribal_organization_0 }
				custom_description = {
					subject = root
					text = "has_high_tribal_organization_cooldown"
					NOT = { has_variable = high_tribal_organization_cooldown }
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = high_tribal_organization_2
							has_realm_law = high_tribal_organization_3
						}
					}
					add = increase_tribal_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = {
					NOR = {
						has_realm_law = high_tribal_organization_2
						has_realm_law = high_tribal_organization_3
					}
				}
			}
			set_variable = {
				name = high_tribal_organization_cooldown
				years = @high_tribal_organization_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = high_tribal_organization_0 }
				value = 1
			}
		}
	}
	
	high_tribal_organization_2 = {
		modifier = {
			direct_vassal_opinion = -10
			development_growth_factor = 0.10
		}
		flag = vassal_retraction_allowed
		
		can_keep = { realm_law_use_high_tribal_organization = yes }
		
		can_pass = {
			trigger_if = {
				limit = {
					NOT = { has_realm_law = high_tribal_organization_3 }
				}
				has_realm_law = high_tribal_organization_1
				custom_description = {
					subject = root
					text = "has_high_tribal_organization_cooldown"
					NOT = { has_variable = high_tribal_organization_cooldown }
				}
			}
			root.culture = { has_innovation = innovation_leges_barbarorum }
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOT = { has_realm_law = high_tribal_organization_3 }
					}
					add = increase_tribal_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = {
					NOT = { has_realm_law = high_tribal_organization_3 }
				}
			}
			set_variable = {
				name = high_tribal_organization_cooldown
				years = @high_tribal_organization_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = high_tribal_organization_1 }
				value = 1
			}
		}
	}
	
	high_tribal_organization_3 = {
		modifier = {
			direct_vassal_opinion = -10
			development_growth_factor = 0.10
		}
		flag = vassal_internal_wars_banned
		
		can_keep = { realm_law_use_high_tribal_organization = yes }
		
		can_pass = {
			has_realm_law = high_tribal_organization_2
			custom_description = {
				subject = root
				text = "has_high_tribal_organization_cooldown"
				NOT = { has_variable = high_tribal_organization_cooldown }
			}
			root.culture = { has_innovation = innovation_mundium }
		}
		
		pass_cost = { prestige = increase_tribal_authority_prestige_cost }
		
		on_pass = {
			set_variable = {
				name = high_tribal_organization_cooldown
				years = @high_tribal_organization_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = high_tribal_organization_2 }
				value = 1
			}
		}
	}
}

prefeudal_authority = {
	default = prefeudal_authority_0
	cumulative = yes
	flag = realm_law
	
	prefeudal_authority_0 = {
		modifier = {
			direct_vassal_opinion = 10
			vassal_tax_contribution_mult = -0.20
			vassal_levy_contribution_mult = -0.20
		}
		can_keep = { realm_law_use_prefedual_authority = yes }
	}
	
	prefeudal_authority_1 = {
		modifier = {
			direct_vassal_opinion = -5
			vassal_tax_contribution_mult = 0.10
			vassal_levy_contribution_mult = 0.10
			development_growth_factor = 0.05
		}
		flag = title_revocation_allowed
		
		can_keep = { realm_law_use_prefedual_authority = yes }
		
		can_pass = {
			trigger_if = {
				limit = { has_realm_law = prefeudal_authority_0 }
				custom_description = {
					subject = root
					text = "has_prefeudal_authority_cooldown"
					NOT = { has_variable = prefeudal_authority_cooldown }
				}
				root.culture = { has_innovation = innovation_writing }
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = prefeudal_authority_2
							has_realm_law = prefeudal_authority_3
						}
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = {
					NOT = { has_realm_law = prefeudal_authority_2 }
				}
			}
			set_variable = {
				name = prefeudal_authority_cooldown
				years = @prefeudal_authority_cooldown_years
			}
		}
		
		ai_will_do = {
			if = {
				limit = { has_realm_law = prefeudal_authority_0 }
				value = 1
			}
		}
	}
	
	prefeudal_authority_2 = {
		modifier = {
			direct_vassal_opinion = -10
			vassal_tax_contribution_mult = 0.10
			vassal_levy_contribution_mult = 0.10
			development_growth_factor = 0.05
		}
		flag = can_change_partition_succession_laws
		flag = vassal_retraction_allowed
		
		can_keep = { realm_law_use_prefedual_authority = yes }
		
		can_pass = {
			trigger_if = {
				limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
				has_realm_law = prefeudal_authority_1
				custom_description = {
					subject = root
					text = "has_prefeudal_authority_cooldown"
					NOT = { has_variable = prefeudal_authority_cooldown }
				}
			}
			root.culture = { has_innovation = innovation_mundium }
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
			}
			set_variable = {
				name = prefeudal_authority_cooldown
				years = @prefeudal_authority_cooldown_years
			}
		}
		
		ai_will_do = {
			if = {
				limit = { has_realm_law = prefeudal_authority_1 }
				value = 1
			}
		}
	}
	
	prefeudal_authority_3 = {
		modifier = {
			direct_vassal_opinion = -10
			vassal_tax_contribution_mult = 0.10
			vassal_levy_contribution_mult = 0.10
			development_growth_factor = 0.05
		}
		flag = can_change_succession_laws
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_prefedual_authority = yes }

		can_pass = {
			has_realm_law = prefeudal_authority_2
			custom_description = {
				subject = root
				text = "has_prefeudal_authority_cooldown"
				NOT = { has_variable = prefeudal_authority_cooldown }
			}
			root.culture = { has_innovation = innovation_plenary_assemblies }
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			set_variable = {
				name = prefeudal_authority_cooldown
				years = @prefeudal_authority_cooldown_years
			}
		}
	}
}

#Since theis models decay more than anything else, you can only improve your status
#not decline it
subroman_decay = {
	default = subroman_decay_0
	cumulative = yes
	flag = realm_law
	
	#Note:
	#subroman_decay_cooldown prevents YOU from upgrading more than once every 50 years
	#recent_subroman_decay_upgrade_cooldown prevents THE GAME from downgrading shortly afterwards
	
	subroman_decay_0 = {
		modifier = {
			domain_tax_mult = -0.20
			vassal_tax_contribution_mult = -0.20
		}
		
		can_keep = { realm_law_use_subroman_decay = yes }
		
		can_pass = {
			custom_description = {
				text = can_never_voluntary_reach_this_state
				always = no
			}
		}
		
		pass_cost = {}
		
		on_pass = {
			if = {
				limit = { NOT = { has_realm_law = subroman_decay_0 } }
				set_variable = {
					name = subroman_decay_cooldown
					years = @subroman_decay_cooldown_years
				}
				set_variable = {
					name = recent_subroman_decay_upgrade_cooldown
					years = @recent_subroman_decay_upgrade_cooldown_years
				}
			}
		}
	}
	subroman_decay_1 = {
		modifier = {
			domain_tax_mult = 0.05
			vassal_tax_contribution_mult = 0.05
			domain_limit = 1
		}
		flag = title_revocation_allowed
		flag = vassal_retraction_allowed
		
		can_keep = { realm_law_use_subroman_decay = yes }
		
		can_pass = {
			trigger_if = {
				limit = {
					OR = {
						has_realm_law = subroman_decay_2
						has_realm_law = subroman_decay_3
						has_realm_law = subroman_decay_4
					}
				}
				custom_description = {
					text = can_never_voluntary_reach_this_state
					always = no
				}
			}
			trigger_else = {
				has_realm_law = subroman_decay_0
				custom_description = {
					subject = root
					text = "has_subroman_decay_cooldown"
					NOT = { has_variable = subroman_decay_cooldown }
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = subroman_decay_0 }
					add = improve_subroman_decay_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = subroman_decay_0 }
					add = improve_subroman_decay_gold_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = { NOT = { has_realm_law = subroman_decay_1 } }
				set_variable = {
					name = subroman_decay_cooldown
					years = @subroman_decay_cooldown_years
				}
				set_variable = {
					name = recent_subroman_decay_upgrade_cooldown
					years = @recent_subroman_decay_upgrade_cooldown_years
				}
			}
			#Peasants are pissed if you upped their taxes
			if = {
				limit = { has_realm_law = subroman_decay_0 }
				every_sub_realm_county = {
					limit = { holder = root }
					add_county_modifier = {
						modifier = county_raised_taxes_modifier
						years = 25
					}
				}
				every_vassal = {
					limit = { primary_title.tier > tier_barony }
					add_opinion = {
						modifier = vassal_raised_taxes_modifier
						years = 25
					}
				}
			}
		}
	}
	subroman_decay_2 = {
		modifier = {
			domain_tax_mult = 0.05
			vassal_tax_contribution_mult = 0.05
			domain_limit = 1
		}
		flag = can_change_succession_laws
		
		can_keep = { realm_law_use_subroman_decay = yes }
		
		can_pass = {
			trigger_if = {
				limit = {
					OR = {
						has_realm_law = subroman_decay_3
						has_realm_law = subroman_decay_4
					}
				}
				custom_description = {
					text = can_never_voluntary_reach_this_state
					always = no
				}
			}
			trigger_else_if = {
				limit = { has_realm_law = subroman_decay_1 }
				custom_description = {
					subject = root
					text = "has_subroman_decay_cooldown"
					NOT = { has_variable = subroman_decay_cooldown }
				}
			}
			trigger_else = {
				custom_description = {
					text = too_great_a_change
					always = no
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = subroman_decay_1 }
					add = improve_subroman_decay_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = subroman_decay_1 }
					add = improve_subroman_decay_gold_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = { NOT = { has_realm_law = subroman_decay_2 } }
				set_variable = {
					name = subroman_decay_cooldown
					years = @subroman_decay_cooldown_years
				}
				set_variable = {
					name = recent_subroman_decay_upgrade_cooldown
					years = @recent_subroman_decay_upgrade_cooldown_years
				}
			}
			#Peasants are pissed if you upped their taxes
			if = {
				limit = { has_realm_law = subroman_decay_1 }
				every_sub_realm_county = {
					limit = { holder = root }
					add_county_modifier = {
						modifier = county_raised_taxes_modifier
						years = 25
					}
				}
				every_vassal = {
					limit = { primary_title.tier > tier_barony }
					add_opinion = {
						modifier = vassal_raised_taxes_modifier
						years = 25
					}
				}
			}
		}
	}
	subroman_decay_3 = {
		modifier = {
			domain_tax_mult = 0.05
			vassal_tax_contribution_mult = 0.05
			domain_limit = 1
		}
		flag = vassal_internal_wars_banned
		
		can_keep = { realm_law_use_subroman_decay = yes }
		
		can_pass = {
			trigger_if = {
				limit = { has_realm_law = subroman_decay_4 }
				custom_description = {
					text = can_never_voluntary_reach_this_state
					always = no
				}
			}
			trigger_else_if = {
				limit = { has_realm_law = subroman_decay_2 }
				custom_description = {
					subject = root
					text = "has_subroman_decay_cooldown"
					NOT = { has_variable = subroman_decay_cooldown }
				}
			}
			trigger_else = {
				custom_description = {
					text = too_great_a_change
					always = no
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = subroman_decay_2 }
					add = improve_subroman_decay_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = subroman_decay_2 }
					add = improve_subroman_decay_gold_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = { NOT = { has_realm_law = subroman_decay_3 } }
				set_variable = {
					name = subroman_decay_cooldown
					years = @subroman_decay_cooldown_years
				}
				set_variable = {
					name = recent_subroman_decay_upgrade_cooldown
					years = @recent_subroman_decay_upgrade_cooldown_years
				}
			}
			#Peasants are pissed if you upped their taxes
			if = {
				limit = { has_realm_law = subroman_decay_2 }
				every_sub_realm_county = {
					limit = { holder = root }
					add_county_modifier = {
						modifier = county_raised_taxes_modifier
						years = 25
					}
				}
				every_vassal = {
					limit = { primary_title.tier > tier_barony }
					add_opinion = {
						modifier = vassal_raised_taxes_modifier
						years = 25
					}
				}
			}
		}
	}
	subroman_decay_4 = {
		modifier = {
			domain_tax_mult = 0.05
			vassal_tax_contribution_mult = 0.05
			domain_limit = 1
		}
		flag = vassal_all_wars_banned
		flag = can_designate_heirs
		
		can_keep = { realm_law_use_subroman_decay = yes }
		
		can_pass = {
			trigger_if = {
				limit = { has_realm_law = subroman_decay_3 }
				custom_description = {
					subject = root
					text = "has_subroman_decay_cooldown"
					NOT = { has_variable = subroman_decay_cooldown }
				}
			}
			trigger_else = {
				custom_description = {
					text = too_great_a_change
					always = no
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = subroman_decay_3 }
					add = improve_subroman_decay_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = subroman_decay_3 }
					add = improve_subroman_decay_gold_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = { NOT = { has_realm_law = subroman_decay_4 } }
				set_variable = {
					name = subroman_decay_cooldown
					years = @subroman_decay_cooldown_years
				}
				set_variable = {
					name = recent_subroman_decay_upgrade_cooldown
					years = @recent_subroman_decay_upgrade_cooldown_years
				}
			}
			#Peasants are pissed if you upped their taxes
			if = {
				limit = { has_realm_law = subroman_decay_3 }
				every_sub_realm_county = {
					limit = { holder = root }
					add_county_modifier = {
						modifier = county_raised_taxes_modifier
						years = 25
					}
				}
				every_vassal = {
					limit = { primary_title.tier > tier_barony }
					add_opinion = {
						modifier = vassal_raised_taxes_modifier
						years = 25
					}
				}
			}
		}
	}
}

#Eranshar Governmnet special effects
eranshar_authority = {
	default = eranshar_authority_0
	cumulative = no
	flag = realm_law
	
	eranshar_authority_0 = {
		modifier = {}
		flag = title_revocation_allowed
		flag = vassal_retraction_allowed
		flag = can_change_succession_laws
		
		can_keep = { realm_law_use_eranshar_authority = yes }
	}
}

#Roman government special effects
gubernatorial_taxation = {
	default = gubernatorial_taxation_2
	cumulative = no
	flag = realm_law
	
	gubernatorial_taxation_0 = {
		modifier = {
			domain_tax_mult = 0.0
			county_opinion_add = 10
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_pass = {
			custom_description = {
			text = is_controled_by_liege_law
				always = no
			}
		}
		
		can_keep = { realm_law_use_gubernatorial_taxation = yes }
	}
	
	gubernatorial_taxation_1 = {
		modifier = {
			domain_tax_mult = 0.05
			county_opinion_add = 5
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_gubernatorial_taxation = yes }
		
		can_pass = {
			custom_description = {
			text = is_controled_by_liege_law
				always = no
			}
		}
		
		pass_cost = {}
		
		on_pass = {}
		
		ai_will_do = {}
	}
	
	gubernatorial_taxation_2 = {
		modifier = { domain_tax_mult = 0.10 }
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_gubernatorial_taxation = yes }
		
		can_pass = {
			custom_description = {
			text = is_controled_by_liege_law
				always = no
			}
		}
		
		pass_cost = {}
		
		on_pass = {}
		
		ai_will_do = {}
	}
	
	gubernatorial_taxation_3 = {
		modifier = {
			domain_tax_mult = 0.15
			county_opinion_add = -10
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_gubernatorial_taxation = yes }
		
		can_pass = {
			custom_description = {
			text = is_controled_by_liege_law
				always = no
			}
		}
		
		pass_cost = {}
		
		on_pass = {}
	}
	
	gubernatorial_taxation_4 = {
		modifier = {
			domain_tax_mult = 0.25
			county_opinion_add = -20
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_gubernatorial_taxation = yes }
		
		can_pass = {
			custom_description = {
			text = is_controled_by_liege_law
				always = no
			}
		}
		
		pass_cost = {}
		
		on_pass = {}
		
		ai_will_do = {}
	}
}

bureaucratic_taxation = {
	default = bureaucratic_taxation_2
	cumulative = no
	flag = realm_law
	
	bureaucratic_taxation_0 = {
		modifier = {
			domain_tax_mult = 0.0
			county_opinion_add = 10
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_bureaucratic_taxation = yes }
		
		can_pass = {
			trigger_if = {
				custom_description = {
					subject = root
					text = "has_bureaucracy_cooldown"
					NOT = { has_variable = bureaucracy_cooldown }
				}
			}
		}
		
		on_pass = {
			custom_description = {
				text = all_gubernatorials_get_law_0
				every_vassal_or_below = {
					if = {
						limit = { has_government = gubernatorial_government }
						add_realm_law_skip_effects = bureaucratic_taxation_0
					}
				}
			}
		}
	}
	
	bureaucratic_taxation_1 = {
		modifier = {
			domain_tax_mult = 0.05
			county_opinion_add = 5
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag

		can_keep = { realm_law_use_bureaucratic_taxation = yes }

		can_pass = {
			trigger_if = {
				custom_description = {
					subject = root
					text = "has_bureaucracy_cooldown"
					NOT = { has_variable = bureaucracy_cooldown }
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_gold_cost
				}
			}
		}
		
		on_pass = {
			set_variable = {
				name = bureaucracy_cooldown
				years = @bureaucracy_cooldown_years
			}
			custom_description = {
				text = all_gubernatorials_get_law_1
				every_vassal_or_below = {
					if = {
						limit = { has_government = gubernatorial_government }
						add_realm_law_skip_effects = bureaucratic_taxation_1
					}
				}
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = bureaucratic_taxation_0 }
				value = 1
			}
		}
	}
	
	bureaucratic_taxation_2 = {
		modifier = { domain_tax_mult = 0.10 }
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_bureaucratic_taxation = yes }

		can_pass = {
			trigger_if = {
				custom_description = {
					subject = root
					text = "has_bureaucracy_cooldown"
					NOT = { has_variable = bureaucracy_cooldown }
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_1 }
					add = increase_taxation_bureaucratic_prestige_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_1 }
					add = increase_taxation_bureaucratic_gold_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
				}
			}
		}
		
		on_pass = {
			set_variable = {
				name = bureaucracy_cooldown
				years = @bureaucracy_cooldown_years
			}
			custom_description = {
				text = all_gubernatorials_get_law_2
				every_vassal_or_below = {
					if = {
						limit = { has_government = gubernatorial_government }
						add_realm_law_skip_effects = bureaucratic_taxation_2
					}
				}
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = bureaucratic_taxation_1 }
				value = 1
			}
		}
	}
	
	bureaucratic_taxation_3 = {
		modifier = {
			domain_tax_mult = 0.15
			county_opinion_add = -10
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_bureaucratic_taxation = yes }

		can_pass = {
			trigger_if = {
				custom_description = {
					subject = root
					text = "has_bureaucracy_cooldown"
					NOT = { has_variable = bureaucracy_cooldown }
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_2 }
					add = increase_taxation_bureaucratic_prestige_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_1 }
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_2 }
					add = increase_taxation_bureaucratic_gold_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_1 }
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
				}
			}
		}
		
		on_pass = {
			set_variable = {
				name = bureaucracy_cooldown
				years = @bureaucracy_cooldown_years
			}
			custom_description = {
				text = all_gubernatorials_get_law_3
				every_vassal_or_below = {
					if = {
						limit = { has_government = gubernatorial_government }
						add_realm_law_skip_effects = bureaucratic_taxation_3
					}
				}
			}
		}
	}
	
	bureaucratic_taxation_4 = {
		modifier = {
			domain_tax_mult = 0.25
			county_opinion_add = -20
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_bureaucratic_taxation = yes }

		can_pass = {
			trigger_if = {
				custom_description = {
					subject = root
					text = "has_bureaucracy_cooldown"
					NOT = { has_variable = bureaucracy_cooldown }
				}
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_3 }
					add = increase_taxation_bureaucratic_prestige_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_2 }
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_1 }
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
					add = increase_taxation_bureaucratic_prestige_cost
				}
			}
			gold = {
				if = {
					limit = { has_realm_law = bureaucratic_taxation_3 }
					add = increase_taxation_bureaucratic_gold_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_2 }
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_1 }
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
				}
				else_if = {
					limit = { has_realm_law = bureaucratic_taxation_0 }
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
					add = increase_taxation_bureaucratic_gold_cost
				}
			}
		}
		
		on_pass = {
			set_variable = {
				name = bureaucracy_cooldown
				years = @bureaucracy_cooldown_years
			}
			custom_description = {
				text = all_gubernatorials_get_law_4
				every_vassal_or_below = {
					if = {
						limit = { has_government = gubernatorial_government }
						add_realm_law_skip_effects = bureaucratic_taxation_4
					}
				}
			}
		}
	}
}
