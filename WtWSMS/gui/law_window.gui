
types hbox_law_textWindow ################by Maekawa
{
    type hbox_law_text = vbox {
    name = "tab_law"
    visible = "[GetVariableSystem.Exists( 'law_window_toggle' )]"
    layoutpolicy_horizontal = expanding
    layoutpolicy_vertical = expanding
    using = Animation_Tab_Switch

    hbox = {
        layoutpolicy_horizontal = expanding
        margin = { 0 80 }
        background =  {
            texture = "gfx/interface/laws_writing.dds"
            alpha = 0.4
            using = Mask_Rough_Edges
        }
    }
    scrollbox = {
        name = "succession_scrollbox"
        layoutpolicy_horizontal = expanding
        layoutpolicy_vertical = expanding
        minimumsize = { 0 350 }

        blockoverride "scrollbox_content"
        {
            margin = { 17 10 }
            spacing = 10
            hbox = { ##法律
	            layoutpolicy_horizontal = expanding
	            using = Background_Inset
	            hbox = {
	                name = "religion_law"
	                datamodel = "[MyRealmWindow.GetRealmLaws]"
	                ignoreinvisible = yes
	                item = {
	                    vbox = {

		                    datacontext = "[GuiLawGroup.GetLawGroup]"
		                    visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'religion_law' ), GuiLawGroup.IsAvailable )]"
		                    ignoreinvisible = yes

		                    text_label_center = {
		                        text = "[LawGroup.GetName]"
		                    }

		                    spacer = {
		                        visible = "[GetPlayer.HasLiege]"
		                        size = { 5 8 }
		                    }

		                    vbox = {
		                        datamodel = "[GuiLawGroup.GetLaws]"
		                        item = {
		                            hbox = {
			                            layoutpolicy_horizontal = expanding
		                                button = {
		                                    datacontext = "[GuiLaw.GetLaw]"
		                                    size = { 60 60 }
		                                    enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
		                                    down = "[GuiLaw.IsEnacted]"
		                                    alwaystransparent = "[GuiLaw.IsEnacted]"
		                                    onclick = "[GuiLaw.Enact]"
		                                    tooltipwidget = { pass_law_tooltip = {} }
		                                    using = tooltip_below

		                                    button = {
		                                        visible = "[Not(GuiLaw.IsEnacted)]"
		                                        texture = "gfx/interface/icons/button_icons/religious_law_is_off.dds"
		                                        parentanchor = center
		                                        size = { 42 42 }
		                                        alwaystransparent = yes
		                                    }

		                                    icon = {
		                                        visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
		                                        texture = "gfx/interface/icons/button_icons/religious_law_is_on.dds"
		                                        parentanchor = center
		                                        size = { 42 42 }
		                                        alwaystransparent = yes

		                                        blockoverride "master_color_frame" {
		                                            frame = 2
		                                        }
		                                    }
		                                }
		                                text_label_center = {
		                                    text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
		                                }
		                            }
		                        }
		                    }
		                }
		            }
		        }
		        hbox = {
		            name = "culture_law"
		            datamodel = "[MyRealmWindow.GetRealmLaws]"
		            ignoreinvisible = yes
		            item = {
		                vbox = {

		                    datacontext = "[GuiLawGroup.GetLawGroup]"
		                    visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'culture_law' ), GuiLawGroup.IsAvailable )]"
		                    ignoreinvisible = yes

		                    text_label_center = {
		                        text = "[LawGroup.GetName]"
		                    }

		                    spacer = {
		                        visible = "[GetPlayer.HasLiege]"
		                        size = { 5 8 }
		                    }

		                    vbox = {
		                        datamodel = "[GuiLawGroup.GetLaws]"
		                        item = {
		                            hbox = {
		                            	layoutpolicy_horizontal = expanding
		                                button = {
		                                    datacontext = "[GuiLaw.GetLaw]"
		                                    size = { 60 60 }
		                                    enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
		                                    down = "[GuiLaw.IsEnacted]"
		                                    alwaystransparent = "[GuiLaw.IsEnacted]"
		                                    onclick = "[GuiLaw.Enact]"
		                                    tooltipwidget = { pass_law_tooltip = {} }
		                                    using = tooltip_below

		                                    button = {
		                                        visible = "[Not(GuiLaw.IsEnacted)]"
		                                        texture = "gfx/interface/icons/button_icons/civi_law_is_off.dds"
		                                        parentanchor = center
		                                        size = { 42 42 }
		                                        alwaystransparent = yes
		                                    }

		                                    icon = {
		                                        visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
		                                        texture = "gfx/interface/icons/button_icons/civi_law_is_on.dds"
		                                        parentanchor = center
		                                        size = { 42 42 }
		                                        alwaystransparent = yes

		                                        blockoverride "master_color_frame" {
		                                            frame = 2
		                                        }
		                                    }
		                                }
		                                text_label_center = {
		                                    text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
		                                }
		                            }
		                        }
		                    }
		                }
		            }
		        }
		    }
			hbox = { ##法律
	            layoutpolicy_horizontal = expanding
	            using = Background_Inset
				hbox = {
					name = "policy_1_law"
					datamodel = "[MyRealmWindow.GetRealmLaws]"
					ignoreinvisible = yes
					item = {
						vbox = {

							datacontext = "[GuiLawGroup.GetLawGroup]"
							visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_1' ), GuiLawGroup.IsAvailable )]"
							ignoreinvisible = yes

							text_label_center = {
								text = "[LawGroup.GetName]"
							}

							spacer = {
								visible = "[GetPlayer.HasLiege]"
								size = { 5 8 }
							}
							vbox = {
								hbox = {
									text_label_left = {
										text = "[military_comp|E]"
									}
									progressbar_red = {
										value = "[FixedPointToFloat(GetPlayer.MakeScope.Var('mil_comp').GetValue)]"
										visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_1' ), GuiLawGroup.IsAvailable )]"
										texture = "gfx/interface/progressbars/progressbar_laws.dds"
										direction = horizontal
										size = {300 20}
										position = {0 0}
										min = 0
										max = 5000
										text_single = {
											parentanchor = hcenter|vcenter
											text = "[GetPlayer.MakeScope.Var('mil_comp').GetValue|0] ([GetPlayer.MakeScope.ScriptValue('mil_competence_net')|+1])"
											tooltip = "GET_MIL_COMPETENCE_BREAKDOWN"
										}
										tooltipwidget = {
											widget = {
												using = DefaultTooltipBackground
												size = {200 100}
												vbox = {
													margin = { 15 10 }
													spacing = 10
													set_parent_size_to_minimum = yes
													minimumsize = { 280 0 }
													vbox = {
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "GET_MIL_COMPETENCE"
															background = {
																using = Background_Area
																margin = { 10 0 }
																margin_bottom = 5
															}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "MIL_COMP_EXPLAIN"
														}
														spacer = {
															size = {0 1}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding
															multiline = yes
															text = "COMP_PASS_LAW"
														}
														spacer = {
															size = {0 1}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "LOW_COMPETENCE_WARNING"
														}
													}
												}
											}
										}
									}
								}
								hbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[GuiLawGroup.GetLaws]"
									item = {
										vbox = {
											layoutpolicy_horizontal = expanding
											button = {
												datacontext = "[GuiLaw.GetLaw]"
												size = { 60 60 }
												enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
												down = "[GuiLaw.IsEnacted]"
												alwaystransparent = "[GuiLaw.IsEnacted]"
												onclick = "[GuiLaw.Enact]"
												tooltipwidget = { pass_law_tooltip = {} }
												using = tooltip_below
	
												button_icon = {
													visible = "[Not(GuiLaw.IsEnacted)]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 64 64 }
													alwaystransparent = yes
												}

												icon = {
													visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 64 64 }
													alwaystransparent = yes

													using = button_icon_highlight
												}
											}
											text_multi = {
												size = { 100 40 }
												align = center
												text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
											}
										}
									}
								}
							}
						}
					}
				}
			}
			hbox = { ##法律
	            layoutpolicy_horizontal = expanding
	            using = Background_Inset
				hbox = {
					name = "policy_2_law"
					datamodel = "[MyRealmWindow.GetRealmLaws]"
					ignoreinvisible = yes
					item = {
						vbox = {

							datacontext = "[GuiLawGroup.GetLawGroup]"
							visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_2' ), GuiLawGroup.IsAvailable )]"
							ignoreinvisible = yes

							text_label_center = {
								text = "[LawGroup.GetName]"
							}

							spacer = {
								visible = "[GetPlayer.HasLiege]"
								size = { 5 8 }
							}
							vbox = {
								hbox = {
									text_label_left = {
										text = "[civic_comp|E]"
									}
									progressbar_red = {
										value = "[FixedPointToFloat(GetPlayer.MakeScope.Var('civic_comp').GetValue)]"
										visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_2' ), GuiLawGroup.IsAvailable )]"
										texture = "gfx/interface/progressbars/progressbar_laws.dds"
										direction = horizontal
										size = {300 20}
										position = {0 0}
										min = 0
										max = 5000
										text_single = {
											parentanchor = hcenter|vcenter
											text = "[GetPlayer.MakeScope.Var('civic_comp').GetValue|0] ([GetPlayer.MakeScope.ScriptValue('civic_competence_net')|+1])"
											tooltip = "GET_CIVIC_COMPETENCE_BREAKDOWN"
										}
										tooltipwidget = {
											widget = {
												using = DefaultTooltipBackground
												size = {200 100}
												vbox = {
													margin = { 15 10 }
													spacing = 10
													set_parent_size_to_minimum = yes
													minimumsize = { 280 0 }
													vbox = {
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "GET_CIV_COMPETENCE"
															background = {
																using = Background_Area
																margin = { 10 0 }
																margin_bottom = 5
															}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "CIVIC_COMP_EXPLAIN"
														}
														spacer = {
															size = {0 1}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding
															multiline = yes
															text = "COMP_PASS_LAW"
														}
														spacer = {
															size = {0 1}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "LOW_COMPETENCE_WARNING"
														}
													}
												}
											}
										}
									}
								}
								hbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[GuiLawGroup.GetLaws]"
									item = {
										vbox = {
											layoutpolicy_horizontal = expanding
											button = {
												datacontext = "[GuiLaw.GetLaw]"
												size = { 60 60 }
												enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
												down = "[GuiLaw.IsEnacted]"
												alwaystransparent = "[GuiLaw.IsEnacted]"
												onclick = "[GuiLaw.Enact]"
												tooltipwidget = { pass_law_tooltip = {} }
												using = tooltip_below
	
												button_icon = {
													visible = "[Not(GuiLaw.IsEnacted)]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 64 64 }
													alwaystransparent = yes
												}

												icon = {
													visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 64 64 }
													alwaystransparent = yes

													using = button_icon_highlight
												}
											}
											text_multi = {
												size = { 100 40 }
												align = center
												text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
											}
										}
									}
								}
							}
						}
					}
				}
			}
			hbox = { ##法律
	            layoutpolicy_horizontal = expanding
	            using = Background_Inset
				hbox = {
					name = "policy_3_law"
					datamodel = "[MyRealmWindow.GetRealmLaws]"
					ignoreinvisible = yes
					item = {
						vbox = {

							datacontext = "[GuiLawGroup.GetLawGroup]"
							visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_3' ), GuiLawGroup.IsAvailable )]"
							ignoreinvisible = yes

							text_label_center = {
								text = "[LawGroup.GetName]"
							}

							spacer = {
								visible = "[GetPlayer.HasLiege]"
								size = { 5 8 }
							}
							vbox = {
								hbox = {
									text_label_left = {
										text = "[civic_comp|E]"
									}
									progressbar_red = {
										value = "[FixedPointToFloat(GetPlayer.MakeScope.Var('civic_comp').GetValue)]"
										visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_3' ), GuiLawGroup.IsAvailable )]"
										texture = "gfx/interface/progressbars/progressbar_laws.dds"
										direction = horizontal
										size = {300 20}
										position = {0 0}
										min = 0
										max = 5000
										text_single = {
											parentanchor = hcenter|vcenter
											text = "[GetPlayer.MakeScope.Var('diplo_comp').GetValue|0] ([GetPlayer.MakeScope.ScriptValue('diplo_competence_net')|+1])"
											tooltip = "GET_DIPLO_COMPETENCE_BREAKDOWN"
										}
										tooltipwidget = {
											widget = {
												using = DefaultTooltipBackground
												size = {200 100}
												vbox = {
													margin = { 15 10 }
													spacing = 10
													set_parent_size_to_minimum = yes
													minimumsize = { 280 0 }
													vbox = {
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "GET_DIP_COMPETENCE"
															background = {
																using = Background_Area
																margin = { 10 0 }
																margin_bottom = 5
															}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "DIPLO_COMP_EXPLAIN"
														}
														spacer = {
															size = {0 1}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding
															multiline = yes
															text = "COMP_PASS_LAW"
														}
														spacer = {
															size = {0 1}
														}
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "LOW_COMPETENCE_WARNING"
														}
													}
												}
											}
										}
									}
								}
								hbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[GuiLawGroup.GetLaws]"
									item = {
										vbox = {
											layoutpolicy_horizontal = expanding
											button = {
												datacontext = "[GuiLaw.GetLaw]"
												size = { 60 60 }
												enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
												down = "[GuiLaw.IsEnacted]"
												alwaystransparent = "[GuiLaw.IsEnacted]"
												onclick = "[GuiLaw.Enact]"
												tooltipwidget = { pass_law_tooltip = {} }
												using = tooltip_below
	
												button_icon = {
													visible = "[Not(GuiLaw.IsEnacted)]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 64 64 }
													alwaystransparent = yes
												}

												icon = {
													visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 64 64 }
													alwaystransparent = yes

													using = button_icon_highlight
												}
											}
											text_multi = {
												size = { 100 40 }
												align = center
												text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
											}
										}
									}
								}
							}
						}
					}
				}
			}
			hbox = { ##法律
				layoutpolicy_horizontal = expanding
				using = Background_Inset
				hbox = {
					name = "policy_4_law"
					datamodel = "[MyRealmWindow.GetRealmLaws]"
					ignoreinvisible = yes
					item = {
						vbox = {
			
							datacontext = "[GuiLawGroup.GetLawGroup]"
							visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_4' ), GuiLawGroup.IsAvailable )]"
							ignoreinvisible = yes
			
							text_label_center = {
								text = "[LawGroup.GetName]"
							}
			
							spacer = {
								visible = "[GetPlayer.HasLiege]"
								size = { 5 8 }
							}
							vbox = {
								hbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[GuiLawGroup.GetLaws]"
									item = {
										vbox = {
											layoutpolicy_horizontal = expanding
											button = {
												datacontext = "[GuiLaw.GetLaw]"
												size = { 100 100 }
												enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
												down = "[GuiLaw.IsEnacted]"
												alwaystransparent = "[GuiLaw.IsEnacted]"
												onclick = "[GuiLaw.Enact]"
												tooltipwidget = { pass_law_tooltip = {} }
												using = tooltip_below
			
												button_icon = {
													visible = "[Not(GuiLaw.IsEnacted)]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 100 100 }
													alwaystransparent = yes
												}

												icon = {
													visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 100 100 }
													alwaystransparent = yes

													using = button_icon_highlight
												}
											}
											text_multi = {
												size = { 100 40 }
												align = center
												text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
											}
										}
									}
								}
							}
						}
					}
				}
			}
			hbox = { ##法律
				layoutpolicy_horizontal = expanding
				using = Background_Inset
				hbox = {
					name = "policy_5_law"
					datamodel = "[MyRealmWindow.GetRealmLaws]"
					ignoreinvisible = yes
					item = {
						vbox = {
				
							datacontext = "[GuiLawGroup.GetLawGroup]"
							visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'policy_5' ), GuiLawGroup.IsAvailable )]"
							ignoreinvisible = yes
				
							text_label_center = {
								text = "[LawGroup.GetName]"
							}
				
							spacer = {
								visible = "[GetPlayer.HasLiege]"
								size = { 5 8 }
							}
							vbox = {
								hbox = {
									layoutpolicy_horizontal = expanding
									datamodel = "[GuiLawGroup.GetLaws]"
									item = {
										vbox = {
											layoutpolicy_horizontal = expanding
											button = {
												datacontext = "[GuiLaw.GetLaw]"
												size = { 100 100 }
												enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
												down = "[GuiLaw.IsEnacted]"
												alwaystransparent = "[GuiLaw.IsEnacted]"
												onclick = "[GuiLaw.Enact]"
												tooltipwidget = { pass_law_tooltip = {} }
												using = tooltip_below
				
												button_icon = {
													visible = "[Not(GuiLaw.IsEnacted)]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 100 100 }
													alwaystransparent = yes
												}

												icon = {
													visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
													texture = "[Law.GetIcon]"
													parentanchor = center
													size = { 100 100 }
													alwaystransparent = yes

													using = button_icon_highlight
												}
											}
											text_multi = {
												size = { 100 40 }
												align = center
												text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
											}
										}
									}
								}
							}
						}
					}
				}
			}
        }
    }
}
