namespace = bp_heritage_linguistic_drift

#Design Notes:
# For 0.2.0, this will be a simple binary, but later we'll want to make the linguistic/heritage drifts
# more gradual.

#0001-0100: Linguistic Drift Events
#0101-0200: Heritage Drift Events

scripted_effect shift_language_effect = {
	scope:shift_culture = {
		if = {
			limit = { this = culture:romano_african }
			custom_tooltip = {
				text = african_romance_language
				subject = scope:shift_culture
				set_culture_pillar = language_african_romance
			}
			custom_tooltip = {
				text = african_romance_name_list
				subject = scope:shift_culture
				set_name_list = name_list_african_romance
			}
		}
		else_if = {
			limit = {
				OR = {
					this = culture:romano_noric
					this = culture:romano_raetian
				}
			}
			custom_tooltip = {
				text = rhaeto_romance_language
				subject = scope:shift_culture
				set_culture_pillar = language_rhaeto_romance
			}
			custom_tooltip = {
				text = romansh_name_list
				subject = scope:shift_culture
				set_name_list = name_list_romansh
			}
		}
		else_if = {
			limit = { this = culture:romano_british }
			custom_tooltip = {
				text = british_romance_language
				subject = scope:shift_culture
				set_culture_pillar = language_british_romance
			}
			custom_tooltip = {
				text = british_romance_name_list
				subject = scope:shift_culture
				set_name_list = name_list_british_romance
			}
		}
		else = { debug_log = "UNHANDLED CULTURE IN bp_heritage_linguistic_drift EVENT SPACE" }
	}
}

bp_heritage_linguistic_drift.0001 = {
	type = empty
	hidden = yes
	
	#Pick one of the random valid cultures
	immediate = {
		#If the culture head exists, inform him/her first
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { trigger_event = { id = bp_heritage_linguistic_drift.0002 } }
		}
		#Otherwise, directly change the culture and tell everyone
		else = {
			shift_language_effect = yes
			every_player = { trigger_event = { id = bp_heritage_linguistic_drift.0003 } }
		}
	}
}

bp_heritage_linguistic_drift.0002 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0002.t
	desc = bp_heritage_linguistic_drift.0002.desc
	theme = culture_change
	left_portrait = root
	
	immediate = {}
	
	option = {
		name = bp_heritage_linguistic_drift.0002.accept
		shift_language_effect = yes
		every_ruler = {
			limit = {
				OR = {
					this = { in_diplomatic_range = root }
					this.culture = { has_same_culture_language = scope:shift_culture }
				}
				NOT = { this = root }
			}
			trigger_event = { id = bp_heritage_linguistic_drift.0003 }
		}
		flavor = bp_heritage_linguistic_drift.0002.accept.tooltip
	}
}

bp_heritage_linguistic_drift.0003 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0003.t
	desc = bp_heritage_linguistic_drift.0003.desc
	theme = culture_change
	left_portrait = scope:chosen_character
	
	immediate = {
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { save_scope_as = chosen_character }
		}
		else_if = {
			limit = { any_ruler = { culture = scope:shift_culture } }
			random_ruler = {
				limit = { culture = scope:shift_culture }
				save_scope_as = chosen_character
			}
		}
		#Fallback
		else = { root = { save_scope_as = chosen_character } }
	}
	
	#For other rulers of the culture
	option = {
		name = bp_heritage_linguistic_drift.0003.accept_same_culture
		flavor = bp_heritage_linguistic_drift.0003.accept_same_culture.tooltip
		trigger = { root.culture = scope:shift_culture }
	}
	#For other rulers not of the culture
	option = {
		name = bp_heritage_linguistic_drift.0003.accept_different_culture
		flavor = bp_heritage_linguistic_drift.0003.accept_different_culture.tooltip
		trigger = { NOT = { root.culture = scope:shift_culture } }
		fallback = yes
	}
}

##### Heritage cases: Should require culture counties under dominance of another heritage

scripted_effect shift_heritage_effect = {
	scope:shift_culture = {
		if = {
			limit = { this = culture:romano_hispanic }
			custom_tooltip = {
				text = iberian_heritage_tt
				subject = scope:shift_culture
				set_culture_pillar = heritage_iberian
			}
		}
	}
}

bp_heritage_linguistic_drift.0101 = {
	type = empty
	hidden = yes
	
	#Pick one of the random valid cultures
	immediate = {
		#If the culture head exists, inform him/her first
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { trigger_event = { id = bp_heritage_linguistic_drift.0102 } }
		}
		#Otherwise, directly change the culture and tell everyone
		else = {
			shift_heritage_effect = yes
			every_player = { trigger_event = { id = bp_heritage_linguistic_drift.0103 } }
		}
	}
}

bp_heritage_linguistic_drift.0102 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0102.t
	desc = bp_heritage_linguistic_drift.0102.desc
	theme = culture_change
	left_portrait = root
	
	immediate = {}
	
	option = {
		name = bp_heritage_linguistic_drift.0102.accept
		shift_heritage_effect = yes
		every_ruler = {
			limit = {
				OR = {
					this = { in_diplomatic_range = root }
					this.culture = { has_same_culture_language = scope:shift_culture }
				}
				NOT = { this = root }
			}
			trigger_event = { id = bp_heritage_linguistic_drift.0103 }
		}
		flavor = bp_heritage_linguistic_drift.0102.accept.tooltip
	}
}

bp_heritage_linguistic_drift.0103 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0103.t
	desc = bp_heritage_linguistic_drift.0103.desc
	theme = culture_change
	left_portrait = scope:chosen_character
	
	immediate = {
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { save_scope_as = chosen_character }
		}
		else_if = {
			limit = { any_ruler = { culture = scope:shift_culture } }
			random_ruler = {
				limit = { culture = scope:shift_culture }
				save_scope_as = chosen_character
			}
		}
		#Fallback
		else = { root = { save_scope_as = chosen_character } }
	}
	
	#For other rulers of the culture
	option = {
		name = bp_heritage_linguistic_drift.0103.accept_same_culture
		flavor = bp_heritage_linguistic_drift.0103.accept_same_culture.tooltip
		trigger = { root.culture = scope:shift_culture }
	}
	#For other rulers not of the culture
	option = {
		name = bp_heritage_linguistic_drift.0103.accept_different_culture
		flavor = bp_heritage_linguistic_drift.0103.accept_different_culture.tooltip
		trigger = { NOT = { root.culture = scope:shift_culture } }
		fallback = yes
	}
}