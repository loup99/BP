namespace = bp_heritage_linguistic_drift

##### TODO (Immediate): Gate announcement events to rulers in diplo range only
##### TODO (Immediate): Add name-list shifts where appropriate
##### TODO (Immediate): Romano-Gothic/Romano-Vandalic variant
##### TODO (Immediate): Venetian namelist from WtWSMS.

#Design Notes:
# For 0.2.0, this will be a simple binary, but later we'll want to make the linguistic/heritage drifts
# more gradual.

#0001-0100: Linguistic Drift Events
#0101-0200: Heritage Drift Events

##### Language

##### TRIGGERS
scripted_trigger is_a_iberian_romance_hybrid_culture_trigger = {
	NOT = { any_parent_culture = { this = culture:romano_hispanic } }
}

#Mostly we want this case to be where cultures are "well packed (i.e., small)" to allow differences to build
scripted_trigger is_culture_mostly_in_linguistic_region_trigger = {
	any_culture_county = {
		percent >= 0.50
		any_province = { geographical_region = $REGION$ }
	}
}

scripted_trigger a_culture_parent_is_a_germanic_culture_trigger = {
	OR = {
		any_parent_culture = { has_cultural_pillar = heritage_central_germanic }
		any_parent_culture = { has_cultural_pillar = heritage_east_germanic }
		any_parent_culture = { has_cultural_pillar = heritage_north_germanic }
		any_parent_culture = { has_cultural_pillar = heritage_west_germanic }
	}
}

scripted_trigger a_culture_parent_speaks_a_semitic_language_trigger = {
	any_parent_culture = { has_cultural_parameter = language_branch_semitic }
}

###### EFFECTS
scripted_effect shift_language_latin_to_protoromance_effect = {
	scope:shift_culture = {
		if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_hispanic } }
			set_culture_pillar = language_proto_ibero_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = {
				OR = {
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_gallic }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_frank }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:massalian }
				}
			}
			set_culture_pillar = language_proto_gallo_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_british } }
			set_culture_pillar = language_proto_british_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_african } }
			set_culture_pillar = language_proto_african_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_illyrian } }
			set_culture_pillar = language_proto_illyrian_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = {
				OR = {
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_raetian }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_noric }
				}
			}
			set_culture_pillar = language_proto_raetonorican_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = {
				OR = {
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_dacian }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_thracian }
				}
			}
			set_culture_pillar = language_proto_eastern_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_pannonian } }
			set_culture_pillar = language_proto_pannonian_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_aramean } }
			set_culture_pillar = language_proto_syrian_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = { #TODO: Remove Romano-Gothic as an option?
			limit = {
				OR = {
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_gothic }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_vandalic }
				}
			}
			set_culture_pillar = language_proto_italian_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:corsican } }
			set_culture_pillar = language_proto_italian_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = { #Fallback
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:roman } }
			set_culture_pillar = language_proto_italian_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else = { debug_log = "UNHANDLED CULTURE IN bp_heritage_linguistic_drift EVENT SPACE: LANGUAGE (LATIN=>PROTO-ROMANCE" }
	}
}

scripted_effect shift_language_proto_ibero_romance_to_children_effect = {
	scope:shift_culture = {
		if = {
			limit = { is_a_iberian_romance_hybrid_culture_trigger = yes }
			if = {
				limit = { a_culture_parent_is_a_germanic_culture_trigger = yes }
				set_culture_pillar = language_germano_iberian_romance
				ccu_culture_created_or_changed_effect = yes
			}
			else_if = {
				limit = { a_culture_parent_speaks_a_semitic_language_trigger = yes }
				set_culture_pillar = language_mozarabic
				set_name_list = name_list_andalusian
				ccu_culture_created_or_changed_effect = yes
			}
			else = { #FALLBACK
				set_culture_pillar = language_iberian_romance
				ccu_culture_created_or_changed_effect = yes
			}
		}
		else = {
			if = {
				limit = { is_culture_mostly_in_linguistic_region_trigger = { REGION = custom_doc_region } }
				set_culture_pillar = language_doc_romance
				ccu_culture_created_or_changed_effect = yes
			}
			else = {
				set_culture_pillar = language_iberian_romance
				ccu_culture_created_or_changed_effect = yes
			}
		}
	}
}

scripted_effect shift_language_proto_gallo_romance_to_children_effect = {
	scope:shift_culture = {
		if = {
			limit = { is_culture_mostly_in_linguistic_region_trigger = { REGION = custom_doc_region } }
			set_culture_pillar = language_doc_romance
			ccu_culture_created_or_changed_effect = yes
		}
		else = {
			if = {
				limit = { a_culture_parent_is_a_germanic_culture_trigger = yes }
				set_culture_pillar = language_french
				set_name_list = name_list_frankish
				ccu_culture_created_or_changed_effect = yes
			}
			else = {
				set_culture_pillar = language_gallic_romance
				set_name_list = name_list_gallo_romance
				ccu_culture_created_or_changed_effect = yes
			}
		}
	}
}

scripted_effect shift_language_proto_british_romance_to_children_effect = {
	scope:shift_culture = {
		set_culture_pillar = language_british_romance
		set_name_list = name_list_british_romance
		ccu_culture_created_or_changed_effect = yes
	}
}

scripted_effect shift_language_proto_italian_romance_to_children_effect = {
	scope:shift_culture = {
		if = {
			limit = { is_culture_mostly_in_linguistic_region_trigger = { REGION = custom_gallo_italic } }
			if = {
				limit = { a_culture_parent_is_a_germanic_culture_trigger = yes }
				set_culture_pillar = language_germano_italian_romance
				set_name_list = name_list_cisalpine
				ccu_culture_created_or_changed_effect = yes
			}
			else = {
				set_culture_pillar = language_venetian
				#set_name_list = name_list_venetian
				ccu_culture_created_or_changed_effect = yes
			}
		}
		else = {
			if = {
				limit = { is_culture_mostly_in_linguistic_region_trigger = { REGION = custom_sicilian } }
				set_culture_pillar = language_sicilian
				set_name_list = name_list_sicilian
				ccu_culture_created_or_changed_effect = yes
			}
			else = {
				set_culture_pillar = language_italian
				#set_name_list = name_list_venetian
				ccu_culture_created_or_changed_effect = yes
			}
		}
	}
}

scripted_effect shift_language_effect = {
	if = {
		limit = { has_cultural_pillar = language_latin }
		shift_language_latin_to_protoromance_effect = yes
	}
	if = {
		limit = { has_cultural_pillar = language_proto_ibero_romance }
		shift_language_proto_ibero_romance_to_children_effect = yes
	}
	if = {
		limit = { has_cultural_pillar = language_proto_gallo_romance }
		shift_language_proto_gallo_romance_to_children_effect = yes
	}
	if = {
		limit = { has_cultural_pillar = language_proto_british_romance }
		shift_language_proto_british_romance_to_children_effect = yes
	}
	if = {
		limit = { has_cultural_pillar = language_proto_italian_romance }
		shift_language_proto_italian_romance_to_children_effect = yes
	}
	#Africo-Romance
	#Illyro-Romance
	#Raeto-Norico-Romance
	#Eastern-Romance
	#Syrian-Romance
	#Sardinian Romance
}

####### ACTUAL EVENTS

bp_heritage_linguistic_drift.0001 = {
	type = empty
	hidden = yes
	
	#Pick one of the random valid cultures
	immediate = {
		#If the culture head exists, inform him/her first
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { trigger_event = { id = bp_heritage_linguistic_drift.0002 } }
		}
		#Otherwise, directly change the culture and tell everyone
		else = {
			shift_language_effect = yes
			every_ruler = { #Informational event
				limit = { is_ai = no }
				trigger_event = { id = bp_heritage_linguistic_drift.0003 }
			}
		}
	}
}

bp_heritage_linguistic_drift.0002 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0002.t
	desc = bp_heritage_linguistic_drift.0002.desc
	theme = culture_change
	left_portrait = root
	
	immediate = {}
	
	option = {
		name = bp_heritage_linguistic_drift.0002.accept
		shift_language_effect = yes
		every_ruler = {
			limit = {
				OR = {
					this = { in_diplomatic_range = root }
					this.culture = { has_same_culture_language = scope:shift_culture }
				}
				NOT = { this = root }
			}
			trigger_event = { id = bp_heritage_linguistic_drift.0003 }
		}
		flavor = bp_heritage_linguistic_drift.0002.accept.tooltip
	}
}

bp_heritage_linguistic_drift.0003 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0003.t
	desc = bp_heritage_linguistic_drift.0003.desc
	theme = culture_change
	left_portrait = scope:chosen_character
	
	immediate = {
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { save_scope_as = chosen_character }
		}
		else_if = {
			limit = { any_ruler = { culture = scope:shift_culture } }
			random_ruler = {
				limit = { culture = scope:shift_culture }
				save_scope_as = chosen_character
			}
		}
		#Fallback
		else = { root = { save_scope_as = chosen_character } }
	}
	
	#For other rulers of the culture
	option = {
		name = bp_heritage_linguistic_drift.0003.accept_same_culture
		flavor = bp_heritage_linguistic_drift.0003.accept_same_culture.tooltip
		trigger = { root.culture = scope:shift_culture }
	}
	#For other rulers not of the culture
	option = {
		name = bp_heritage_linguistic_drift.0003.accept_different_culture
		flavor = bp_heritage_linguistic_drift.0003.accept_different_culture.tooltip
		trigger = { NOT = { root.culture = scope:shift_culture } }
		fallback = yes
	}
}

##### Heritage

scripted_effect shift_heritage_latin_to_children_effect = {
	scope:shift_culture = {
		if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_hispanic } }
			set_culture_pillar = heritage_iberian
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = { #Romano-Frank covered here
			limit = {
				OR = {
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_gallic }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_frank }
				}
			}
			set_culture_pillar = heritage_frankish
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_british } }
			set_culture_pillar = heritage_romano_british
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_british } }
			set_culture_pillar = heritage_romano_british
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_aramean } }
			set_culture_pillar = heritage_romano_aramean
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_aramean } }
			set_culture_pillar = heritage_romano_aramean
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_african } }
			set_culture_pillar = heritage_romano_african
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = {
				OR = {
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_dacian }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_pannonian }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_thracian }
				}
			}
			set_culture_pillar = heritage_vlach
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = {
			limit = {
				OR = {
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_illyrian }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_raetian }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_noric }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:sardinian }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:corsican }
					the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:romano_gothic }
				}
			}
			set_culture_pillar = heritage_italian
			ccu_culture_created_or_changed_effect = yes
		}
		else_if = { #Fallback
			limit = { the_culture_or_parent_or_above_is_trigger = { CULTURE = culture:roman } }
			set_culture_pillar = heritage_italian
			ccu_culture_created_or_changed_effect = yes
		}
		else = { debug_log = "UNHANDLED CULTURE IN bp_heritage_linguistic_drift EVENT SPACE: HERITAGE (LATIN=>CHILDREN" }
	}
}

scripted_effect shift_heritage_effect = {
	shift_heritage_latin_to_children_effect = yes
}

bp_heritage_linguistic_drift.0101 = {
	type = empty
	hidden = yes
	
	#Pick one of the random valid cultures
	immediate = {
		#If the culture head exists, inform him/her first
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { trigger_event = { id = bp_heritage_linguistic_drift.0102 } }
		}
		#Otherwise, directly change the culture and tell everyone
		else = {
			shift_heritage_effect = yes
			every_player = { trigger_event = { id = bp_heritage_linguistic_drift.0103 } }
		}
	}
}

bp_heritage_linguistic_drift.0102 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0102.t
	desc = bp_heritage_linguistic_drift.0102.desc
	theme = culture_change
	left_portrait = root
	
	immediate = {}
	
	option = {
		name = bp_heritage_linguistic_drift.0102.accept
		shift_heritage_effect = yes
		every_ruler = {
			limit = {
				OR = {
					this = { in_diplomatic_range = root }
					this.culture = { has_same_culture_language = scope:shift_culture }
				}
				NOT = { this = root }
			}
			trigger_event = { id = bp_heritage_linguistic_drift.0103 }
		}
		flavor = bp_heritage_linguistic_drift.0102.accept.tooltip
	}
}

bp_heritage_linguistic_drift.0103 = {
	type = character_event
	title = bp_heritage_linguistic_drift.0103.t
	desc = bp_heritage_linguistic_drift.0103.desc
	theme = culture_change
	left_portrait = scope:chosen_character
	
	immediate = {
		if = {
			limit = { exists = scope:shift_culture.culture_head }
			scope:shift_culture.culture_head = { save_scope_as = chosen_character }
		}
		else_if = {
			limit = { any_ruler = { culture = scope:shift_culture } }
			random_ruler = {
				limit = { culture = scope:shift_culture }
				save_scope_as = chosen_character
			}
		}
		#Fallback
		else = { root = { save_scope_as = chosen_character } }
	}
	
	#For other rulers of the culture
	option = {
		name = bp_heritage_linguistic_drift.0103.accept_same_culture
		flavor = bp_heritage_linguistic_drift.0103.accept_same_culture.tooltip
		trigger = { root.culture = scope:shift_culture }
	}
	#For other rulers not of the culture
	option = {
		name = bp_heritage_linguistic_drift.0103.accept_different_culture
		flavor = bp_heritage_linguistic_drift.0103.accept_different_culture.tooltip
		trigger = { NOT = { root.culture = scope:shift_culture } }
		fallback = yes
	}
}