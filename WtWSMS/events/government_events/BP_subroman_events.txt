namespace = BP_subroman_events

###############################
# Global triggers
###############################

#For any event to fire, events must have these minimal requirements
scripted_trigger basic_game_requirements_trigger = {
	#CK2 was game start +50, but this won't work well with later bookmarks
	#So using game_start+10 (to prevent from firing _too_ early, with events
	#applicable after AD 500
	current_date >= 500.1.1
	years_from_game_start > 10
}
scripted_trigger basic_character_requirements_trigger = {
	has_government = subroman_government
	primary_title = { tier > tier_barony }
}
scripted_trigger does_not_have_max_feudal_transition = {
	NOT = { has_realm_law = subroman_feudal_transition_9 }
}

###############################
# Initial Sub-Roman Events
# i.e., stuff in on actions, hidden events, etc.
# ids 0001-0009
###############################

###############################
# Roman taxation
# ids 0010-0019
###############################

#Sub-Roman Ruler gets the choice of maintaining the old taxation after ~50 years
BP_subroman_events.0010 = {
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { ROOT = { has_realm_law = subroman_taxation_3 } }
				desc = BP_subroman_events.0010.title_3
			}
			triggered_desc = {
				trigger = { ROOT = { has_realm_law = subroman_taxation_2 } }
				desc = BP_subroman_events.0010.title_2
			}
			triggered_desc = {
				trigger = { ROOT = { has_realm_law = subroman_taxation_1 } }
				desc = BP_subroman_events.0010.title_1
			}
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					ROOT = {
						OR = {
							has_realm_law = subroman_taxation_3
							has_realm_law = subroman_taxation_2
						}
					}
				}
				desc = BP_subroman_events.0010.desc_a_32
			}
			triggered_desc = {
				trigger = { ROOT = { has_realm_law = subroman_taxation_1 } }
				desc = BP_subroman_events.0010.desc_a_1
			}
		}
		desc = BP_subroman_events.0010.desc_b
	}
	
	trigger = {
		basic_game_requirements_trigger = yes
		ROOT = {
			basic_character_requirements_trigger = yes
			#Must have applicable Sub-Roman Law
			OR = {
				has_realm_law = subroman_taxation_3
				has_realm_law = subroman_taxation_2
				has_realm_law = subroman_taxation_1
			}
			#Hasn't recently had a subroman decay event for this ruler
			NOT = { has_variable = subroman_taxation_cooldown }
		}
	}
	
	theme = stewardship_domain_focus
	
	right_portrait = {
		character = ROOT
		animation = personality_rational
	}
	
	option = {
		name = BP_subroman_events.0010.maintain
		increase_population_anger_effect = { CHAR = ROOT }
		remove_short_term_gold = major_gold_value
		every_vassal = {
			#The Sub-Roman counts and better get pissed
			if = {
				limit = {
					this.primary_title = { tier > tier_barony }
					this = { has_government = subroman_government }
				}
				save_scope_as = the_vassal
				add_opinion = {
					modifier = subroman_maintained_taxation_infrastructure_modifier
					years = 10
					target = ROOT
				}
			}
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 5
				gold >= major_gold_value
			}
		}
	}
	
	option = {
		name = BP_subroman_events.0010.decay
		#Propagates down the realm tree
		decrease_subroman_taxation_one_level_effect = { CHAR = ROOT }
		improve_subroman_popular_opinion_effect = { CHAR = ROOT }
		custom_description = {
			text = increases_feudal_transition
			#Propagates down the realm tree
			increase_feudal_transition_effect = { CHAR = ROOT }
		}
		ai_chance = { factor = 90 }
	}
}

#Vassals of a Sub-Roman liege asks for abandoning Roman fiscal system
BP_subroman_events.0011 = {
	type = character_event
	title = BP_subroman_events.0011.title
	desc = BP_subroman_events.0011.desc
	
	trigger = {
		basic_game_requirements_trigger = yes
		ROOT = {
			basic_character_requirements_trigger = yes
			#Hasn't recently had a subroman decay event for this ruler
			NOT = { has_variable = subroman_taxation_cooldown }
		}
		ROOT.top_liege = { #Make sure the liege is a valid target
			basic_character_requirements_trigger = yes
			#Must have applicable Sub-Roman Law
			has_realm_law = subroman_taxation_3
			#Hasn't recently had a subroman decay event for this ruler
			NOT = { has_variable = subroman_taxation_cooldown }
			NOT = { has_variable = vassal_requested_tax_reduction }
		}
	}
	
	theme = stewardship_domain_focus
	
	right_portrait = {
		character = ROOT
		animation = personality_rational
	}
	
	#Ask to abandon taxes
	option = {
		name = BP_subroman_events.0011.ask_for_reduction
		ROOT = { save_scope_as = the_sender }
		ROOT.top_liege = {
			set_variable = vassal_requested_tax_reduction
			trigger_event = {
				id = BP_subroman_events.0012
				days = 3 #from CK2
			}
		}
		#Why would the AI want to pay taxes?
		ai_chance = { factor = 0 }
	}
	
	#Let it be
	option = {
		name = BP_subroman_events.0011.let_it_be
		#Why would the AI want to pay taxes?
		ai_chance = { factor = 1000 }
	}
}
#Liege receives the request
BP_subroman_events.0012 = {
	type = letter_event
	opening = BP_subroman_events.0012.opening
	desc = BP_subroman_events.0012.desc
	sender = scope:the_sender
	
	# Accept to abandon
	option = {
		name = BP_subroman_events.0012.accept
		ROOT = { save_scope_as = the_liege }
		scope:the_sender = {
			trigger_event = {
				id = BP_subroman_events.0013
				days = 3 #from CK2
			}
		}
		#Propagates down the realm tree
		decrease_subroman_taxation_one_level_effect = { CHAR = ROOT }
		improve_subroman_popular_opinion_effect = { CHAR = ROOT }
		custom_description = {
			text = increases_feudal_transition
			#Propagates down the realm tree
			increase_feudal_transition_effect = { CHAR = ROOT }
		}
	}
	
	# Refuse to abandon
	option = {
		name = BP_subroman_events.0012.refuse
		every_vassal = {
			#The Sub-Roman counts and better get pissed
			if = {
				limit = {
					this.primary_title = { tier > tier_barony }
					this = { has_government = subroman_government }
				}
				save_temporary_scope_as = the_vassal
				add_opinion = {
					modifier = subroman_maintained_taxation_infrastructure_modifier
					years = 10
					target = ROOT
				}
			}
		}
		ROOT = { save_scope_as = the_liege }
		scope:the_sender = {
			trigger_event = {
				id = BP_subroman_events.0014
				days = 3 #from CK2
			}
		}
		ai_chance = { factor = 10 }
	}
}
#Liege Accepts the request
BP_subroman_events.0013 = {
	type = letter_event
	opening = BP_subroman_events.0013.opening
	desc = BP_subroman_events.0013.desc
	sender = scope:the_liege
	
	option = { name = name_i_see }
}
#Liege Refuses the request
BP_subroman_events.0014 = {
	type = letter_event
	opening = BP_subroman_events.0014.opening
	desc = BP_subroman_events.0014.desc
	sender = scope:the_liege
	
	option = { name = name_i_see }
}

###############################
# Crises
# ids 0020-0029
###############################

#NB: As these are crises, they should NOT depend on the recent_subroman_transition character_flag
BP_subroman_events.0020 = {
	type = character_event
	title = BP_subroman_events.0020.title
	desc = BP_subroman_events.0020.desc
	
	trigger = {
		basic_game_requirements_trigger = yes
		ROOT = {
			basic_character_requirements_trigger = yes
			does_not_have_max_feudal_transition = yes
			is_at_war = yes
			any_sub_realm_county = { county_control < 50 } #Substitute for CK2 devastated_war modifier
			any_character_war = { war_days >= 1825 } #Been at war for at least 5 years
		}
	}
	
	theme = war
	
	right_portrait = {
		character = ROOT
		animation = worry
	}
	
	#We're loosing control
	option = {
		name = BP_subroman_events.0020.a
		ROOT = { add_piety = -100 }
		custom_description = {
			text = increases_feudal_transition
			#Propagates down the realm tree
			increase_feudal_transition_effect = { CHAR = ROOT }
		}
	}
}

###############################
# Landed armies
# ids 0030-0039
###############################
scripted_trigger army_size_trigger = {
	#No Equivalent to CK2 realm_levies trigger,
	#So we take the max_military_strength and subtract the roughly
	#expected size of MAA
	save_temporary_scope_value_as = {
		name = maa_count
		
		value = {
			value = number_of_maa_regiments
			multiply = 300
		}
	}
	save_temporary_scope_value_as = {
		name = levy_troops
		value = {
			value = max_military_strength
			subtract = scope:maa_count
		}
	}
	scope:levy_troops > 1500
}

BP_subroman_events.0030 = {
	type = character_event
	title = BP_subroman_events.0030.title
	desc = BP_subroman_events.0030.desc
	
	trigger = {
		basic_game_requirements_trigger = yes
		ROOT = {
			basic_character_requirements_trigger = yes
			does_not_have_max_feudal_transition = yes
			number_of_maa_regiments <= 4 #Port from CK2
			army_size_trigger = yes
			NOT = { has_character_flag = recent_subroman_transition }
		}
		ROOT.primary_title = { NOT = { has_variable = landed_army } }
	}
	
	theme = martial_strategy_focus
	
	override_background = { event_background = army_camp }
	
	right_portrait = {
		character = ROOT
		animation = personality_rational
	}
	
	option = {
		name = BP_subroman_events.0030.a
		custom_description = {
			text = increases_feudal_transition
			#Propagates down the realm tree
			increase_feudal_transition_effect = { CHAR = ROOT }
			ROOT.primary_title = { set_variable = { name = landed_army } }
			ROOT = { add_character_flag = { flag = recent_subroman_transition years = 10 } }
		}
	}
}

###############################
# Changed cultural values: Military
# ids 0040-0049
###############################
scripted_trigger a_military_oriented_vassal = {
	basic_character_requirements_trigger = yes
	# Strong martial
	martial >= 12
	# Weak other stat
	OR = {
		diplomacy <= 6
		stewardship <= 6
		learning <= 6
	}
	# Military education trait, not necessarily good at it but popular, or alternatively commander
	OR = {
		has_trait = education_martial_1
		has_trait = education_martial_2
		has_trait = education_martial_3
		has_trait = education_martial_4
		is_knight = yes
	}
	# Not a top-tier education in another domain
	NOT = {
		has_trait = education_diplomacy_4
		has_trait = education_stewardship_4
		has_trait = education_intrigue_4
		has_trait = education_learning_4
	}
}

scripted_trigger at_least_five_military_oriented_vassals_trigger = {
	any_vassal = {
		count >= 5
		a_military_oriented_vassal = yes
	}
}

#Having 5 military-oriented vassals triggers a changed cultural values event
BP_subroman_events.0040 = {
	type = character_event
	title = BP_subroman_events.0040.title
	desc = BP_subroman_events.0040.desc
	
	trigger = {
		basic_game_requirements_trigger = yes
		ROOT = {
			basic_character_requirements_trigger = yes
			does_not_have_max_feudal_transition = yes
			at_least_five_military_oriented_vassals_trigger = yes
			NOT = { has_character_flag = recent_subroman_transition }
		}
		ROOT.primary_title = { NOT = { has_variable = changed_military_cultural_values } }
	}
	
	theme = martial_strategy_focus
	
	immediate = {
		every_vassal = {
			limit = { a_military_oriented_vassal = yes }
			save_temporary_scope_as = the_military_oriented_vassal
		}
	}
	
	left_portrait = {
		character = scope:the_military_oriented_vassal
		animation = personality_bold
	}
	
	right_portrait = {
		character = ROOT
		animation = personality_rational
	}
	
	option = {
		name = BP_subroman_events.0040.a
		custom_description = {
			text = increases_feudal_transition
			#Propagates down the realm tree
			increase_feudal_transition_effect = { CHAR = ROOT }
			ROOT.primary_title = { set_variable = { name = changed_military_cultural_values } }
			ROOT = { add_character_flag = { flag = recent_subroman_transition years = 10 } }
		}
	}
}

###############################
# Changed cultural values: Ecclesiastical
# ids 0050-0059
###############################
scripted_trigger a_clergy_oriented_vassal = {
	basic_character_requirements_trigger = yes
	# Strong martial
	learning >= 12
	# Weak other stat
	OR = {
			diplomacy <= 6
			stewardship <= 6
			martial <= 6
		}
	# Learning education trait, not necessarily good at it but popular, or alternatively part of the clergy
	OR = {
		has_trait = education_learning_1
		has_trait = education_learning_2
		has_trait = education_learning_3
		has_trait = education_learning_4
		is_clergy = yes
		has_trait = devoted
	}
	# Not a top-tier education in another domain
	NOT = {
		has_trait = education_diplomacy_4
		has_trait = education_stewardship_4
		has_trait = education_intrigue_4
		has_trait = education_martial_4
	}
}

scripted_trigger at_least_five_clergy_oriented_vassals_trigger = {
	any_vassal = {
		count >= 5
		a_clergy_oriented_vassal = yes
	}
}

#Having 5 clergy-oriented vassals triggers a changed cultural values event
BP_subroman_events.0050 = {
	type = character_event
	title = BP_subroman_events.0050.title
	desc = BP_subroman_events.0050.desc
	
	trigger = {
		basic_game_requirements_trigger = yes
		ROOT = {
			basic_character_requirements_trigger = yes
			at_least_five_clergy_oriented_vassals_trigger = yes
			does_not_have_max_feudal_transition = yes
			NOT = { has_character_flag = recent_subroman_transition }
		}
		ROOT.primary_title = { NOT = { has_variable = changed_ecclesiastic_cultural_values } }
	}
	
	theme = faith
	
	immediate = {
		every_vassal = {
			limit = { a_clergy_oriented_vassal = yes }
			save_temporary_scope_as = the_clergy_oriented_vassal
		}
	}
	
	left_portrait = {
		character = scope:the_clergy_oriented_vassal
		animation = personality_zealous
	}
	
	right_portrait = {
		character = ROOT
		animation = personality_rational
	}
	
	option = {
		name = BP_subroman_events.0050.a
		custom_description = {
			text = increases_feudal_transition
			#Propagates down the realm tree
			increase_feudal_transition_effect = { CHAR = ROOT }
			ROOT.primary_title = { set_variable = { name = changed_ecclesiastic_cultural_values } }
			ROOT = { add_character_flag = { flag = recent_subroman_transition years = 10 } }
		}
	}
}

###############################
# Switch to feudalism
# ids 0060-0069
###############################

scripted_trigger has_at_least_4_feudal_transition_events_trigger = {
	OR = {
		has_realm_law = subroman_feudal_transition_4
		has_realm_law = subroman_feudal_transition_5
		has_realm_law = subroman_feudal_transition_6
		has_realm_law = subroman_feudal_transition_7
		has_realm_law = subroman_feudal_transition_8
		has_realm_law = subroman_feudal_transition_9
	}
}
scripted_trigger has_at_least_5_feudal_transition_events_trigger = {
	OR = {
		has_realm_law = subroman_feudal_transition_5
		has_realm_law = subroman_feudal_transition_6
		has_realm_law = subroman_feudal_transition_7
		has_realm_law = subroman_feudal_transition_8
		has_realm_law = subroman_feudal_transition_9
	}
}
scripted_trigger has_at_least_6_feudal_transition_events_trigger = {
	OR = {
		has_realm_law = subroman_feudal_transition_6
		has_realm_law = subroman_feudal_transition_7
		has_realm_law = subroman_feudal_transition_8
		has_realm_law = subroman_feudal_transition_9
	}
}
scripted_trigger has_at_least_7_feudal_transition_events_trigger = {
	OR = {
		has_realm_law = subroman_feudal_transition_7
		has_realm_law = subroman_feudal_transition_8
		has_realm_law = subroman_feudal_transition_9
	}
}
scripted_trigger has_at_least_8_feudal_transition_events_trigger = {
	OR = {
		has_realm_law = subroman_feudal_transition_8
		has_realm_law = subroman_feudal_transition_9
	}
}
scripted_trigger has_at_least_9_feudal_transition_events_trigger = {
	has_realm_law = subroman_feudal_transition_9
}

scripted_trigger meets_transition_date_requirements = {
	OR = {
		AND = {
			current_date >= 500.1.1
			has_at_least_9_feudal_transition_events_trigger = yes
		}
		AND = {
			current_date >= 550.1.1
			has_at_least_8_feudal_transition_events_trigger = yes
		}
		AND = {
			current_date >= 600.1.1
			has_at_least_7_feudal_transition_events_trigger = yes
		}
		AND = {
			current_date >= 650.1.1
			has_at_least_6_feudal_transition_events_trigger = yes
		}
		AND = {
			current_date >= 700.1.1
			has_at_least_5_feudal_transition_events_trigger = yes
		}
		AND = {
			current_date >= 750.1.1
			has_at_least_4_feudal_transition_events_trigger = yes
		}
	}
}

# Sub-Roman ruler has accumulated feudal values and is no longer Sub-Roman, converting to feudalism
BP_subroman_events.0060 = {
	type = character_event
	title = BP_subroman_events.0060.title
	desc = BP_subroman_events.0060.desc
	
	trigger = {
		basic_game_requirements_trigger = yes
		meets_transition_date_requirements = yes
		NOT = { has_character_flag = recent_subroman_transition }
	}
	
	theme = default
	
	right_portrait = {
		character = ROOT
		animation = personality_rational
	}
	
	option = {
		name = BP_subroman_events.0060.a
		#Remove all extant variables from the title
		ROOT.primary_title = {
			if = {
				limit = { has_variable = landed_army }
				remove_variable = landed_army
			}
			if = {
				limit = { has_variable = changed_military_cultural_values }
				remove_variable = changed_military_cultural_values
			}
			if = {
				limit = { has_variable = changed_ecclesiastic_cultural_values }
				remove_variable = changed_ecclesiastic_cultural_values
			}
		}
		convert_realm_to_feudal_effect = yes
		#Every direct baron of your title should convert to feudalism as well
		custom_description = {
			text = all_direct_barons_convert_to_fedual
			every_vassal = {
				limit = {
					has_government = subroman_government
					primary_title = { tier = tier_barony }
				}
				convert_realm_to_feudal_effect = yes
			}
		}
		#Every vassal and below gets a chance to have this fire as well between
		#1 week and 1 year, to make transition more gradual
		custom_description = {
			text = creates_chance_for_vassals_to_convert_to_feudal
			every_vassal = {
				limit = { basic_character_requirements_trigger =yes }
				trigger_event = { id = BP_subroman_events.0060 days = { 7 360 } }
			}
		}
	}
}
