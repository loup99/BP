namespace = tributaries

#Clear "Roadblocks"

## Jamie-san: tributaries.1 and tributaries.2 now placed directly in on action to make sure that variable lists are removed from dead character before becoming invalid

#Attacker may or may not become new suzerain
#Root = scope:tributaries_slash_suzerain_war_winner
#scope:tributary_slash_suzerain_loser = scope:defender
tributaries.3 = {
	type = character_event
	hidden = yes
	
	immediate = {
		
		scope:tributary_slash_suzerain_loser = {
			if = {
				limit = {
					is_suzerain = yes
					OR = {
						is_independent_ruler = no
						is_landed = no
					}
				}
				every_in_list = {
					variable = permanent_tributaries
						
					set_variable = { name = my_suzerain value = root }
					root = {
						add_to_variable_list = { name = permanent_tributaries target = prev }
						add_to_variable_list = { name = all_tributaries target = prev }
					}
				}
				clear_variable_list = permanent_tributaries
				clear_variable_list = non_permanent_tributaries
			}
			else_if = {
				limit = {
					is_tributary = yes
					OR = {
						is_independent_ruler = no
						is_landed = no
					}
				}
				if = {
					limit = {
						is_permanent_tributary = {
							SUZERAIN = var:my_suzerain
							TRIBUTARY = scope:tributary_slash_suzerain_loser
						}
					}
					unset_tributary = {
						TRIBUTARY = scope:tributary_slash_suzerain_loser
						TRIBUTARY_BASE_TYPE = flag:permanent
						PASSING_TO_HEIR = no
					}
				}	
				else = {
					unset_tributary = {
						TRIBUTARY = scope:tributary_slash_suzerain_loser
						TRIBUTARY_BASE_TYPE = flag:non_permanent
						PASSING_TO_HEIR = no
					}
				}
			}
		}
	}
}

#Suzerain no longer have any tributaries
#on_monthly_tribute
#Root is suzerain
tributaries.4 = {
	type = character_event
	hidden = yes

	trigger = {
		NOR = {
			is_suzerain = yes
			has_tributaries = yes
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_permanent_tributaries = yes
				}
			}
			clear_variable_list = permanent_tributaries
		}
		if = {
			limit = {
				NOT = {
					has_non_permanent_tributaries = yes
				}
			}
			clear_variable_list = non_permanent_tributaries
		}
		if = {
			limit = {
				NOT = {
					has_tributaries = yes
				}
			}
			clear_variable_list = permanent_tributaries
			clear_variable_list = non_permanent_tributaries
		}
	}
}

#Monthly income from tributes
#on_monthly_tribute
#Root is suzerain
tributaries.5 = {
	type = character_event
	hidden = yes
	orphan = yes

	immediate = {
		#reset everything to 0
		set_variable = {
			name = cash_display
			value = 0
		}
		set_variable = {
			name = prestige_display
			value = 0
		}
		set_variable = {
			name = piety_display
			value = 0
		}
		if = {
			limit = {
				has_non_permanent_tributaries = yes
			}
			every_in_list = {
				variable = non_permanent_tributaries
				pay_long_term_gold = { target = prev gold = { value = monthly_character_income  multiply = var:tribute_gold_percent }}
				add_prestige = var:monthly_prestige_tributary
				add_piety = var:monthly_piety_tributary
				root = {
					add_prestige = prev.var:monthly_prestige_suzerain
					add_piety = prev.var:monthly_piety_suzerain
					change_variable = {
						name = cash_display
						add = { value = prev.monthly_character_income multiply = prev.var:tribute_gold_percent }
					}
					change_variable = {
						name = prestige_display
						add = prev.var:monthly_prestige_suzerain
					}
					change_variable = {
						name = piety_display
						add = prev.var:monthly_piety_suzerain
					}
				}
				
			}
		}
		if = {
			limit = {
				has_permanent_tributaries = yes
			}
			every_in_list = {
				variable = permanent_tributaries

				pay_long_term_gold = { target = prev gold = { value = monthly_character_income  multiply = var:tribute_gold_percent }}
				add_prestige = var:monthly_prestige_tributary
				add_piety = var:monthly_piety_tributary
				root = {
					add_prestige = prev.var:monthly_prestige_suzerain
					add_piety = prev.var:monthly_piety_suzerain
					change_variable = {
						name = cash_display
						add = { value = prev.monthly_character_income multiply = prev.var:tribute_gold_percent }
					}
					change_variable = {
						name = prestige_display
						add = prev.var:monthly_prestige_suzerain
					}
					change_variable = {
						name = piety_display
						add = prev.var:monthly_piety_suzerain
					}
				}

			}
		}
	}
}

#Tributary is informed that it no longer needs to pay tribute
tributaries.8 = {
	type = letter_event
	opening = {
		desc = tributaries.8_opening
	}
	desc = tributaries.8_desc
	sender = scope:actor

	immediate = {
		custom_tooltip = stops_paying_tribute
	}

	option = {
		name = nice
	}
}

#Response from new trib
#Root is suzerain
tributaries.9 = {
	type = letter_event
	opening = {
		desc = tributaries.9_opening
	}
	desc = tributaries.9_desc
	sender = scope:recipient

	immediate = {
	}

	option = {
		name = nice
	}
}	

#Response from new suzerain
#Root is new trib
tributaries.10 = {
	type = letter_event
	opening = {
		desc = tributaries.10_opening
	}
	desc = tributaries.10_desc
	sender = scope:my_suzerain_evt

	immediate = {
		custom_tooltip = becomes_a_trib
	}

	option = {
		name = nice
	}
}	

#Response from ruler
#Root is suzerain
tributaries.11 = {
	type = letter_event
	opening = {
		desc = tributaries.11_opening
	}
	desc = tributaries.11_desc
	sender = scope:not_trib

	option = {
		name = no_trib_sad
	}
}

#Response from Ruler
#Root is nearly tributary
tributaries.12 = {
	type = letter_event
	opening = {
		desc = tributaries.12_opening
	}
	desc = tributaries.12_desc
	sender = scope:not_suzerain

	option = {
		name = tribute_denied
	}
}	

#Tributary calls Suzerain to war: IDs: 100-199

#Suzerain is called to permanent tributary war
#on_war_started
#Root is suzerain
#call_to_arms_tribute is defender
tributaries.100 = {
	type = letter_event
	opening = { desc = tributaries.100.tit }
	title = tributaries.100.tit
	desc = tributaries.100.desc
	sender = {
		character = scope:call_to_arms_tribute
		animation = war_defender
	}

	option = {
		name = tributaries.100.suzerain_joins_the_war
		ai_chance = {
			base = 250
			modifier = {
				add = 125
				ai_honor >= low_positive_ai_value
			}
			modifier = {
				add = 125
				ai_honor >= medium_positive_ai_value
			}
			modifier = {
				add = 125
				ai_honor >= high_positive_ai_value
			}
		}
		add_piety = minor_piety_value
		scope:call_to_arms_tribute = {
			if = {
				limit = {
					root = {
						NOR = {
							is_at_war_as_defender = yes
							is_at_war_with = scope:call_to_arms_tribute
						}
					}
				}
				#Add to all valid defensive wars
				every_character_war = {
					limit = {
						this = { is_civil_war = no }
						scope:call_to_arms_tribute = { is_defender_in_war = prev }
						this = { is_war_leader = scope:call_to_arms_tribute }
					}
					add_defender = root
				}
			}
			else = { debug_log = "Something broke, report to typical" }
			trigger_event = { id = tributaries.102 } #tributary gets a positive response
		}
	}

	option = {
		#AI Suzerain's do not get to refuse foederatus_tributary call to arms
		trigger = {
			trigger_if = {
				limit = { is_ai = yes }
				NAND = {
					exists = scope:call_to_arms_tribute.var:tributary_type
					scope:call_to_arms_tribute.var:tributary_type = flag:foederatus_tributary
				}
			}
		}
		name = tributaries.100.suzerain_refuses_to_join_war
		ai_chance = {
			base = 50
			modifier = {
				add = 25
				ai_honor <= low_negative_ai_value
			}
			modifier = {
				add = 25
				ai_honor <= medium_negative_ai_value
			}
			modifier = {
				add = 25
				ai_honor <= high_negative_ai_value
			}
		}
		add_prestige = major_prestige_loss
		save_scope_as = former_suzerain
		scope:call_to_arms_tribute = { trigger_event = { id = tributaries.101 } } #tributary gets a negative response
	}
}

#Tribute gets negative a response from suzerain
#root is defender and former tribute
tributaries.101 = {
	type = letter_event
	opening = { desc = tributaries.101.tit }
	desc = tributaries.101.desc
	sender = {
		character = scope:former_suzerain
		animation = personality_dishonorable
	}

	immediate = { root = { remove_variable = already_called_my_suzerain } }

	option = { #stop paying tribute
		name = tributaries.101.tribute_stop_war
		unset_tributary = {
			TRIBUTARY = root
			TRIBUTARY_BASE_TYPE = flag:permanent
			PASSING_TO_HEIR = no
		}
		remove_variable = my_suzerain
	}
}

#Tribute gets positive response
tributaries.102 = {
	type = letter_event
	opening = {
		desc = tributaries.102.opening
	}
	desc = tributaries.102.desc
	sender = scope:call_to_arms_tribute.var:my_suzerain

	immediate = {
		scope:call_to_arms_tribute.var:my_suzerain = { save_scope_as = the_suzerain }
		root = { remove_variable = already_called_my_suzerain }
	}

	option = { name = nice }
}

#Suzerain calls tributary to war: IDs: 200-299

#Call to arms received from suzerain
#Root is tributary
tributaries.200 = {
	type = letter_event
	opening = { desc = tributaries.200.opening }
	desc = tributaries.200.desc
	sender = scope:suzerain_cta_caller

	option = {
		name = tributaries.200.join_suzerain_war
		ai_chance = {
			base = 150
			modifier = {
				add = 75
				ai_honor >= low_positive_ai_value
			}
			modifier = {
				add = 75
				ai_honor >= medium_positive_ai_value
			}
			modifier = {
				add = 75
				ai_honor >= high_positive_ai_value
			}
		}
		
		scope:suzerain_cta_caller = {
			every_character_war = {
				if = {
					limit = { prev = { is_attacker_in_war = prev } }
					add_attacker = root
				}
				else_if = {
					limit = { prev = { is_defender_in_war = prev } }
					add_defender = root
				}
			}
		}
	}

	option = {
		#Foederati do not get to refuse call to arms
		trigger = {
			NAND = {
				exists = root.var:tributary_type
				root.var:tributary_type = flag:foederatus_tributary
			}
		}
		name = tributaries.200.do_not_join_suzerain_war
		ai_chance = {
			base = 50
			modifier = {
				add = 25
				ai_honor <= low_negative_ai_value
			}
			modifier = {
				add = 25
				ai_honor <= medium_negative_ai_value
			}
			modifier = {
				add = 25
				ai_honor <= high_negative_ai_value
			}
			modifier = { #Unlikely when the suzerain is stronger than the tributary
				factor = 0.5
				scope:suzerain_cta_caller.current_military_strength > root.current_military_strength
			}
		}
		save_scope_as = refusing_tributary
		scope:suzerain_cta_caller = { trigger_event = { id = tributaries.201 } }
	}
}

#Tributary refuses call to arms
tributaries.201 = {
	type = letter_event
	opening = {
		desc = tributaries.201.opening
	}
	desc = tributaries.201.desc
	sender = scope:refusing_tributary

	immediate = {
		scope:refusing_tributary = {
			set_variable = {
				name = can_be_targeted_for_punitive_war
				value = scope:refusing_tributary.var:my_suzerain
			}
		}
		unset_tributary = {
			TRIBUTARY = scope:refusing_tributary
			TRIBUTARY_BASE_TYPE = flag:permanent
			PASSING_TO_HEIR = no
		}
	}

	option = { name = tributaries.201.how_dare_they }
}
