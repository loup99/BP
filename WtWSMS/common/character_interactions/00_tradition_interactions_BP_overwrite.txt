##### Changed from Vanilla: use BP government conversion rather than vanilla gov change

#Appointing a Podesta over a Commune - Turning a one county holder into a Republican Vassal
#Local culture must have the parameter, as does the granting character.
#Recipient does not need to have local culture.
appoint_podesta_interaction = {
	icon = grant_titles_interaction
	interface_priority = 30
	common_interaction = yes
	category = interaction_category_vassal
	ai_min_reply_days = 0
	ai_max_reply_days = 0
	popup_on_receive = yes
	pause_on_receive = yes
	desc = appoint_podesta_desc

	greeting = positive
	notification_text = REQUEST_REPUBLIC_TEXT

	is_shown = {
		NOT = { scope:actor = scope:recipient } # Can't make yourself a Podesta.
		scope:actor = {
			culture = {
				has_cultural_parameter = can_make_republican_vassals
			}
			any_held_title = {
				count > 1
			}
		}
		scope:recipient = {
			is_ai = yes
			target_is_liege_or_above = scope:actor
			NOT = { government_has_flag = government_is_republic }
			
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = { can_be_granted_titles_by = { RULER = scope:actor } }
		NOT = { scope:actor = { is_at_war_with = scope:recipient } }

		custom_description = {
			text = too_many_republics
			scope:actor = {
				any_vassal = {
					count < 4 #Use Script Value
					highest_held_title_tier >= tier_county
					government_has_flag = government_is_republic
				}
			}
		}

		
		scope:recipient = {
			target_is_liege_or_above = scope:actor
			NOT = { government_has_flag = government_is_republic }
			is_claimant = no

			custom_description = {
				text = must_be_one_county_count
				any_held_title = {
					count = 1
					tier = tier_county
				}
			}

			custom_description = {
				text = must_not_have_landed_relatives
				NOT = {
					any_close_or_extended_family_member = {
						is_landed = yes
					}
				}
			}
			
			custom_description = {
				text = must_not_be_heir_to_any_title
				scope:recipient = {
					any_heir_title = {
						count < 1
						tier >= tier_county
					}
				}
			}

			custom_description = {	#The county must be developed or have at least one city
				text = county_must_have_city
				any_held_title = {
					count = 1
					tier = tier_county
					OR = {
						any_county_province = {
							has_holding_type = city_holding
						}
						development_level > 20
					}
				}
			}
			custom_description = { #County must be of a culture that has the tradition parameter
				text = county_must_have_culture
				any_held_title = {
					count = 1
					tier = tier_county
					any_county_province = {
						culture = {
							has_cultural_parameter = can_make_republican_vassals
						}
					}
				}
			}			
		}

		scope:recipient = { is_busy_in_events_localised = yes }
		trigger_if = {
			limit = {
				scope:recipient = {
					is_ruler = no
				}
			}
			scope:recipient = {
				is_imprisoned = no
			}
		}
	}

	cost = { prestige = minor_prestige_value }
	cooldown = { years = 5 }
	cooldown_against_recipient = { years = 10 }

	##### Changed from Vanilla vvvvv
	on_accept = {
		scope:actor = {
			hidden_effect = {
				send_interface_toast = {
					title = appoint_podesta_interaction_notification

					left_icon = scope:actor					
					right_icon = scope:recipient

					scope:recipient = {
						show_as_tooltip = {
							##### Changed from Vanilla vvvvv
							convert_realm_to_republic_effect = yes
							##### Changed from Vanilla ^^^^^
							create_title_and_vassal_change = {
								type = returned
								save_scope_as = change
								add_claim_on_loss = no
							}
							every_vassal = {
								limit = {
									government_has_flag = government_is_republic
								}
								every_held_title = { 
									change_title_holder = {
										holder = scope:recipient
										change = scope:change
										take_baronies = yes
									}
								}
							}
							resolve_title_and_vassal_change = scope:change
						}
					}
				}
			}
		}
		scope:recipient = {
			##### Changed from Vanilla vvvvv
			convert_realm_to_republic_effect = yes
			##### Changed from Vanilla ^^^^^
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			every_vassal = {
				limit = {
					government_has_flag = government_is_republic
				}
				every_held_title = { 
					change_title_holder = {
						holder = scope:recipient
						change = scope:change
						take_baronies = yes
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
	}
	##### Changed from Vanilla ^^^^^

	auto_accept = yes

	# AI
	ai_potential = {
		culture = {
			has_cultural_parameter = can_make_republican_vassals
			has_cultural_era_or_later = culture_era_high_medieval
		}
		primary_title.tier > tier_county
	}
	
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_targets = {
		ai_recipients = vassals
	}

	ai_frequency = 240

	ai_will_do = {
		base = 100
	}
}

