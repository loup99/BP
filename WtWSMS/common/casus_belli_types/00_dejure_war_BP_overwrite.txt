##### Changed from Vanilla: Made unusable
imperial_reconquest_cb = {
	icon = de_jure_cb
	group = de_jure

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	##### Changed from Vanilla vvvvv
	allowed_for_character = { always = no }
	##### Changed from Vanilla ^^^^^
	
	allowed_against_character = {
		#scope:attacker = { #Not a regular de jure cb.
			#has_de_jure_claim_on = scope:defender
		#}
		NOR = {
			scope:defender = { target_is_liege_or_above = scope:attacker }
			scope:attacker = { target_is_liege_or_above = scope:defender }
		}
	}
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	ai_only_against_neighbors = yes
	
	valid_to_start = {
		scope:target = {
			tier = tier_duchy
			any_in_de_jure_hierarchy = {
				tier = tier_county
				title_province = { geographical_region = custom_roman_full_borders }
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = de_jure_cb_victory_desc_attacker
			}
			desc = de_jure_cb_victory_desc
		}
		
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		every_in_list = {
			list = target_titles
			save_temporary_scope_as = target
		}
		
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			title = scope:target
		}
		resolve_title_and_vassal_change = scope:change
		
		
		# truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = de_jure_cb_white_peace_desc_defender
			}
			desc = de_jure_cb_white_peace_desc
		}
		
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		every_in_list = {
			list = target_titles
			save_temporary_scope_as = target
		}
		
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			victory = no
			title = scope:target
		}
		
		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = de_jure_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = de_jure_cb_defeat_desc_attacker
			}
			desc = de_jure_cb_defeat_desc
		}
		
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
	
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 10
			}
		}
		
		every_in_list = {
			list = target_titles
			save_temporary_scope_as = target
		}
		
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			victory = no
			title = scope:target
		}
	
		# Truce
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "IMPERIAL_RECONQUEST_WAR_SPECIFIC_NAME"
	war_name_base = "IMPERIAL_RECONQUEST_WAR_SPECIFIC_NAME_BASE"
	cb_name = IMPERIAL_RECONQUEST_SPECIFIC_NAME
	interface_priority = 98 #Below take all and regular dejure.

	attacker_wargoal_percentage = 0.8
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	
	max_ai_diplo_distance_to_title = 500
	
	on_invalidated_desc = msg_invalidate_war_title

	ai_score_mult = {
		#Declaring war on the frankokratia leader can really ruin the whole thing
		if = {
			limit = {
				scope:defender = {
					any_owned_story = {
						story_type = frankokratia_story
						NOT = { has_variable = franko_war_complete }
					}
				}
			}
			multiply = 0
		}
	}
}

##### Changed from Vanilla: Made unusable
dismantle_holy_pretender_cb = {
	icon = dissolution_war
	group = de_jure
	
	##### Changed from Vanilla vvvvv
	allowed_for_character = { always = no }
	##### Changed from Vanilla ^^^^^

	allowed_against_character = {
		NOR = {
			scope:defender = { target_is_liege_or_above = scope:attacker }
			scope:attacker = { target_is_liege_or_above = scope:defender }
			scope:attacker = { has_character_flag = flag_emperor_challenged_hre } #Only once per Emperor.
		}
	}
	target_titles = all
	target_title_tier = all
	ignore_effect = change_title_holder

	white_peace_possible = no
	on_white_peace_desc = {
		desc = WHITE_PEACE_DISABLED
	}
	
	valid_to_start = {
		scope:target = { this = title:e_hre }
	}

	on_declaration = {
		on_declared_war = yes
	}	

	on_victory_desc = {
		desc = dismantle_holy_pretender_cb_victory_desc
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = { save_scope_as = hre_emperor }
		scope:attacker = {
			save_scope_as = byz_emperor
			destroy_title = title:e_hre
			add_character_flag = { #No repeats.
				flag = flag_emperor_challenged_hre
			}
		}		
		hidden_effect = {
			title:e_hre = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = scope:attacker.primary_title #Drift all the HRE vassal titles to de jure Roman Empire.
				}
			}
		}
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		# truce
		add_truce_attacker_victory_effect = yes

		hidden_effect = {
			scope:attacker = {
				trigger_event = roman_restoration.0162
			}
			scope:defender = {
				trigger_event = roman_restoration.0163
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		desc = dismantle_holy_pretender_cb_defeat_desc
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = { save_scope_as = hre_emperor }
		scope:attacker = {
			save_scope_as = byz_emperor
			add_character_flag = { #No repeats.
				flag = flag_emperor_challenged_hre
			}
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 10
			}
		}
		
		every_in_list = {
			list = target_titles
			save_temporary_scope_as = target
		}
		
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			#attacker_prestige = -10
			victory = no
			title = scope:target
		}
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		# Truce
		add_truce_attacker_defeat_effect = yes

		hidden_effect = {
			scope:attacker = {
				trigger_event = roman_restoration.0164
			}
			scope:defender = {
				trigger_event = roman_restoration.0165
			}
		}
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "DISMANTLE_EMPIRE_WAR_SPECIFIC_NAME"
	war_name_base = "DISMANTLE_EMPIRE_WAR_SPECIFIC_NAME_BASE"
	cb_name = DISMANTLE_EMPIRE_SPECIFIC_NAME
	interface_priority = 98 #Below take all and regular dejure.
	
	attacker_ticking_warscore = 0.01
	defender_ticking_warscore = 0.05
	attacker_wargoal_percentage = 0.9
	defender_ticking_warscore_delay = { months = 24 }
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	
	max_ai_diplo_distance_to_title = 2000
	
	on_invalidated_desc = msg_invalidate_war_title

	ai_score_mult = {
		#Declaring war on the frankokratia leader can really ruin the whole thing
		if = {
			limit = {
				scope:defender = {
					any_owned_story = {
						story_type = frankokratia_story
						NOT = { has_variable = franko_war_complete }
					}
				}
			}
			multiply = 0
		}
	}
}

##### Changed from Vanilla: Made unusable
dismantle_byz_pretender_cb = {
	icon = dissolution_war
	group = de_jure
	
	##### Changed from Vanilla vvvvv
	allowed_for_character = { always = no }
	##### Changed from Vanilla ^^^^^

	allowed_against_character = {
		NOR = {
			scope:defender = { target_is_liege_or_above = scope:attacker }
			scope:attacker = { target_is_liege_or_above = scope:defender }
			scope:attacker = { has_character_flag = flag_emperor_challenged_byz } #Only once per Emperor.
		}
	}
	target_titles = all
	target_title_tier = all
	ignore_effect = change_title_holder

	white_peace_possible = no
	on_white_peace_desc = {
		desc = WHITE_PEACE_DISABLED
	}
	
	valid_to_start = {
		scope:target = { this = title:e_byzantium }
	}

	on_declaration = {
		on_declared_war = yes
	}	

	on_victory_desc = {
		desc = dismantle_byz_pretender_cb_victory_desc
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = { save_scope_as = byz_emperor }
		scope:attacker = {
			save_scope_as = hre_emperor
			destroy_title = title:e_byzantium
			add_character_flag = { #No repeats.
				flag = flag_emperor_challenged_hre
			}
		}		
		hidden_effect = {
			title:e_byzantium = {
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					set_de_jure_liege_title = scope:attacker.primary_title #Drift all the HRE vassal titles to de jure Roman Empire.
				}
			}
		}
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		# truce
		add_truce_attacker_victory_effect = yes

		hidden_effect = {
			scope:attacker = {
				trigger_event = roman_restoration.0172
			}
			scope:defender = {
				trigger_event = roman_restoration.0173
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		desc = dismantle_byz_pretender_cb_defeat_desc
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = { save_scope_as = byz_emperor }
		scope:attacker = {
			save_scope_as = hre_emperor
			add_character_flag = { #No repeats.
				flag = flag_emperor_challenged_byz
			}
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 10
			}
		}
		
		every_in_list = {
			list = target_titles
			save_temporary_scope_as = target
		}
		
		setup_de_jure_cb = {
			attacker = scope:attacker
			defender = scope:defender
			#attacker_prestige = -10
			victory = no
			title = scope:target
		}
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Truce
		add_truce_attacker_defeat_effect = yes
	
		hidden_effect = {
			scope:attacker = {
				trigger_event = roman_restoration.0174
			}
			scope:defender = {
				trigger_event = roman_restoration.0175
			}
		}
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "DISMANTLE_EMPIRE_WAR_SPECIFIC_NAME"
	war_name_base = "DISMANTLE_EMPIRE_WAR_SPECIFIC_NAME_BASE"
	cb_name = DISMANTLE_EMPIRE_SPECIFIC_NAME
	interface_priority = 98 #Below take all and regular dejure.
	
	attacker_ticking_warscore = 0.01
	defender_ticking_warscore = 0.05
	attacker_wargoal_percentage = 0.9
	defender_ticking_warscore_delay = { months = 24 }
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	
	max_ai_diplo_distance_to_title = 2000
	
	on_invalidated_desc = msg_invalidate_war_title
	
	ai_score_mult = {
		#Declaring war on the frankokratia leader can really ruin the whole thing
		if = {
			limit = {
				scope:defender = {
					any_owned_story = {
						story_type = frankokratia_story
						NOT = { has_variable = franko_war_complete }
					}
				}
			}
			multiply = 0
		}
	}
}
