BP_revoke_title_bureaucratic_interaction_effect = {
	if = {
		limit = {
			scope:recipient = {
				faith = scope:actor.faith
				has_government = theocracy_government
			}
		}
		scope:actor = { add_piety = major_piety_loss }
		if = {
			limit = { exists = scope:actor.faith.religious_head }
			scope:actor.faith.religious_head = {
				add_opinion = {
					target = scope:actor
					modifier = impious_opinion
					opinion = -20
				}
			}
		}
	}
	if = {
		limit = {
			exists = scope:actor.faith.religious_head
			scope:recipient = scope:actor.faith.religious_head
		}
		scope:actor = { add_piety_level = -2 }
	}
	if = { 
		limit = { scope:target.tier != tier_barony }
		scope:actor = {
			bp_revocation_tyranny_bureaucratic_effect = yes
			bp_title_revocation_stress_bureaucratic_effect = yes
			consume_revoke_title_reason = scope:recipient
		}
		scope:recipient = {
			add_pressed_claim = scope:target
			if = {
				limit = { is_a_faction_member = yes }
				add_joined_faction_discontent = 25
			}
		}
		
		if = {
			limit = { scope:target.tier = tier_county }
			scope:target = {
				change_county_control = {
					value = -30
					if = {
						limit = {
							NOT = { scope:recipient.culture = scope:actor.culture }
							scope:recipient.culture = this.culture
						}
						multiply = 1.5
					}
					if = {
						limit = {
							NOT = { scope:recipient.faith = scope:actor.faith }
							scope:recipient.faith = this.faith
						}
						multiply = 1.5
					}
				}
			}
		}
		
		if = {
			limit = {
				scope:actor.culture = { has_cultural_parameter = penalty_for_revoking_titles_from_house_members }
				exists = scope:actor.house
				exists = scope:recipient.house
				scope:actor.house = scope:recipient.house
			}
			if = {
				limit = { scope:target.tier = tier_county }
				scope:actor = { add_prestige = medium_prestige_loss }
			}
			else_if = {
				limit = { scope:target.tier = tier_duchy }
				scope:actor = { add_prestige = major_prestige_loss }
			}
			else = { #Empire
				limit = { scope:target.tier = tier_kingdom }
				scope:actor = { add_prestige = massive_prestige_loss }
			}
		}
		
		if = {
			limit = {
				scope:actor.culture = { has_cultural_parameter = penalty_for_revoking_titles_from_close_family }
				exists = scope:actor
				exists = scope:recipient
				scope:actor = {
					is_close_family_of = scope:recipient
				}
			}
			if = {
				limit = { scope:target.tier = tier_county }
				scope:actor = { add_prestige = medium_prestige_loss }
			}
			else_if = {
				limit = { scope:target.tier = tier_duchy }
				scope:actor = { add_prestige = major_prestige_loss }
			}
			else = { #Empire
				limit = { scope:target.tier = tier_kingdom }
				scope:actor = { add_prestige = massive_prestige_loss }
			}
		}

		if = {
			limit = {
				scope:actor.culture = { has_cultural_parameter = piety_penalty_for_revoking_titles_from_house_members }
				exists = scope:actor.house
				exists = scope:recipient.house
				scope:actor.house = scope:recipient.house
			}
			if = {
				limit = { scope:target.tier = tier_county }
				scope:actor = { add_prestige = medium_piety_loss }
			}
			else_if = {
				limit = { scope:target.tier = tier_duchy }
				scope:actor = { add_prestige = major_piety_loss }
			}
			else = { #Can't revoke empire titles anyway
				limit = { scope:target.tier = tier_kingdom }
				scope:actor = { add_prestige = massive_piety_loss }
			}
		}
	}
	else = {
		if = {
			limit = { NOT = { exists = scope:revoke_title_interaction } }
			custom_tooltip = IS_ALLOWED_TO_REVOKE_TITLE_BARONY_DESC
		}
	}
	
	scope:actor = {
		if = {
			limit = { scope:hook = yes }
			use_hook = scope:recipient
		}
	}
	scope:recipient = {
		add_opinion = {
			target = scope:actor
			modifier = revoked_title
		}
		if = { #If they recently imprisoned you, or asked for your excommunication, they become your rival
			limit = {
				OR = {
					has_opinion_modifier = {
						target = scope:actor
						modifier = released_from_prison
					}
					AND = {
						exists = var:requested_my_excommunication
						var:requested_my_excommunication = scope:actor
					}
				}
				NOT = { has_relation_rival = scope:actor }
			}
			if = {
				limit = { has_relation_potential_rival = scope:actor }
				remove_relation_potential_rival = scope:actor
			}
			set_relation_rival = scope:actor
		}
		else = {
			progress_towards_rival_effect = {
				CHARACTER = scope:actor
				REASON = rival_revoked_title_progress
				OPINION = no
			}
		}
	}
	
	# Penalty for taking the Party Baron's last title. I mean, come on...
	if = {
		limit = {
			scope:recipient = {
				has_character_flag = is_party_baron
				NOT = { any_held_title = { NOT = { this = scope:target } } }
			}
		}
		scope:actor = {
			add_character_modifier = {
				modifier = party_baron_ended_the_party_modifier
				years = 10
			}
			random_owned_story = {
				limit = { story_type = story_party_baron }
				end_story = yes
			}
		}
	}
}

bp_revocation_tyranny_bureaucratic_effect = {
	if = {
		limit = { bp_title_revocation_is_tyrannical_bureaucratic_trigger = yes }
		add_tyranny = revoke_title_tyranny_gain

		#If my culture is different from the recipients
		if = {
			limit = {
				NOT = { culture = scope:recipient.culture }
			} 
			scope:recipient.culture = {
				change_cultural_acceptance = {
					target = scope:actor.culture
					value = bp_revoke_title_culture_acceptance_impact_bureuacratic
					desc = cultural_acceptance_loss_revokation_bureuacratic
				}
			}
		}
	}
	else = {
		if = {
			limit = { has_claim_on = scope:target }
			custom_tooltip = IS_ALLOWED_TO_REVOKE_TITLE_FOR_CLAIM_DESC
		}
		else_if = {
			limit = { has_revoke_title_reason = scope:recipient }
			custom_tooltip = IS_ALLOWED_TO_REVOKE_TITLE_DESC
		}
		else_if = {
			limit = {
				faith = {
					OR = {
						has_doctrine_parameter = pluralism_righteous_revocation_tyranny_reduced
						has_doctrine_parameter = pluralism_fundamentalist_revocation_tyranny_minimal
					}
					faith_hostility_level = {
						target = scope:recipient.faith
						value >= faith_hostile_level
					}
				}
			}
			if = {
				limit = {
					faith = {
						has_doctrine_parameter = pluralism_fundamentalist_revocation_tyranny_minimal 								
						faith_hostility_level = {
							target = scope:recipient.faith
							value = faith_hostile_level
						}
					}
				}
				custom_tooltip = IS_ALLOWED_TO_REVOKE_HOSTILE_INFIDEL_TITLE
			}
			else = { custom_tooltip = IS_ALLOWED_TO_REVOKE_EVIL_INFIDEL_TITLE }
			every_vassal = {
				limit = { faith = scope:recipient.faith }
				custom = INFIDEL_REVOCATION_OPINION
				add_opinion = {
					modifier = angry_opinion
					target = scope:actor
					opinion = {
						value = revoke_title_tyranny_gain
						multiply = -1
					}
				}
			}
		}
	}
}

bp_title_revocation_stress_bureaucratic_effect = {
	if = {
		limit = { bp_title_revocation_is_tyrannical_bureaucratic_trigger = yes }
		stress_impact = {
			generous = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
	}
	else = {
		stress_impact = {
			generous = medium_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
	}
}

bp_war_for_revoke_effect = {
	scope:recipient = {
		save_scope_value_as = {
			name = war_for_revocation_flavour
			value = yes
		}
		start_war = {
			casus_belli = refused_liege_demand_war
			target = scope:actor
		}
	}
	if = {
		limit = { scope:actor = { NOT = { has_revoke_title_reason = scope:recipient } } }
		scope:actor = {
			every_vassal = { #Vassals joining the rebel.
				limit = {
					NOR = {
						this = scope:recipient
						is_ai = no
						has_trait = incapable
						is_imprisoned = yes
						dread_modified_ai_boldness = { #Too scared to do anything.
							dreaded_character = scope:actor
							value <= -50
						}
						is_at_war_with = scope:recipient
						is_at_war_with = scope:actor
					}
					highest_held_title_tier > tier_barony
					OR = {
						#Lovers and friends always back rebel (unless also lovers/friends of the liege)
						AND = {
							OR = {
								has_relation_lover = scope:recipient
								has_relation_friend = scope:recipient
							}
							NOR = {
								has_relation_lover = scope:actor
								has_relation_friend = scope:actor
							}
						}
						#Vassals that either like recipient or have high honor will rally if the liege is being tyrannical.
						AND = {
							# If they can't join a faction against the liege they should not revolt
							NOR = {
								has_relation_lover = scope:actor
								has_relation_friend = scope:actor
								is_allied_to = scope:actor
								is_primary_heir_of = scope:actor
								scope:actor = { has_strong_hook = prev }
								has_dread_level_towards = {
									target = scope:actor
									level = 2
								}
							}
							OR = {
								ai_honor >= 25
								opinion = {
									target = scope:recipient
									value >= 40
								}
							}
							NOR = {
								scope:actor = {
									has_revoke_title_reason = scope:recipient
								}
								scope:actor = {
									has_claim_on = scope:target
								}
								faith = {
									faith_hostility_level = {
										target = scope:recipient.faith
										value >= faith_hostile_level
									}
								}
							}
						}
						#And finally, vassals that really hate their liege will join regardless (provided that they also do not hate recipient).
						AND = {
							opinion = {
								target = scope:recipient
								value >= -25
							}
							OR = {
								#default threshold
								opinion = {
									target = scope:actor
									value <= -50
								}
								#If tyrannical, the default threshold will be reached if at this level
								AND = {
									scope:actor = { bp_title_revocation_is_tyrannical_bureaucratic_trigger = yes }
									opinion = {
										target = scope:actor
										value <= -30 #revoke_title_tyranny_gain adds -20
									}
								}
							}
						}
					}
				}
				save_scope_as = joining_vassal
				custom_tooltip = tooltip_fellow_vassal_joins_war #The war has not started when viewing the interaction screen.
				hidden_effect = {
					scope:recipient = {
						every_character_war = {
							limit = {
								using_cb = refused_liege_demand_war
								casus_belli = {
									primary_attacker = scope:recipient
									primary_defender = scope:actor
								}
							}
							add_to_list = war_to_join
						}
					}
					every_in_list = {
						list = war_to_join
						limit = {
							NOT = { is_defender = prev }
						}
						hidden_effect = {
							set_called_to = prev
						}
						add_attacker = prev
					}
				}
				hidden_effect = {
					scope:actor = {
						add_opinion = {
							target = prev
							modifier = rebellious_vassal_opinion
						}
					}
				}
			}
			every_vassal = {
				limit = {
					is_ai = no
					NOT = { this = scope:recipient }
					is_imprisoned = no
				}
				trigger_event = char_interaction.0232
			}
		}
	}
	scope:recipient = {
		add_opinion = {
			target = scope:actor
			modifier = attempted_arrest_opinion
		}
	}
}
