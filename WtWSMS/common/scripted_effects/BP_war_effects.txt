### Army Spawns
create_odoacer_army_effect = {
	spawn_army = { #Odoacer's East Germans army
		name = event_troop_default_name
		levies = 1000
		men_at_arms = {
			type = light_footmen
			stacks = 3
		}
		men_at_arms = {
			type = armored_footmen
			stacks = 3
		}
		men_at_arms = {
			type = bowmen
			stacks = 3
		}
		men_at_arms = {
			type = light_horsemen
			stacks = 1
		}
		men_at_arms = {
			type = onager
			stacks = 1
		}
		location = province:2497 #Mantua
		war = scope:war
		war_keep_on_attacker_victory = $KEEP_AFTER_VICTORY$ #Otherwise Italy is toast in like 5 years
		inheritable = no #But his son doesn't get to keep them
	}
}
create_zeno_army_effect = {
	spawn_army = {
		name = event_troop_default_name
		levies = 1500
		men_at_arms = {
			type = light_footmen
			stacks = 4
		}
		men_at_arms = {
			type = bowmen
			stacks = 3
		}
		men_at_arms = {
			type = pikemen_unit
			stacks = 2
		}
		men_at_arms = {
			type = cataphract
			stacks = 1
		}
		men_at_arms = {
			type = onager
			stacks = 1
		}
		location = province:$LOCATION$
		war = scope:war
		inheritable = no
	}
}
create_theodoric_army_effect = {
	spawn_army = {
		name = event_troop_default_name
		levies = 1000
		men_at_arms = {
			type = light_footmen
			stacks = 3
		}
		men_at_arms = {
			type = armored_footmen
			stacks = 3
		}
		men_at_arms = {
			type = bowmen
			stacks = 3
		}
		men_at_arms = {
			type = pikemen_unit
			stacks = 2
		}
		men_at_arms = {
			type = onager
			stacks = 1
		}
		location = province:$LOCATION$
		inheritable = no
	}
}

### Unification CB Code
unification_cb_title_management_effect = {
	create_title_and_vassal_change = {
		type = conquest
		save_scope_as = change_titles_taken
		add_claim_on_loss = yes
	}
	create_title_and_vassal_change = {
		type = swear_fealty
		save_scope_as = change_vassal_status
		add_claim_on_loss = no
	}
	#Mark all counties controlled by the top liege for seizure
	every_in_list = {
		list = $TARGET_TITLES$
		
		this = { save_scope_as = the_target_title }
		
		#Go over counties to seize and vassals to transfer
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_county }
			#Seize a county iff it is owned by the defender OR the holders capital is de jure part of target title
			if = {
				limit = {
					holder = {
						OR = {
							this = $DEFENDER$
							AND = {
								target_is_liege_or_above = $DEFENDER$
								NOT = { this.capital_county = { target_is_de_jure_liege_or_above = scope:the_target_title } }
							}
						}
					}
				}
				add_to_temporary_list = titles_taken
			}
			#Transfer a vassal iff his capital is part of the de jare of the target title
			else_if = {
				limit = {
					holder = {
						target_is_liege_or_above = $DEFENDER$
						this.capital_county = { target_is_de_jure_liege_or_above = scope:the_target_title }
					}
				}
				holder = { add_to_temporary_list = vassals_to_transfer }
			}
		}
	}
	#Seize titles
	every_in_list = {
		list = titles_taken
		change_title_holder = {
			holder = $ATTACKER$
			change = scope:change_titles_taken
			take_baronies = yes
		}
	}
	#Transfer Vassals
	every_in_list = {
		list = vassals_to_transfer
		this = {
			change_liege = {
				liege = $ATTACKER$
				change = scope:change_vassal_status
			}
		}
	}
	resolve_title_and_vassal_change = scope:change_titles_taken
	resolve_title_and_vassal_change = scope:change_vassal_status
}
