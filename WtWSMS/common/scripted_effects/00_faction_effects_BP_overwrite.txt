##### Changed from Vanilla: Expanded from Crown Authority Scope to all new governments
##### Changed from Vanilla: Implemented new government transition code
successful_popular_revolt_outcome_effect = {
	##### Changed from Vanilla vvvvv
	save_government_type_effect = {
		THE_NEW_HOLDER = $FACTION_LEADER$
		THE_PREVIOUS_HOLDER = $SOURCE_GOVERNMENT$
	}
	##### Changed from Vanilla ^^^^^

	# Save scopes for later usage.
	$FACTION_LEADER$ = {
		joined_faction = {
			save_scope_as = popular_faction
			every_faction_member = {
				add_to_list = faction_members
			}
			faction_target = {
				save_scope_as = faction_target
			}
		}
	}

	# Compile a list of all counties belonging to the faction.
	scope:popular_faction = {
		every_faction_county_member = {
			add_to_list = siezed_counties
		}
	}
	# Additionally, if we're at war (and not just pressing demands)...
	if = {
		limit = {
			$FACTION_LEADER$ = {
				is_at_war_with = scope:faction_target
			}
		}
		# Add all occupied counties of the correct culture/faith.
		scope:faction_target = {
			every_sub_realm_county = {
				limit = {
					county_controller = $FACTION_LEADER$
					faith = $FACTION_LEADER$.faith
				}
				add_to_list = siezed_counties
			}
		}
		
		# And add any war members that aren't already in the faction.
		$FACTION_LEADER$ = {
			every_character_war = {
				limit = {
					is_defender = scope:faction_target
				}
				every_war_attacker = {
					limit = {
						NOT = { is_in_list = faction_members }
					}
					add_to_list = faction_members
				}
			}
		}
	}

	# Select a 'capital' county for the faction leader.
	scope:popular_faction = {
		ordered_faction_county_member = {
			order_by = {
				value = total_county_levies

				multiply = {
					value = 1

					# Up to 50% bonus points for counties of the correct culture/faith.
					if = {
						limit = { culture = $FACTION_LEADER$.culture }
						add = 0.25
					}
					if = {
						limit = { faith = $FACTION_LEADER$.faith }
						add = 0.25
					}

					# Additional 50% bonus points for counties located in the de jure area of the liege title we want to sieze.
					if = {
						limit = {
							target_is_de_jure_liege_or_above = $TARGET_TITLE$
						}
						add = 0.50
					}

					# Remove 75% for counties owned by a player.
					if = {
						limit = {
							holder = { is_ai = no }
						}
						subtract = 0.75
					}
				}
			}

			#remove_from_list = siezed_counties
			save_scope_as = capital_county
		}
	}

	# CHANGE ZERO: Give the leader a county to stop landless characters from screwing up the hierarchy.
	hidden_effect = {
		create_title_and_vassal_change = {
			type = conquest_populist
			save_scope_as = change_zero
			add_claim_on_loss = yes
		}
		scope:capital_county = {
			change_title_holder = {
				holder = $FACTION_LEADER$
				change = scope:change_zero
				take_baronies = no
			}
		}
		resolve_title_and_vassal_change = scope:change_zero
	}
	
	# Let's add in any additional counties belonging to other participants, which isn't part of the faction already, so that we can assign a kingdom/duchy tier title properly.
	# (We'll remove these again further down.)
	if = {
		limit = {
			any_in_list = {
				list = faction_members
				NOT = { this = $FACTION_LEADER$ }
			}
		}
		every_in_list = {
			list = faction_members
			limit = {
				NOT = { this = $FACTION_LEADER$ }
			}
			every_sub_realm_county = {
				limit = {
					NOT = { is_in_list = siezed_counties }
				}
				add_to_list = siezed_counties
			}
		}
	}

	# CHANGE ONE: Give the leader an appropriately-ranked title.
	create_title_and_vassal_change = {
		type = conquest_populist
		save_scope_as = change_one
		add_claim_on_loss = yes
	}
	if = {
		# Check if we can give them a kingdom.
		limit = {
			OR = {
				any_in_list = { # If the realm is large enough to make a duchy unfeasible.
					list = siezed_counties
					count >= 20
				}
				any_in_list = { # If there is a kingdom title available for creation/usurpation.
					list = siezed_counties
					kingdom = {
						any_de_jure_county = {
							percent >= 0.5
							is_in_list = siezed_counties
						}
						OR = {
							NOT = { exists = holder }
							trigger_if = {
								limit = { exists = holder }
								holder.top_liege = scope:faction_target 

								# Don't usurp the primary title from independent rulers if they don't have an equal-tier title to replace it with.
								trigger_if = {
									limit = {
										this = holder.primary_title
										holder = holder.top_liege
									}
									holder = {
										any_held_title = {
											tier = tier_kingdom
											count >= 2
										}
									}
								}

								# Don't usurp the primary title from vassal players if they don't have an equal-tier title to replace it with
								trigger_if = {
									limit = {
										holder = { is_ai = no }
										NOT = { holder = holder.top_liege }
									}
									holder = {
										any_held_title = {
											tier = tier_kingdom
											count >= 2
										}
									}
								}
							}
						}
						# Special block to stop populist factions from creating Germany if the HRE is still alive and kicking.
						NAND = {
							this = title:k_east_francia
							exists = title:e_hre.holder
						}
					}
				}
			}
		}

		# Check if we can create or usurp a De Jure Kingdom from the map
		every_in_list = {
			list = siezed_counties
			kingdom = {
				if = {
					limit = {
						any_de_jure_county = {
							percent >= 0.5
							is_in_list = siezed_counties
						}
						OR = {
							NOT = { exists = holder }
							trigger_if = {
								limit = { exists = holder }
								holder.top_liege = scope:faction_target 

								# Don't usurp the primary title from independent rulers if they don't have an equal-tier title to replace it with.
								trigger_if = {
									limit = {
										this = holder.primary_title
										holder = holder.top_liege
									}
									holder = {
										any_held_title = {
											tier = tier_kingdom
											count >= 2
										}
									}
								}

								# Don't usurp the primary title from vassal players if they don't have an equal-tier title to replace it with
								trigger_if = {
									limit = {
										holder = { is_ai = no }
										NOT = { holder = holder.top_liege }
									}
									holder = {
										any_held_title = {
											tier = tier_kingdom
											count >= 2
										}
									}
								}
							}
						}
						# Special block to stop populist factions from creating Germany if the HRE is still alive and kicking.
						NAND = {
							this = title:k_east_francia
							exists = title:e_hre.holder
						}
					}
					add_to_list = potential_kingdoms
				}
			}
		}

		# If we found one or more valid De Jure Kingdoms, pick the best one for us to take.
		if = {
			limit = {
				any_in_list = {
					list = potential_kingdoms
					count >= 1
					NAND = {
						this = title:k_east_francia
						exists = title:e_hre.holder
					}
				}
			}
			ordered_in_list = {
				list = potential_kingdoms
				limit = {
					NAND = {
						this = title:k_east_francia
						exists = title:e_hre.holder
					}
				}

				order_by = {
					value = 1
					every_in_list = {
						list = siezed_counties
						limit = { kingdom = prev }
						add = 1
					}
				}

				change_title_holder = {
					holder = $FACTION_LEADER$
					change = scope:change_one
				}
			}
		}
		# Otherwise, create a new titular Kingdom title.
		else = {
			create_popular_revolt_title_effect = {
				FACTION = scope:popular_faction
				FACTION_LEADER = $FACTION_LEADER$
				TIER = kingdom
			}
			scope:new_title = {
				change_title_holder = {
					holder = $FACTION_LEADER$
					change = scope:change_one
				}
			}
		}
	}

	else_if = {
		# Check if we can give them a duchy.
		limit = {
			OR = {
				any_in_list = { # If the realm is large enough to make a county as the highest tier unfeasible.
					list = siezed_counties
					count >= 8
				}
				any_in_list = { # If there is a duchy title available for creation/usurpation.
					list = siezed_counties
					duchy = {
						any_de_jure_county = {
							percent >= 0.5
							is_in_list = siezed_counties
						}
						OR = {
							NOT = { exists = holder }
							trigger_if = {
								limit = { exists = holder }
								holder.top_liege = scope:faction_target
			
								# Don't usurp the primary title from independent rulers if they don't have an equal-tier title to replace it with.
								trigger_if = {
									limit = {
										this = holder.primary_title
										holder = holder.top_liege
									}
									holder = {
										any_held_title = {
											tier = tier_duchy
											count >= 2
										}
									}
								}
			
								# Don't usurp the primary title from vassal players if they don't have an equal-tier title to replace it with
								trigger_if = {
									limit = {
										holder = { is_ai = no }
										NOT = { holder = holder.top_liege }
									}
									holder = {
										any_held_title = {
											tier = tier_duchy
											count >= 2
										}
									}
								}
							}
						}
					}
				}
			}
		}

		# Check if we can create or usurp a De Jure Duchy from the map
		every_in_list = {
			list = siezed_counties
			duchy = {
				if = {
					limit = {
						any_de_jure_county = {
							percent >= 0.4
							is_in_list = siezed_counties
						}
						OR = {
							NOT = { exists = holder }
							trigger_if = {
								limit = { exists = holder }
								holder.top_liege = scope:faction_target

								# Don't usurp the primary title from independent rulers if they don't have an equal-tier title to replace it with.
								trigger_if = {
									limit = {
										this = holder.primary_title
										holder = holder.top_liege
									}
									holder = {
										any_held_title = {
											tier = tier_duchy
											count >= 2
										}
									}
								}

								# Don't usurp the primary title from vassal players if they don't have an equal-tier title to replace it with
								trigger_if = {
									limit = {
										holder = { is_ai = no }
										NOT = { holder = holder.top_liege }
									}
									holder = {
										any_held_title = {
											tier = tier_duchy
											count >= 2
										}
									}
								}
							}
						}
					}
					add_to_list = potential_duchies
				}
			}
		}

		# If we found one or more valid De Jure Duchies, pick the best one for us to take.
		if = {
			limit = {
				any_in_list = {
					list = potential_duchies
					count >= 1
				}
			}
			ordered_in_list = {
				list = potential_duchies

				order_by = {
					value = 1
					every_in_list = {
						list = siezed_counties
						limit = { duchy = prev }
						add = 1
					}
				}

				change_title_holder = {
					holder = $FACTION_LEADER$
					change = scope:change_one
				}
			}
		}
		# Otherwise, create a new titular Duchy title.
		else = {
			create_popular_revolt_title_effect = {
				FACTION = scope:popular_faction
				FACTION_LEADER = $FACTION_LEADER$
				TIER = duchy
			}
			scope:new_title = {
				change_title_holder = {
					holder = $FACTION_LEADER$
					change = scope:change_one
				}
			}
		}
	}

	# If the new realm is too small, or is unable to take/create a higher tier title, the populist leader only gets the county titles themselves.
	resolve_title_and_vassal_change = scope:change_one

	# If the title we gave our leader is a new dynamic title, generate a CoA for it.
	if = {
		limit = {
			exists = scope:new_title
		}
		scope:new_title = {
			set_capital_county = scope:capital_county
			generate_coa = yes
		}
	}

	# CHANGE TWO: Transfer the siezed counties to the leader.
	create_title_and_vassal_change = {
		type = conquest_populist
		save_scope_as = change_two
		add_claim_on_loss = yes
	}
	if = { # But remove counties from any faction/war member first.
		limit = {
			any_in_list = {
				list = faction_members
				NOT = { this = $FACTION_LEADER$ }
			}
		}
		every_in_list = {
			list = faction_members
			limit = {
				NOT = { this = $FACTION_LEADER$ }
			}
			every_sub_realm_county = {
				remove_from_list = siezed_counties
			}
		}
	}
	every_in_list = {
		list = siezed_counties
		
		change_title_holder = {
			holder = $FACTION_LEADER$
			change = scope:change_two
			take_baronies = no
		}
	}
	resolve_title_and_vassal_change = scope:change_two

	# CHANGE THREE: Split the leader off into an independent realm. Then make all faction members vassals of the populist leader.
	create_title_and_vassal_change = {
		type = conquest_populist
		save_scope_as = change_three
		add_claim_on_loss = yes
	}
	every_in_list = {
		list = faction_members

		# Lower-ranked vassals switch lieges to the faction leader.
		if = {
			limit = {
				this.primary_title.tier < $FACTION_LEADER$.primary_title.tier
				this.primary_title.tier >= tier_county
				NOT = { this = $FACTION_LEADER$ }
			}
			change_liege = {
				liege = $FACTION_LEADER$
				change = scope:change_three
			}
		}
		# Same or higher-ranked vassal get independence.
		else_if = {
			limit = {
				NOT = { this = $FACTION_LEADER$ }
			}
			hidden_effect = {
				becomes_independent = {
					change = scope:change_three
				}
				send_interface_toast = {
					title = POPULIST_FACTION_INDEPENDENCE_TITLE
					custom_tooltip = POPULIST_FACTION_INDEPENDENCE_DESC
					left_icon = $FACTION_LEADER$
					right_icon = scope:faction_target
				}
			}
		}
	}

	resolve_title_and_vassal_change = scope:change_three

	# Sub-change: if any counties have been offended by HumSac'ing, since they're revolting, and tempers have hit fever pitch, remove their county opinion malus.
	$FACTION_LEADER$ = { fp1_remove_humsac_offended_counties_effect = yes }

	##### Changed from Vanilla vvvvv

	# CHANGE FOUR: If there are any disconnected counties, split them off via exclave independence rules.
	# However. We don't do this if there is a player in the faction, since it can remove land from the player, or in worst case, make the player game over.
	if = {
		limit = {
			NOT = {
				any_in_list = {
					list = faction_members
					is_ai = no
				}
			}
		}
		scope:capital_county = {
			split_noncontiguous_counties_from_revolt_effect = {
				FACTION_LEADER = $FACTION_LEADER$
				SOURCE_GOVERNMENT = $SOURCE_GOVERNMENT$
			}
		}
	}
	##### Changed from Vanilla ^^^^^

	# If the faction still exists, dissolve it (it's no longer relevant).
	hidden_effect = {
		if = {
			limit = {
				exists = scope:popular_faction
			}
			scope:popular_faction = {
				destroy_faction = yes
			}
		}
	}

	##### Changed from Vanilla vvvvv

	#Set up government type for all the new holders
	hidden_effect = {
		convert_government_type_effect = {
			THE_PREVIOUS_HOLDER = $SOURCE_GOVERNMENT$
			THE_NEW_HOLDER = $FACTION_LEADER$
		}
		$FACTION_LEADER$ = { government_transition_garbage_collect_effect = yes }
		every_in_list = {
			list = faction_members
			
			convert_government_type_effect = {
				THE_PREVIOUS_HOLDER = $SOURCE_GOVERNMENT$
				THE_NEW_HOLDER = this
			}
			this = { government_transition_garbage_collect_effect = yes }
		}
		every_in_list = {
			list = siezed_counties
			
			convert_government_type_effect = {
				THE_PREVIOUS_HOLDER = $SOURCE_GOVERNMENT$
				THE_NEW_HOLDER = this.holder
			}
			this.holder = { government_transition_garbage_collect_effect = yes }
		}
		$SOURCE_GOVERNMENT$ = { government_transition_garbage_collect_effect = yes }
	}
	##### Changed from Vanilla ^^^^^
	
	# Give the leader some gold if they don't have any - We do this at the very end to make sure the gold is applied correctly.
	hidden_effect = {
		if = {
			limit = {
				$FACTION_LEADER$ = {
					gold < 10
				}
			}
			every_in_list = { # Scale the amount on the number of counties taken.
				list = siezed_counties
				$FACTION_LEADER$ = {
					add_gold = 50
				}
			}
		}
	}
}

##### Changed from Vanilla: Implemented new government transition code
split_noncontiguous_counties_from_revolt_effect = {
	# Start off by making a list of all disconnected Counties
	every_connected_county = {
		invert = yes
		max_naval_distance = 2000
		add_to_list = disconnected_counties
	}

	# Then release contiguous disconnected areas.
	every_in_list = {
		list = disconnected_counties

		if = {
			limit = {
				holder.top_liege = $FACTION_LEADER$
			}
			save_scope_as = county_of_origin
			
			create_character = {
				location = scope:county_of_origin.title_province
				culture = scope:county_of_origin.culture
				faith = scope:county_of_origin.faith
				gender_female_chance = 50
				age = 32
				save_scope_as = new_county_holder
			}
			
			##### Changed from Vanilla vvvvv
			save_government_type_effect = { #Need to match this with convert_government_type_effect
				THE_PREVIOUS_HOLDER = $SOURCE_GOVERNMENT$
				THE_NEW_HOLDER = scope:new_county_holder
			}
			##### Changed from Vanilla ^^^^^
			
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = exclave_change
				add_claim_on_loss = no
			}
			every_in_list = {
				list = disconnected_counties
				limit = {
					holder.top_liege = $FACTION_LEADER$
					is_connected_to = { target = scope:county_of_origin }
				}
				change_title_holder = {
					holder = scope:new_county_holder
					change = scope:exclave_change
				}
			}
			scope:new_county_holder = {
				becomes_independent = {
					change = scope:exclave_change
				}
			}
			resolve_title_and_vassal_change = scope:exclave_change
			
			scope:new_county_holder = {
				if = { # Just in case they need to create a duchy
					limit = {
						gold < 500
					}
					add_gold = 500
				}
			}
			
			##### Changed from Vanilla vvvvv
			convert_government_type_effect = {
				THE_PREVIOUS_HOLDER = $SOURCE_GOVERNMENT$
				THE_NEW_HOLDER = scope:new_county_holder
			}
			scope:new_county_holder = { government_transition_garbage_collect_effect = yes }
			##### Changed from Vanilla ^^^^^
		}
	}
}
