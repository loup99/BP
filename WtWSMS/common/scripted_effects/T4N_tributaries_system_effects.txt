
# Params
# $SUZERAIN$
# 	Character
#	The character to receive tribute
# $TRIBUTARY$
# 	Character
# 	The character to be paying tribute
# $TYPE$
#	TributaryType (name of scripted effect)
#	The type of tributary being created
make_tributary = {
	$TYPE$ = {
		TRIBUTARY = $TRIBUTARY$
		SUZERAIN = $SUZERAIN$
	}
}


# Params
# $SUZERAIN$
# 	Character
#	The character to receive tribute
# $TRIBUTARY_BASE_TYPE$
#   Flag
#   Base type of tributary ( flag:permanent flag:non_permanent )
# $TRIBUTARY$
# 	Character
# 	The character to be paying tribute
# $TRIBUTE_GOLD_PERCENT$
# 	Value
# 	The percent of income to be paid by the tributary
# 	Ideally between 0 and 1 but can be any number really
# $MONTHLY_PRESTIGE_SUZERAIN$
# 	Value
# 	How much prestige does the suzerain earn every month
# 	Can be positive or negative
# $MONTHLY_PRESTIGE_TRIBUTARY$
# 	Value
# 	How much prestige does the tributary earn every month
# 	Can be positive or negative
# $MONTHLY_PIETY_SUZERAIN$
# 	Value
# 	How much piety does the suzerain earn every month
# 	Can be positive or negative
# $MONTHLY_PIETY_TRIBUTARY$
# 	Value
# 	How much piety does the tributary earn every month
# 	Can be positive or negative
# $MAN_AT_ARM_CAP_PER_TEN_SUBJECTS$
#	Value
#	How much Men at Arms suzerain will get per 10 tributaries of said type
#	Can be intiger, float, negative or positive (hard coded max of 20 any value over it will loop to 20) [blame pdx for not allowing dynamic modifiers]
# $MONTHLY_LEVY_REINFORCEMENT_RATE_PER_SUBJECT$
#	Value
#	How much of levy reinforcment rate does suzerain gets per every subject
#	must be a % value, can be both negative or positive (hard coded max is 40% any value over it will loop to 40%) [same as before]
# $MONTHLY_LEVY_REINFORCEMENT_RATE_TRIBUTARY$
#	Value
#	How much of levy reinforcment rate does tributary loses to\gains from suzerain
#	must be a % value, can be both negative or positive (hard coded max is 20% any value over it will loop to 20%) [same as before]
# $CAN_DECLARE_WAR_ON_TRIB_FLAG$
#	Flag
#	Can suzerain declare war on his tributaries
#	Accepted values: flag:yes and flag:no
# $CAN_CALL_TO_WAR_SUZERAIN_FLAG$
#	Flag
#	Can suzerain call to war his tributaries
#	Accepted values: flag:yes and flag:no
# $CAN_CALL_TO_WAR_TRIBUTARY_FLAG$
#	Flag
#	Can Tributary call to war his suzerain
#	Accepted values: flag:yes and flag:no


define_tributary = {
	# Setup suzerain variables
	$SUZERAIN$ = {
		if = {
			limit = {
				NOT = { has_variable = suzerain }
			}
			set_variable = suzerain
		}

		switch = {
			trigger = $TRIBUTARY_BASE_TYPE$

			flag:permanent = { 
				add_to_variable_list = {
					name = permanent_tributaries
					target = $TRIBUTARY$
				}
			}
			flag:non_permanent = { 
				add_to_variable_list = {
					name = non_permanent_tributaries
					target = $TRIBUTARY$
				}
			}
		}
		add_to_variable_list = {
			name = all_tributaries
			target = $TRIBUTARY$
		}
	}

	$TRIBUTARY$ = {
		# Store suzerain scope
		set_variable = { name = my_suzerain value = $SUZERAIN$ }

		# Store tributary type
		# Useful for localisation and similar customisation
		set_variable = {
			name = tributary_type
			value = $TYPE$
		}

		# Tribute values
		set_variable = {
			name = tribute_gold_percent
			value = $TRIBUTE_GOLD_PERCENT$
		}
		set_variable = {
			name = monthly_prestige_suzerain
			value = $MONTHLY_PRESTIGE_SUZERAIN$
		}
		set_variable = {
			name = monthly_prestige_tributary
			value = $MONTHLY_PRESTIGE_TRIBUTARY$
		}
		set_variable = {
			name = monthly_piety_suzerain
			value = $MONTHLY_PIETY_SUZERAIN$
		}
		set_variable = {
			name = monthly_piety_tributary
			value = $MONTHLY_PIETY_TRIBUTARY$
		}
		set_variable = {
			name = man_at_arm_cap_per_ten_subjects
			value = $MAN_AT_ARM_CAP_PER_TEN_SUBJECTS$
		}	
		set_variable = {
			name = monthly_levy_reinforcement_rate_per_subject
			value = $MONTHLY_LEVY_REINFORCEMENT_RATE_PER_SUBJECT$
		}	
		set_variable = {
			name = monthly_levy_reinforcement_rate_tributary
			value = $MONTHLY_LEVY_REINFORCEMENT_RATE_TRIBUTARY$
		}
		#can declare war on tributary
		#can call to war Suzerain
		#can call to war Tributary flags

		set_variable = {
			name = can_declare_war_on_trib
			value = $CAN_DECLARE_WAR_ON_TRIB_FLAG$
		}
		set_variable = {
			name = can_call_to_war_suzerain
			value = $CAN_CALL_TO_WAR_SUZERAIN_FLAG$
		}		
		set_variable = {
			name = can_call_to_war_tributary
			value = $CAN_CALL_TO_WAR_TRIBUTARY_FLAG$
		}
		
		set_trib_char_modifier_effect = { TYPE = $TYPE$ }
		
		if = { #This should *only* need to be called in cases where the tributary is not passing to the heir (aka new tributaries)
			limit = {
				exists = this.primary_title
				exists = this.var:my_suzerain
			}
			primary_title = { set_color_from_title = prev.var:my_suzerain.primary_title }
		}
	}

	#calulate income
	$SUZERAIN$ = {
		if = {
			limit = {
				exists = var:cash_display #if it exists then every other also must exist 
			}
			every_in_list = {
				variable = all_tributaries
				prev = {
					change_variable = {
						name = cash_display
						add = { value = prev.monthly_character_income multiply = prev.var:tribute_gold_percent }
					}
					change_variable = {
						name = prestige_display
						add = prev.var:monthly_prestige_suzerain
					}
					change_variable = {
						name = piety_display
						add = prev.var:monthly_piety_suzerain
					}
				}
			}
		}
		else = {
			every_in_list = {
				variable = all_tributaries
				prev = {
					set_variable = {
						name = cash_display
						value = { value = prev.monthly_character_income multiply = prev.var:tribute_gold_percent }
					}
					set_variable = {
						name = prestige_display
						value = prev.var:monthly_prestige_suzerain
					}
					set_variable = {
						name = piety_display
						value = prev.var:monthly_piety_suzerain
					}
				}
			}
		}
	}
}

#In case of tributaries having some special modifiers attached
remove_trib_char_modifier_effect = { #Char scope
	if = {
		limit = { has_character_modifier = foederatus_char_mod }
		remove_character_modifier = foederatus_char_mod
	}
	if = {
		limit = { has_character_modifier = foederatus_right_to_rule }
		remove_character_modifier = foederatus_right_to_rule
	}
}
set_trib_char_modifier_effect = { #Char scope
	this = {
		switch = {
			trigger = $TYPE$
			
			flag:karling_tributary = {}
			flag:china_tributary = {}
			flag:permanent_tributary = {}
			flag:foederatus_tributary = { add_character_modifier = foederatus_char_mod }
		}
	}
}

pass_tributary_type_to_heir = {
	$SCOPE$ = {
		switch = {
			trigger = $TYPE$

			flag:karling_tributary = {
				make_tributary = {
					TYPE = tributary_karling
					TRIBUTARY = $TRIBUTARY$
					SUZERAIN = $NEW_RULER$
				}
			}
			flag:china_tributary = {
				make_tributary = {
					TYPE = tributary_china
					TRIBUTARY = $TRIBUTARY$
					SUZERAIN = $NEW_RULER$
				}
			}
			flag:permanent_tributary = {
				make_tributary = {
					TYPE = tributary_permanent
					TRIBUTARY = $TRIBUTARY$
					SUZERAIN = $NEW_RULER$
				}
			}
			flag:foederatus_tributary = {
				make_tributary = {
					TYPE = foederatus_tributary
					TRIBUTARY = $TRIBUTARY$
					SUZERAIN = $NEW_RULER$
				}
			}
		}
	}
}


ruler_offer_tribute_to_recipient_effect = {
	scope:actor = {
		if = {
			limit = {
				scope:permanent_trib = yes
			}
			make_tributary = {
				TYPE = tributary_non_permanent
				TRIBUTARY = scope:recipient
				SUZERAIN = scope:actor
			}
		}	
		if = {
			limit = {
				scope:non_permanent_trib = yes
			}	
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = scope:recipient
				SUZERAIN = scope:actor
			}
		}
	}
}

offer_tribute_effect = {
	scope:recipient = {
		if = {
			limit = {
				scope:permanent_trib = yes
			}
			make_tributary = {
				TYPE = tributary_non_permanent
				TRIBUTARY = scope:recipient
				SUZERAIN = scope:actor
			}
		}	
		if = {
			limit = {
				scope:non_permanent_trib = yes
			}	
			make_tributary = {
				TYPE = tributary_permanent
				TRIBUTARY = scope:recipient
				SUZERAIN = scope:actor
			}
		}
	}
}

unset_tributary = {
	$TRIBUTARY$ = {
		switch = {
			trigger = $TRIBUTARY_BASE_TYPE$
			flag:permanent = {
				var:my_suzerain = {
					remove_list_variable = { name = permanent_tributaries target = prev }
				}
				remove_variable = possible_vasalisation_year
			}
			flag:non_permanent = {
				var:my_suzerain = {
					remove_list_variable = { name = non_permanent_tributaries target = prev }
				}
				remove_variable = possible_permafication_year
			}
		}

		var:my_suzerain = { remove_list_variable = { name = all_tributaries target = prev } }

		# Store suzerain scope
		remove_variable = my_suzerain

		# Store tributary type
		remove_variable = tributary_type

		# Tribute values
		remove_variable = tribute_gold_percent
		remove_variable = monthly_prestige_suzerain
		remove_variable = monthly_prestige_tributary
		remove_variable = monthly_piety_suzerain
		remove_variable = monthly_piety_tributary
		remove_variable = man_at_arm_cap_per_ten_subjects
		remove_variable = monthly_levy_reinforcement_rate_per_subject
		remove_variable = monthly_levy_reinforcement_rate_tributary
		#can declare war on tributary
		#can call to war Suzerain
		#can call to war Tributary flags
		remove_variable = can_declare_war_on_trib
		remove_variable = can_call_to_war_suzerain
		remove_variable = can_call_to_war_tributary
		
		remove_trib_char_modifier_effect = yes
		
		#Because unset is called *whenever* it is passed/terminated, we need this check
		if = {
			limit = { NOT = { always = $PASSING_TO_HEIR$ } } #NB: This is right; read carefully
			primary_title = { reset_color_effect = yes }
		}
	}
}