establish_de_jure_kingdom_decision_effect = {
	#You get to be part of an empire I suppose
	$FORMER$.primary_title = {
		set_de_jure_liege_title = $FORMER$.capital_county.empire
		set_capital_county = $FORMER$.capital_county
	}
	#Shift all controlled adjacent duchies in the same kingdom to the primary title
	$FORMER$.capital_county.kingdom = {
		every_duchy = {
			limit = {
				$FORMER$ = { completely_controls = prev }
				this.kingdom = root.capital_county.kingdom
				any_de_jure_county = { any_neighboring_county = { this.duchy = $FORMER$.capital_county.duchy } }
			}
			set_de_jure_liege_title = $FORMER$.primary_title
		}
	}
}
swap_de_jure_kingdom_decision_effect = {
	#You get to be part of an empire I suppose
	$FORMER$.primary_title = { set_de_jure_liege_title = $FORMER$.capital_county.empire }
	#Shift all controlled adjacent duchies in the same kingdom to the primary title
	$FORMER$.capital_county.kingdom = {
		every_in_de_jure_hierarchy = {
			limit = { this.tier = tier_duchy }
			set_de_jure_liege_title = $FORMER$.primary_title
		}
	}
}
establish_de_jure_empire_decision_effect = {
	$FORMER$.primary_title = { set_capital_county = $FORMER$.capital_county }
	#Shift all controlled adjacent duchies in the same empire to the primary title
	$FORMER$.capital_county.empire = {
		every_kingdom = {
			limit = {
				$FORMER$ = { completely_controls = prev }
				this.empire = root.capital_county.empire
				any_de_jure_county = { any_neighboring_county = { this.kingdom = $FORMER$.capital_county.kingdom } }
			}
			set_de_jure_liege_title = $FORMER$.primary_title
		}
	}
}
create_ostrogothic_culture_effect = {
	$CREATING_CHAR$ = {
		if = {
			limit = { culture:gothic = { has_cultural_tradition = tradition_concubines } }
			culture:ostrogothic = { add_culture_tradition = tradition_concubines }
		}
		#All landed counties become (order matters here)
		culture:gothic = { every_culture_county = { set_county_culture = culture:thracian_gothic } }
		#All minorities flip
		hidden_effect = {
			every_county = {
				limit = { county_has_specific_minority_culture_trigger = { CULTURE = culture:gothic } }
				if = {
					limit = { county_has_specific_large_minority_culture_trigger = { CULTURE = culture:gothic } }
					remove_list_variable = {
						name = culture_minorities_large
						target = culture:gothic
					}
					add_to_variable_list = {
						name = culture_minorities_large
						target = culture:thracian_gothic
					}
				}
				else = {
					remove_list_variable = {
						name = culture_minorities_small
						target = culture:gothic
					}
					add_to_variable_list = {
						name = culture_minorities_small
						target = culture:thracian_gothic
					}
				}
			}
		}
		#All courtiers of the former become Ostrogothic
		custom_description = {
			text = your_courtiers_and_guests_become_ostrogothic
			subject = culture:gothic
			object = culture:ostrogothic
			every_courtier_or_guest = {
				limit = { this.culture = culture:gothic }
				set_culture = culture:ostrogothic
			}
		}
		set_culture = culture:ostrogothic
		custom_description = {
			text = other_rulers_and_courtiers_become_thracian_gothic
			subject = culture:gothic
			object = culture:thracian_gothic
			#Every other gothic ruler or char becomes thracian_gothic
			every_ruler = {
				limit = { NOT = { this = $CREATING_CHAR$ } }
				if = {
					limit = { this.culture = culture:gothic }
					set_culture = culture:thracian_gothic
				}
				every_courtier_or_guest = {
					limit = { this.culture = culture:gothic }
					set_culture = culture:thracian_gothic
				}
			}
		}
		hidden_effect = {
			culture:ostrogothic = {
				set_cultural_acceptance = {
					target = culture:thracian_gothic
					value = 100
				}
			}
		}
	}
}
