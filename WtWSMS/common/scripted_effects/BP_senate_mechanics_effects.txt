disestablished_senate_effect = {
	add_prestige = 1000
	
	#The Consul _Really_ Hates You
	every_living_character = {
		limit = { has_character_modifier = roman_consul_$REGION$ }
		remove_trait = senator_$REGION$
		remove_character_modifier = roman_consul_$REGION$
		add_opinion = {
			target = root
			modifier = hate_opinion
			opinion = -200
		}
	}
	#The Senators Hates You
	custom_tooltip = {
		text = senators_hate_you
		every_living_character = {
			limit = { has_trait = senator_$REGION$ }
			remove_trait = senator_$REGION$
			add_opinion = {
				target = root
				modifier = hate_opinion
				opinion = -100
			}
		}
	}
	#If he's alive, the Emperor hates you
	title:e_roman_empire.holder ?= {
		add_opinion = {
			target = root
			modifier = hate_opinion
			opinion = -100
		}
	}
	#The Regional Empires, if they exist, hate you
	title:$MAIN_EMPIRE$.holder ?= {
		add_opinion = {
			target = root
			modifier = hate_opinion
			opinion = -200
		}
	}
	title:$OPPOSITE_EMPIRE$.holder ?= {
		add_opinion = {
			target = root
			modifier = hate_opinion
			opinion = -100
		}
	}
	#Non-Senatorial Families are annoyed at their loss of prestige
	#custom_tooltip = {
		#text = senatorial_families_hate_you
		every_living_character = {
			limit = {
				exists = dynasty
				this.dynasty = { has_dynasty_modifier = roman_senate_family_$REGION$ }
				this = this.dynasty.dynast
			}
			this.dynasty = { remove_dynasty_modifier = roman_senate_family_$REGION$ }
		}
	#}
	
	remove_global_variable = $REGION$_senate_is_established
}
destroy_senate_effect = {
	every_living_character = {
		limit = { has_character_modifier = roman_consul_$REGION$ }
		remove_trait = senator_$REGION$
		remove_character_modifier = roman_consul_$REGION$
	}
	every_living_character = {
		limit = { has_trait = senator_$REGION$ }
		remove_trait = senator_$REGION$
	}
	remove_global_variable = $REGION$_senate_is_established
}

senate_election_effect = {
	every_living_character = { #Remove the old Consul
		limit = { has_character_modifier = roman_consul_$REGION$ }
		remove_character_modifier = roman_consul_$REGION$
		if = {
			limit = { NOT = { has_trait = former_consul_$REGION$ } }
			add_trait = former_consul_$REGION$
		}
		save_scope_as = old_consul_$REGION$
	}
	if = { #Elevate the nominee if he exists
		limit = { any_living_character = { has_character_modifier = roman_consul_nominee_$REGION$ } }
		every_living_character = {
			limit = { has_character_modifier = roman_consul_nominee_$REGION$ }
			remove_character_modifier = roman_consul_nominee_$REGION$
			add_character_modifier = roman_consul_$REGION$
			if = {
				limit = { NOT = { has_trait = senator_$REGION$ } }
				add_trait = senator_$REGION$
			}
			save_scope_as = new_consul_$REGION$
		}
	}
	else = { #Otherwise, pick a random senator who is _not_ the city holder
		random_living_character = {
			limit = {
				NOT = { this = title:$BARONY$.holder.top_liege }
				NOT = { has_character_modifier = roman_consul_$REGION$ }
				NOT = { this = scope:old_consul_$REGION$ }
				has_trait = senator_$REGION$
				character_is_in_senate_$REGION$_trigger = yes
			}
			add_character_modifier = roman_consul_$REGION$
			save_scope_as = new_consul_$REGION$
		}
	}
	
	every_ruler = {
		limit = {
			is_ai = no
			in_diplomatic_range = title:$BARONY$.holder
		}
		send_interface_toast = {
			type = event_generic_neutral
			title = senate_$REGION$_elected_new_consul_title
			custom_tooltip = senate_$REGION$_elected_new_consul_tt
			right_icon = title:d_senate
		}
	}
	
	#If the city holder is stalling the Senate, remind him again...
	if = {
		limit = {
			NOR = { #You haven't made a definite determination yet...
				title:$BARONY$.holder.top_liege = { has_character_modifier = approved_by_the_senate }
				title:$BARONY$.holder.top_liege = { has_character_modifier = rejected_by_the_senate }
				title:$BARONY$.holder.top_liege = { has_character_modifier = ignored_the_senate }
			}
		
		}
		every_living_character = { limit = { has_character_modifier = roman_consul_$REGION$ } save_scope_as = the_consul_$REGION$ }
		if = {
			limit = { title:$BARONY$ = title:b_roma }
			title:$BARONY$.holder.top_liege = { trigger_event = { id = BP_roman_senate_events.0020 days = { 3 7 } } }
		}
		else = {
			title:$BARONY$.holder.top_liege = { trigger_event = { id = BP_roman_senate_events.1020 days = { 3 7 } } }
		}
	}
}

made_a_senator_effect = { #recipient scope
	add_trait = senator_$REGION$
	add_opinion = {
		modifier = made_me_a_senator
		target = $ACTOR$
		opinion = nominated_senator_opinion_gain
	}
	update_senator_opinion_about_character_effect = { ACTOR = $ACTOR$ }
}

update_senator_opinion_about_character_effect = { #Senator scope
	#Cleanup old opinion
	if = {
		limit = { has_opinion_modifier = { target = $ACTOR$ modifier = senate_general_opinion_approved_by_the_senate } }
		remove_opinion = { target = $ACTOR$ modifier = senate_general_opinion_approved_by_the_senate }
	}
	if = {
		limit = { has_opinion_modifier = { target = $ACTOR$ modifier = senate_general_opinion_rejected_by_the_senate } }
		remove_opinion = { target = $ACTOR$ modifier = senate_general_opinion_rejected_by_the_senate }
	}
	if = {
		limit = { has_opinion_modifier = { target = $ACTOR$ modifier = senate_general_opinion_ignored_the_senate } }
		remove_opinion = { target = $ACTOR$ modifier = senate_general_opinion_ignored_the_senate }
	}
	if = {
		limit = { has_opinion_modifier = { target = $ACTOR$ modifier = senate_general_opinion_stalled_the_senate } }
		remove_opinion = { target = $ACTOR$ modifier = senate_general_opinion_stalled_the_senate }
	}
	#Update Opinion
	if = {
		limit = { $ACTOR$ = { has_character_modifier = approved_by_the_senate } }
		add_opinion = {
			modifier = senate_general_opinion_approved_by_the_senate
			target = $ACTOR$
		}
	}
	else_if = {
		limit = { $ACTOR$ = { has_character_modifier = rejected_by_the_senate } }
		add_opinion = {
			modifier = senate_general_opinion_rejected_by_the_senate
			target = $ACTOR$
		}
	}
	else_if = {
		limit = { $ACTOR$ = { has_character_modifier = ignored_the_senate } }
		add_opinion = {
			modifier = senate_general_opinion_ignored_the_senate
			target = $ACTOR$
		}
	}
	else_if = {
		limit = { $ACTOR$ = { has_character_modifier = stalled_the_senate } }
		add_opinion = {
			modifier = senate_general_opinion_stalled_the_senate
			target = $ACTOR$
		}
	}
}

update_all_senate_opinion_about_character_effect = {
	every_living_character = {
		limit = {
			OR = {
				has_trait = senator_east
				has_trait = senator_west
			}
			NOT = { this = $ACTOR$ }
		}
		update_senator_opinion_about_character_effect = { ACTOR = $ACTOR$ }
	}
}

elevated_a_dynasty_effect = {
	$RECIPIENT$ = {
		dynasty = { add_dynasty_modifier = roman_senate_family_$REGION$ }
		if = {
			limit = { NOT = { has_trait = senator_$REGION$ } }
			add_trait = senator_$REGION$
		}
		if = {
			limit = { NOT = { $ACTOR$ = $RECIPIENT$ } }
			add_opinion = {
				modifier = elevated_my_dynasty
				target = scope:actor
				opinion = elevated_dynasty_opinion_gain
			}
		}
	}
	every_living_character = {
		limit = {
			this.dynasty = $RECIPIENT$.dynasty
			NOT = { this = $RECIPIENT$ }
			valid_to_be_senator_trigger = {
				ACTOR = $ACTOR$
				RECIPIENT = this
				THE_CITY = $THE_CITY$
			}
		}
		if = {
			limit = { NOT = { has_trait = senator_$REGION$ } }
			add_trait = senator_$REGION$
		}
		
		add_opinion = {
			modifier = elevated_my_dynasty
			target = $ACTOR$
			opinion = elevated_dynasty_opinion_gain
		}
	}
}

nominated_consul_effect = { #recipient scope
	add_character_modifier = roman_consul_nominee_$REGION$
	if = {
		limit = { NOT = { has_trait = senator_$REGION$ } }
		add_trait = senator_$REGION$
	}
	if = {
		limit = { NOT = { this = $ACTOR$ } }
		add_opinion = {
			modifier = nominated_me_for_consul
			target = $ACTOR$
			opinion = nominated_senator_opinion_gain
		}
	}
}

fire_senate_interface_toast_to_human_senators_effect = {
	if = {
		limit = { always = $IS_WEST$ }
		fire_senate_interface_toast_to_human_senators_west_effect = { EVENT_TYPE = $EVENT_TYPE$ }
	}
	else = { fire_senate_interface_toast_to_human_senators_east_effect = { EVENT_TYPE = $EVENT_TYPE$ } }
}

fire_senate_interface_toast_to_human_senators_west_effect = {
	every_ruler = {
		limit = {
			is_ai = no
			has_trait = senator_west
		}
		send_interface_toast = {
			type = event_generic_neutral
			title = senate_west_$EVENT_TYPE$_title
			custom_tooltip = senate_west_$EVENT_TYPE$_tt
			right_icon = title:d_senate
		}
	}
}
fire_senate_interface_toast_to_human_senators_east_effect = {
	every_ruler = {
		limit = {
			is_ai = no
			has_trait = senator_east
		}
		send_interface_toast = {
			type = event_generic_neutral
			title = senate_east_$EVENT_TYPE$_title
			custom_tooltip = senate_east_$EVENT_TYPE$_tt
			right_icon = title:d_senate_east
		}
	}
}

senate_interaction_opinion_effect = {
	#The Consul is annoyed your stealing the Senate's perogative...
	every_living_character = {
		limit = {
			has_character_modifier = roman_consul_$REGION$
			NOT = { this = scope:recipient } #Oh, thank you!
			NOT = { this = scope:actor }
		}
		this = { save_scope_as = senator_in_question }
		add_opinion = {
			modifier = interfered_with_the_senate
			target = scope:actor
			opinion = consul_opinion_of_$TYPE$
		}
		if = {
			limit = { NOT = { scope:actor = scope:recipient } }
			add_opinion = {
				modifier = interfered_with_the_senate
				target = scope:recipient
				opinion = consul_opinion_of_$TYPE$
			}
		}
	}
	every_living_character = {
		limit = {
			NOT = { has_character_modifier = roman_consul_$REGION$ }
			has_trait = senator_$REGION$
			character_is_in_senate_$REGION$_trigger = yes
			NOT = { this = scope:recipient } #Oh, thank you!
			NOT = { this = scope:actor }
		}
		this = { save_scope_as = senator_in_question }
		add_opinion = {
			modifier = interfered_with_the_senate
			target = scope:actor
			opinion = senator_in_city_opinion_of_$TYPE$
		}
		if = {
			limit = { NOT = { scope:actor = scope:recipient } }
			add_opinion = {
				modifier = interfered_with_the_senate
				target = scope:recipient
				opinion = senator_in_city_opinion_of_$TYPE$
			}
		}
	}
	every_living_character = {
		limit = {
			NOT = { has_character_modifier = roman_consul_$REGION$ }
			has_trait = senator_$REGION$
			character_is_in_senate_$REGION$_trigger = no
			NOT = { this = scope:recipient } #Oh, thank you!
			NOT = { this = scope:actor }
		}
		this = { save_scope_as = senator_in_question }
		add_opinion = {
			modifier = interfered_with_the_senate
			target = scope:actor
			opinion = senator_not_in_city_opinion_of_$TYPE$
		}
		if = {
			limit = { NOT = { scope:actor = scope:recipient } }
			add_opinion = {
				modifier = interfered_with_the_senate
				target = scope:recipient
				opinion = senator_not_in_city_opinion_of_$TYPE$
			}
		}
	}
}

senate_revoke_title_opinion_effect = { #As in, you are revoking titles unjustly
	every_living_character = {
		limit = {
			has_character_modifier = roman_consul_$REGION$
			NOT = { this = scope:recipient } #-80 opinion is plenty...
			NOT = { this = scope:actor }
		}
		this = { save_scope_as = senator_in_question }
		add_opinion = {
			modifier = revoked_land_from_the_senate
			target = scope:actor
			opinion = consul_opinion_of_revoking_a_barony
		}
	}
	every_living_character = {
		limit = {
			NOT = { has_character_modifier = roman_consul_$REGION$ }
			has_trait = senator_$REGION$
			character_is_in_senate_$REGION$_trigger = yes
			NOT = { this = scope:recipient } #-80 opinion is plenty...
			NOT = { this = scope:actor }
			trigger_if = { #Big land owners (besides the consul) do not care
				limit = { is_landed = yes }
				always = no
			}
		}
		this = { save_scope_as = senator_in_question }
		add_opinion = {
			modifier = revoked_land_from_the_senate
			target = scope:actor
			opinion = senator_in_city_opinion_of_revoking_a_barony
		}
	}
	every_living_character = {
		limit = {
			NOT = { has_character_modifier = roman_consul_$REGION$ }
			has_trait = senator_$REGION$
			character_is_in_senate_$REGION$_trigger = no
			NOT = { this = scope:recipient } #-80 opinion is plenty...
			NOT = { this = scope:actor }
			trigger_if = { #Big land owners (besides the consul) do not care
				limit = { is_landed = yes }
				always = no
			}
		}
		this = { save_scope_as = senator_in_question }
		add_opinion = {
			modifier = revoked_land_from_the_senate
			target = scope:actor
			opinion = senator_not_in_city_opinion_of_revoking_a_barony
		}
	}
}

#Decision Events
prepare_grant_land_targets_effect = {
	title:$THE_CITY$.holder.top_liege = {
		save_scope_as = senate_seate_holder
		random_realm_province = {
			limit = {
				#Valid holding type
				OR = {
					trigger_if = { #Include church holdings if both are lay clergy
						limit = { this = { has_holding_type = church_holding } }
						AND = {
							this = { has_holding_type = church_holding }
							this.barony.holder.faith = { has_doctrine = doctrine_theocracy_lay_clergy }
							$ACTOR$.faith = { has_doctrine = doctrine_theocracy_lay_clergy }
						}
					}
					has_holding_type = castle_holding
					has_holding_type = city_holding
				}
				#The holding type is not a capital barony
				this.barony = { is_capital_barony = no }
				#The holder isn't already a Senator
				NOT = { this.barony.holder = { has_trait = senator_$REGION$ } }
			}
			this.barony = { save_scope_as = target_barony }
		}
	}
	random_living_character = {
		limit = {
			this.dynasty = $ACTOR$.dynasty
			has_trait = senator_$REGION$
			is_landed = no
		}
		save_scope_as = the_unlanded
	}
}

#Game Start Effects
give_roman_senatorial_families_traits_effect = {
	every_living_character = {
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_modifier = roman_senate_family_$REGION$ }
			valid_to_be_senator_trigger_age_trigger = { CHAR = this }
			valid_to_be_senator_trigger_sex_trigger = { CHAR = this }
		}
		if = {
			limit = { NOT = { has_trait = senator_$REGION$ } }
			add_trait = senator_$REGION$
		}
	}
}
give_roman_senators_land_in_appropriate_regions_effect = {
	every_province = { #Western Senate targets
		limit = {
			geographical_region = custom_$REGION$ern_senate
			has_holding_type = city_holding
			this.barony = { is_capital_barony = no }
			#So that holdings in (merchant) republics aren't seized
			NOT = { this.county.holder = { has_government = republic_government } }
		}
		add_to_temporary_list = provinces_with_city_holdings_in_$REGION$
	}
	every_living_character = {
		limit = {
			dynasty ?= {
				has_dynasty_modifier = roman_senate_family_$REGION$
				#Exclude specified families
				NOT = { is_target_in_global_variable_list = { name = families_that_should_not_have_land target = this } }
			}
			is_male = yes
			is_adult = yes
			is_landed = no
			has_trait = senator_$REGION$
		}
		add_to_temporary_list = senators_without_land_$REGION$
	}
	every_in_list = {
		list = senators_without_land_$REGION$
		this = { save_temporary_scope_as = the_landless_senator }
		random_in_list = {
			list = provinces_with_city_holdings_in_$REGION$
			save_scope_as = the_province_with_available_city_holdings
		}
		if = { #This if suppresses errors of trying to set char's as courtiers of liege's they already are courtiers of
			limit = { NOT = { scope:the_landless_senator = { is_courtier_of = scope:the_province_with_available_city_holdings.barony.holder } } }
			scope:the_landless_senator = {
				#Teleport Character
				set_employer = scope:the_province_with_available_city_holdings.barony.holder
				#Give them the title
				get_title = scope:the_province_with_available_city_holdings.barony
				#Match up governments
				if = {
					limit = { this.liege = { has_bureaucratic_government_type_trigger = yes } }
					this = { convert_realm_to_gubernatorial_effect = yes }
				}
				else_if = {
					limit = { this.liege = { has_government = subroman_government } }
					this = { convert_realm_to_subroman_direct_effect = yes }
				}
			}
		}
		scope:the_province_with_available_city_holdings = { remove_from_list = the_province_with_available_city_holdings }
	}
}

make_east_senate_family_effect = {
	add_dynasty_modifier = { modifier = roman_senate_family_east }
}
make_west_senate_family_effect = {
	add_dynasty_modifier = { modifier = roman_senate_family_west }
}
