if_does_not_have_doctrine_add_it_effect = {
	if = {
		limit = { NOT = { has_doctrine = $DOCTRINE$ } }
		add_doctrine = $DOCTRINE$
	}
}
swap_doctrine_if_it_has_it_effect = {
	if = {
		limit = { has_doctrine = $OLD_DOCTRINE$ }
		remove_doctrine = $OLD_DOCTRINE$
		add_doctrine = $NEW_DOCTRINE$
	}
}

setup_learnt_language_effect = {
	if = {
		limit = {
			exists = $CHAR$
			has_dlc_feature = royal_court
		}
		$CHAR$ = {
			if = {
				limit = { NOT = { knows_language = $LANGUAGE$ } }
				learn_language = $LANGUAGE$
			}
		}
	}
}

setup_the_court_language_effect = {
	if = {
		limit = {
			exists = $CHAR$
			has_dlc_feature = royal_court
		}
		$CHAR$ = {
			set_court_language = $LANGUAGE$
			if = {
				limit = { NOT = { knows_court_language_of = $CHAR$ } }
				learn_court_language_of = $CHAR$
			}
		}
	}
}
#Changes the rite of old_fath characters at game start
change_ruler_and_court_rite_by_county_faith_effect = {
	every_county = {
		limit = { this.faith = faith:$NEW_RITE$ }
		if = {
			limit = { this.holder.faith = faith:$OLD_RITE$ }
			this.holder = {
				set_character_faith_history = faith:$NEW_RITE$
				every_child = {
					limit = { this.faith = faith:$OLD_RITE$ }
					set_character_faith_history = faith:$NEW_RITE$
				}
				every_courtier = {
					limit = { this.faith = faith:$OLD_RITE$ }
					set_character_faith_history = faith:$NEW_RITE$
				}
				every_vassal = {
					limit = {
						NOT = { has_government = theocracy_government }
						primary_title.tier = tier_barony
					}
					set_character_faith_history = faith:$NEW_RITE$
				}
			}
		}
	}
}
change_ruler_and_court_rite_by_kingdom_effect = {
	every_county = {
		limit = { this.kingdom = title:$KINGDOM$ }
		if = {
			limit = { this.holder.faith = faith:$OLD_RITE$ }
			this.holder = {
				set_character_faith_history = faith:$NEW_RITE$
				every_child = {
					limit = { this.faith = faith:$OLD_RITE$ }
					set_character_faith_history = faith:$NEW_RITE$
				}
				every_courtier = {
					limit = { this.faith = faith:$OLD_RITE$ }
					set_character_faith_history = faith:$NEW_RITE$
				}
				every_vassal = {
					limit = {
						NOT = { has_government = theocracy_government }
						primary_title.tier = tier_barony
					}
					set_character_faith_history = faith:$NEW_RITE$
				}
			}
		}
	}
}

add_variable_to_suppress_it_effect = {
	set_global_variable = {
		name = $NAME$
		value = no
	}
}

give_roman_senatorial_families_traits = {
	every_living_character = {
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_modifier = roman_senate_family_$REGION$ }
			is_male = yes
			is_adult = yes
		}
		if = {
			limit = { NOT = { has_trait = senator_$REGION$ } }
			add_trait = senator_$REGION$
		}
	}
}
give_roman_senators_land_in_appropriate_regions = {
	every_province = { #Western Senate targets
		limit = {
			geographical_region = custom_$REGION$ern_senate
			has_holding_type = city_holding
			this.barony = { is_capital_barony = no }
			#So that holdings in (merchant) republics aren't seized
			NOT = { this.county.holder = { has_government = republic_government } }
		}
		add_to_temporary_list = provinces_with_city_holdings_in_$REGION$
	}
	every_living_character = {
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_modifier = roman_senate_family_$REGION$ }
			is_male = yes
			is_adult = yes
			is_landed = no
			has_trait = senator_$REGION$
		}
		add_to_temporary_list = senators_without_land_$REGION$
	}
	every_in_list = {
		list = senators_without_land_$REGION$
		this = { save_temporary_scope_as = the_landless_senator }
		random_in_list = {
			list = provinces_with_city_holdings_in_$REGION$
			save_scope_as = the_province_with_available_city_holdings
		}
		scope:the_landless_senator = {
			get_title = scope:the_province_with_available_city_holdings.barony
			#Match up governments
			if = {
				limit = { this.liege = { has_bureaucratic_government_type_trigger = yes } }
				this = { convert_realm_to_gubernatorial_effect = yes }
			}
			else_if = {
				limit = { this.liege = { has_government = subroman_government } }
				this = { convert_realm_to_subroman_direct_effect = yes }
			}
		}
		scope:the_province_with_available_city_holdings = { remove_from_list = the_province_with_available_city_holdings }
	}
}
