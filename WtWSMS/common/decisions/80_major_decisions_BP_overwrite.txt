##### Changed from Vanilla: Removed in cases where culture kingdoms can be founded
found_kingdom_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_found_kingdom.dds"
	}
	decision_group_type = major
	ai_check_interval = 60
	desc = found_kingdom_decision_desc

	##### Changed from Vanilla vvvvv
	is_shown = {
		highest_held_title_tier = tier_duchy
		NOT = { has_game_rule = off_custom_kingdoms }
		is_confederation_member = no
		##### Changed from Vanilla vvvvv
		trigger_if = {
			limit = { has_game_rule = custom_kingdom_creation_blocked_for_specific_cases_enabled }
			NOR = { #Franks should try to form Francia first
				root.culture = culture:old_frankish
				has_global_variable = formed_frankish_kingdom
			}
		}
		##### Changed from Vanilla ^^^^^
	}
	##### Changed from Vanilla ^^^^^

	is_valid = {
		prestige_level >= 3
		is_independent_ruler = yes
		OR = {
			custom_description = {
				text = found_kingdom_decision_three_duchies_held
				any_held_title = {
					count > 2
					tier = tier_duchy
				}
			}
			sub_realm_size >= 30
		}
		trigger_if = {
			limit = {
				government_has_flag = government_is_nomadic
			}
			OR = {
				has_realm_law = nomadic_authority_5
				has_realm_law = nomadic_authority_4
				has_realm_law = nomadic_authority_3
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_at_war = no
	}

	cost = {
		gold = {
			value = 300
			if = {
				limit = {
					government_has_flag = government_is_nomadic
				}
				multiply = 0
			}
		}
		prestige = 500
		piety = {
			value = 200
			if = {
				limit = {
					government_has_flag = government_is_nomadic
				}
				multiply = 0
			}
		}
	}

	effect = {
		create_custom_kingdom_effect = yes
		if = {
			limit = {
				is_ai = no
				NOT = { exists = global_var:found_kingdom_decision  }
			}
			set_global_variable = {
				name = found_kingdom_decision
				value = root
			}
			set_global_variable = {
				name = found_kingdom_decision_kingdom
				value = root.primary_title
			}
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

##### Changed from Vanilla: Removed in cases where culture empires can be founded
##### Changed from Vanilla: Blocked when primary titles are titular to make players convert them to de jure
found_empire_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = major
	ai_check_interval = 60
	desc = found_empire_decision_desc

	##### Changed from Vanilla vvvvv
	is_shown = {
		highest_held_title_tier = tier_kingdom
		OR = {
			is_independent_ruler = yes
			any_held_title = {
				count >= 3
				tier = tier_kingdom
			}
		}
		NOT = { has_game_rule = off_custom_kingdoms }
		is_confederation_member = no
		##### Changed from Vanilla vvvvv
		trigger_if = {
			limit = { has_game_rule = custom_kingdom_creation_blocked_for_specific_cases_enabled }
			always = yes
		}
		##### Changed from Vanilla ^^^^^
	}
	##### Changed from Vanilla ^^^^^

	##### Changed from Vanilla vvvvv
	is_valid = {
		##### Changed from Vanilla vvvvv
		custom_description = {
			text = your_primary_title_is_not_titular
			primary_title = { is_titular = no }
		}
		##### Changed from Vanilla ^^^^^
		prestige_level >= 4
		trigger_if = {
			limit = {
				government_has_flag = government_is_nomadic
			}
			OR = {
				sub_realm_size >= 60
				AND = {
					custom_description = {
						text = found_empire_decision_three_kingdoms_held
						any_held_title = {
							count >= 2
							tier = tier_kingdom
						}
					}
					sub_realm_size >= 40
				}
			}
		}
		trigger_else = {
			OR = {
				sub_realm_size >= 120
				AND = {
					custom_description = {
						text = found_empire_decision_three_kingdoms_held
						any_held_title = {
							count >= 3
							tier = tier_kingdom
						}
					}
					sub_realm_size >= 80
				}
			}
		}
		
		trigger_if = {
			limit = {
				government_has_flag = government_is_nomadic
			}
			OR = {
				has_realm_law = nomadic_authority_5
				has_realm_law = nomadic_authority_4
			}
		}

		trigger_if = {
			limit = {
				exists = struggle:iberian_struggle
				# only display the condition for people from relevant faiths and cultures
				struggle:iberian_struggle = {
					OR = {
						is_culture_involved_in_struggle = root.culture
						is_faith_involved_in_struggle = root.faith
					}
				}
				# and living nearby
				any_realm_county = {
 					title_province = {
 						OR = {
 							geographical_region = ghw_region_north_africa
 							geographical_region = world_europe_west
 							geographical_region = world_europe_south
					 	}
 					}
 				}
			}
			custom_description = {
				text = found_empire_decision_not_part_of_iberian_struggle
				NOT = {
					any_character_struggle = {
						is_struggle_type = iberian_struggle
					}
				}
			}
		}

		rule_title_creation_imperial_power_projection_title_creation_trigger = yes
	}
	##### Changed from Vanilla ^^^^^

	is_valid_showing_failures_only = {
		is_independent_ruler = yes
		is_available_adult = yes
		is_at_war = no
	}

	cost = {
		gold = {
			value = 1200
			if = {
				limit = {
					government_has_flag = government_is_nomadic
				}
				multiply = 0
			}
		}
		prestige = 2000
		piety = {
			value = 600
			if = {
				limit = {
					government_has_flag = government_is_nomadic
				}
				multiply = 0
			}
		}
	}

	effect = {
		if = {
			limit = {
				NOT = { government_has_flag = government_is_nomadic }
			}
			create_custom_empire_effect = yes
			gain_heroic_legend_seed_tooltip_effect = yes
			hidden_effect = {
				legend_seed_new_title_effect = yes
			}
		}
		else = {
			create_custom_empire_effect = yes
		}
		if = {
			limit = {
				is_ai = no
				NOT = { exists = global_var:found_empire_decision  }
			}
			set_global_variable = {
				name = found_empire_decision
				value = root
			}
			set_global_variable = {
				name = found_empire_decision_empire
				value = root.primary_title
			}
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

##### Changed from Vanilla: Blocked when primary titles are titular to prevent map weirdness
expand_duchy_decision = {
	picture = {
		trigger = {
			OR = {
				government_has_flag = government_is_nomadic
				government_has_flag = government_is_clan
			}
		}
		reference = "gfx/interface/illustrations/decisions/fp3/fp3_decision_sunder.dds"
	}
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	decision_group_type = realm
	ai_check_interval = 240

	cooldown = { years = 10 }

	widget = {
		controller = create_holy_order
		barony_valid = {
			scope:ruler = {
				trigger_if = {
					limit = {
						highest_held_title_tier = tier_duchy
					}
					primary_title = { 
						save_temporary_scope_as = duchy_title 
					}
				}
				trigger_else = {
					capital_county.duchy = {
						save_temporary_scope_as = duchy_title
					}
				}
			}
			trigger_if = {
				limit = { exists = this }
				save_temporary_scope_as = checking_title
				is_capital_barony = yes
				NOT = {
					scope:duchy_title = {
						is_de_jure_liege_or_above_target = scope:checking_title
					}
				}
				this.county = {
					OR = {
						any_neighboring_county = {
							duchy = scope:duchy_title
						}
						AND = {
							scope:duchy_title = { is_titular = yes }
							this = scope:duchy_title.title_capital_county
						}
					}
				}
				holder = scope:ruler
			}
		}
	}

	is_shown = {
		save_temporary_scope_as = root_scope_temporary
		highest_held_title_tier >= tier_duchy
		OR = {
			AND = {
				is_ai = no
				has_game_rule = on_custom_duchies_player
			}
			has_game_rule = on_custom_duchies
		}
		is_landed_or_landless_administrative = yes
		trigger_if = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			primary_title = { 
				save_temporary_scope_as = duchy_title 
			}
		}
		trigger_else = {
			root.capital_county.duchy = {
				save_temporary_scope_as = duchy_title
			}
		}
		scope:duchy_title = {
			is_titular = no
			any_de_jure_county = {
				count < expand_duchy_max_size_value
			}
		}
	}

	is_valid = {
		save_temporary_scope_as = root_scope_temporary
		is_independent_ruler = yes
		trigger_if = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			primary_title = { 
				save_temporary_scope_as = duchy_title 
			}
		}
		trigger_else = {
			root.capital_county.duchy = {
				save_temporary_scope_as = duchy_title
			}
		}
		trigger_if = {
			limit = {
				OR = {
					has_legitimacy = yes 
					exists = scope:barony
				}
			}
			OR = {
				prestige_level >= 3
				trigger_if = {
					limit = {
						has_legitimacy = yes 
					}
					legitimacy_level >= 4
				}
				trigger_if = {
					limit = {
						exists = scope:barony
					}
					custom_tooltip = {
						text = expand_duchy_capital_tooltip
						scope:barony.county ?= root.primary_title.title_capital_county
					}
				}
			}
		}
		trigger_else = {
			prestige_level >= 3
		}
		custom_tooltip = {
			text = expand_duchy_less_than_4
			scope:duchy_title = {
				any_de_jure_county = {
					count < expand_duchy_max_size_value
				}
			}
		}
		trigger_if = {
			limit = {
				exists = scope:barony
			}
			scope:barony.county ?= {
				title_held_years >= 5
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_at_war = no
	}

	cost = {
		prestige = {
			if = {
				limit = {
					trigger_if = {
						limit = {
							highest_held_title_tier = tier_duchy
						}
						primary_title = { 
							save_temporary_scope_as = duchy_title 
						}
					}
					trigger_else = {
						root.capital_county.duchy = {
							save_temporary_scope_as = duchy_title
						}
					}
					scope:barony.county ?= scope:duchy_title.title_capital_county
				}
				value = 250
			}
			else = {
				value = 1000
			}
		}
	}

	effect = {
		if = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			primary_title = { 
				save_temporary_scope_as = duchy_title_scope
			}
		}
		else = {
			root.capital_county.duchy = {
				save_temporary_scope_as = duchy_title_scope
			}
		}
		hidden_effect = {
			if = {
				limit = {
					scope:barony.duchy.title_capital_county ?= scope:barony.county
					scope:barony.duchy ?= {
						any_de_jure_county = {
							NOT = { this = scope:barony.county }
						}
					}
				}
				scope:barony.duchy = {
					ordered_de_jure_county = {
						order_by = development_level
						limit = { NOT = { this = scope:barony.county } }
						save_scope_as = new_duchy_capital
					}
					set_capital_county = scope:new_duchy_capital
				}
			}
		}
		scope:barony.county ?= {
			set_de_jure_liege_title = scope:duchy_title_scope
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

set_de_jure_capital_decision = {
	picture = {
		trigger = {
			government_has_flag = government_is_nomadic
		}
		reference = "gfx/interface/illustrations/event_scenes/mpo_city_steppe.dds"
	}
	picture = {
		reference = "gfx/interface/illustrations/decisions/ep3_decision_city.dds"
	}
	decision_group_type = realm
	ai_check_interval = 240

	cooldown = { years = 10 }

	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "SET_DE_JURE_CAPITAL_CHOOSE_TYPE"
		show_from_start = yes

		item = { # Duchy
			value = set_duchy_capital
			is_valid = {
				
			}
			current_description = hire_physician_decision_desc
			localization = set_de_jure_capital_duchy
			icon = "gfx/interface/icons/duchy_crown.dds"
			ai_chance = { value = 100 }
		}

		item = { # Kingdom
			value = set_kingdom_capital
			is_shown = {
				root = {
					highest_held_title_tier >= tier_kingdom
				}
			}
			current_description = hire_physician_decision_desc
			localization = set_de_jure_capital_kingdom
			icon = "gfx/interface/icons/kingdom_crown.dds"
			ai_chance = { value = 100 }
		}

		item = { # Empire
			value = set_empire_capital
			is_shown = {
				root = {
					highest_held_title_tier >= tier_empire
				}
			}
			current_description = hire_physician_decision_desc
			localization = set_de_jure_capital_empire
			icon = "gfx/interface/icons/empire_crown.dds"
			ai_chance = { value = 100 }
		}
	}

	is_shown = {
		highest_held_title_tier >= tier_duchy
		this.primary_title = { is_titular = no }
		OR = {
			AND = {
				highest_held_title_tier >= tier_duchy
				NOT = { root.capital_county = root.capital_county.duchy.title_capital_county }
			}
			AND = {
				highest_held_title_tier >= tier_kingdom
				NOT = { root.capital_county = root.capital_county.kingdom.title_capital_county }
			}
			AND = {
				highest_held_title_tier >= tier_empire
				NOT = { root.capital_county = root.capital_county.empire.title_capital_county }
			}
		}
	}

	is_valid = {
		root.capital_county = {
			save_temporary_scope_as = current_capital
		}
		trigger_if = {
			limit = {
				OR = {
					AND = {
						highest_held_title_tier = tier_duchy
						scope:set_duchy_capital = yes
					}
					AND = {
						highest_held_title_tier = tier_kingdom
						scope:set_kingdom_capital = yes
					}
					AND = {
						highest_held_title_tier = tier_empire
						scope:set_empire_capital = yes
					}
				}
			}
			root.primary_title = {
				save_temporary_scope_as = current_de_jure
			}
		}
		trigger_else = {
			switch = {
				trigger = yes
				scope:set_duchy_capital = {
					root.capital_county.duchy = { save_temporary_scope_as = current_de_jure }
				}
				scope:set_kingdom_capital = { 
					root.capital_county.kingdom = { save_temporary_scope_as = current_de_jure } 
				}
				scope:set_empire_capital = { 
					root.capital_county.empire = { save_temporary_scope_as = current_de_jure } 
				}
			}
		}

		scope:current_de_jure.title_capital_county = {
			save_temporary_scope_as = title_check
		}

		has_title = scope:current_de_jure
		custom_tooltip = {
			text = set_de_jure_not_de_jure_tooltip
			scope:current_de_jure = {
				is_de_jure_liege_or_above_target = scope:current_capital
			}
		}
		custom_tooltip = {
			text = set_de_jure_capital_already_done_tooltip
			NOT = {
				scope:title_check = scope:current_capital
			}
		}
		custom_tooltip = {
			text = set_de_jure_capital_hold_current_capital_tooltip
			any_sub_realm_county = { this = scope:title_check }
		}
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_at_war = no
	}

	cost = {
		prestige = {
			if = {
				limit = {
					is_ai = no
				}
				switch = {
					trigger = yes
					scope:set_duchy_capital = { value = 500 }
					scope:set_kingdom_capital = { value = 750 }
					scope:set_empire_capital = { value = 1000 }
				}
			}
			else = {
				value = 250
			}
		}
	}

	effect = {
		root.capital_county = {
			save_scope_as = current_capital_scope
		}
		if = {
			limit = {
				OR = {
					AND = {
						highest_held_title_tier = tier_duchy
						scope:set_duchy_capital = yes
					}
					AND = {
						highest_held_title_tier = tier_kingdom
						scope:set_kingdom_capital = yes
					}
					AND = {
						highest_held_title_tier = tier_empire
						scope:set_empire_capital = yes
					}
				}
			}
			root.primary_title = {
				title_capital_county = { save_scope_as = old_capital }
				save_scope_as = current_de_jure_scope
			}
		}
		else = {
			switch = {
				trigger = yes
				scope:set_duchy_capital = {
					root.capital_county.duchy = { 
						title_capital_county = { save_scope_as = old_capital }
						save_scope_as = current_de_jure_scope 
					}
				}
				scope:set_kingdom_capital = { 
					root.capital_county.kingdom = { 
						title_capital_county = { save_scope_as = old_capital }
						save_scope_as = current_de_jure_scope 
					} 
				}
				scope:set_empire_capital = { 
					root.capital_county.empire = { 
						title_capital_county = { save_scope_as = old_capital }
						save_scope_as = current_de_jure_scope 
					}
				}
			}
		}

		if = {
			limit = {
				scope:set_duchy_capital = yes
			}
			custom_tooltip = { text = set_de_jure_capital_warning }
		}
		else = {
			custom_tooltip = {
				text = set_de_jure_capital_effect_tooltip
			}
		}
		hidden_effect = {
			scope:current_de_jure_scope ?= {
				set_capital_county = root.capital_county
			}
			# A bit of an ugly script hack, to make sure the Duchy Building slot is properly moved, which happens when a duchy capital is moved out of the duchy de jure. We temporarily move them out of the duchy de jure, and back again, to force this effect. Remove when Code gets a chance to have a look at it
			if = {
				limit = {
					scope:set_duchy_capital = yes
				}
			}
			scope:old_capital ?= {
				duchy = { save_scope_as = current_duchy }
				random_duchy = {
					limit = {
						NOT = { this = scope:current_duchy }
						is_noble_family_title = no
						is_mercenary_company = no
					}
					save_scope_as = placeholder_duchy
				}
				scope:current_duchy = {
					every_de_jure_county = {
						limit = {
							NOT = { this = root.capital_county }
						}
						set_de_jure_liege_title = scope:placeholder_duchy
						add_to_list = correction_list
					}
				}
				every_in_list = {
					list = correction_list
					set_de_jure_liege_title = scope:current_duchy
				}
			}
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

##### vvvvv Removed Decisions vvvvv #####

##### Changed from Vanilla: Removed (we use different mechanics)
convert_to_feudalism_liege_converted_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = major

	ai_check_interval = 120

	#NB: these don't match Vanilla because of collision issues
	desc = convert_to_feudalism_liege_converted_decision_desc
	selection_tooltip = convert_to_feudalism_liege_converted_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed (we use different mechanics)
convert_whole_realm_to_feudalism_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = major

	ai_check_interval = 120

	#NB: these don't match Vanilla because of collision issues
	desc = convert_to_feudalism_liege_converted_decision_desc
	selection_tooltip = convert_to_feudalism_liege_converted_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed (we use different mechanics)
convert_whole_realm_to_feudalism_west_african_pagan_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"
	}
	decision_group_type = major

	ai_check_interval = 120

	#NB: these don't match Vanilla because of collision issues
	desc = convert_to_feudalism_liege_converted_decision_desc
	selection_tooltip = convert_to_feudalism_liege_converted_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}