@prefeudal_authority_cooldown_years = 20

prefeudal_authority = {
	default = prefeudal_authority_0
	cumulative = yes
	flag = realm_law
	
	prefeudal_authority_0 = {
		modifier = {
			direct_vassal_opinion = 10
			vassal_tax_contribution_mult = -0.20
			vassal_levy_contribution_mult = -0.20
			#Opinions
			barons_and_minor_landholders_opinion = 20
			glory_hound_opinion = 10
			parochial_opinion = 10
			courtly_opinion = 5
		}
		can_keep = { realm_law_use_prefeudal_authority_trigger = yes }
	}
	
	prefeudal_authority_1 = {
		modifier = {
			vassal_tax_contribution_mult = 0.10
			vassal_levy_contribution_mult = 0.10
			development_growth_factor = 0.05
			#Opinions
			barons_and_minor_landholders_opinion = -30
			glory_hound_opinion = -15
			parochial_opinion = -15
			courtly_opinion = -5
			minority_opinion = -10
		}
		flag = title_revocation_allowed
		
		can_keep = { realm_law_use_prefeudal_authority_trigger = yes }
		
		can_pass = {
			trigger_if = {
				limit = { has_realm_law = prefeudal_authority_0 }
				custom_description = {
					subject = root
					text = "has_prefeudal_authority_cooldown"
					NOT = { has_variable = crown_authority_cooldown }
				}
				root.culture = { has_innovation = innovation_leges_barbarorum }
			}
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = prefeudal_authority_2
							has_realm_law = prefeudal_authority_3
						}
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = {
					NOT = { has_realm_law = prefeudal_authority_2 }
				}
			}
			set_variable = {
				name = crown_authority_cooldown
				years = @prefeudal_authority_cooldown_years
			}
		}
		
		ai_will_do = {
			if = {
				limit = { has_realm_law = prefeudal_authority_0 }
				value = 1
			}
		}
	}
	
	prefeudal_authority_2 = {
		modifier = {
			vassal_tax_contribution_mult = 0.10
			vassal_levy_contribution_mult = 0.10
			development_growth_factor = 0.05
			#Opinions
			barons_and_minor_landholders_opinion = -10
			glory_hound_opinion = -10
			parochial_opinion = -10
			courtly_opinion = -5
			zealot_opinion = -10
			minority_opinion = -10
		}
		flag = vassal_retraction_allowed
		
		can_keep = { realm_law_use_prefeudal_authority_trigger = yes }
		
		can_pass = {
			trigger_if = {
				limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
				has_realm_law = prefeudal_authority_1
				custom_description = {
					subject = root
					text = "has_prefeudal_authority_cooldown"
					NOT = { has_variable = crown_authority_cooldown }
				}
			}
			root.culture = { has_innovation = innovation_mundium }
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			if = {
				limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
			}
			set_variable = {
				name = crown_authority_cooldown
				years = @prefeudal_authority_cooldown_years
			}
		}
		
		ai_will_do = {
			if = {
				limit = { has_realm_law = prefeudal_authority_1 }
				value = 1
			}
		}
	}
	
	prefeudal_authority_3 = {
		modifier = {
			vassal_tax_contribution_mult = 0.10
			vassal_levy_contribution_mult = 0.10
			development_growth_factor = 0.05
			#Opinions
			barons_and_minor_landholders_opinion = -10
			glory_hound_opinion = -10
			parochial_opinion = -10
			courtly_opinion = -5
			zealot_opinion = -10
			minority_opinion = -10
		}
		flag = can_change_partition_succession_laws
		flag = vassal_refusal_is_treason
		
		can_keep = { realm_law_use_prefeudal_authority_trigger = yes }

		can_pass = {
			has_realm_law = prefeudal_authority_2
			custom_description = {
				subject = root
				text = "has_prefeudal_authority_cooldown"
				NOT = { has_variable = crown_authority_cooldown }
			}
			root.culture = { has_innovation = innovation_hereditary_rule }
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = { NOT = { has_realm_law = prefeudal_authority_3 } }
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			set_variable = {
				name = crown_authority_cooldown
				years = @prefeudal_authority_cooldown_years
			}
		}
	}
}