@subroman_taxation_cooldown_years = 50

#Subromain taxation effects
#Replaces *_roman_taxation_infrastructure in WtWSMS
subroman_taxation = {
	default = subroman_taxation_0
	cumulative = no
	flag = subroman_taxation
	flag = realm_law #Needed for certain action capabilities
	flag = hidden_law #aka, not a true "Realm Law"; not manipulatible like one
	
	subroman_taxation_0 = { #Non-Existent Roman Taxation Infrastructure Equivalent
		modifier = { domain_tax_mult = -0.20 }
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_subroman_taxation_trigger = yes }
		
		can_pass = {
			custom_description = {
			text = "cannot_dynamically_control_subroman_taxation"
				always = no
			}
		}
		on_pass = {
			set_variable = {
				name = subroman_taxation_cooldown
				years = @subroman_taxation_cooldown_years
			}
		}
	}
	subroman_taxation_1 = { #Abandoned Roman Taxation Infrastructure Equivalent
		modifier = {
			domain_limit = 1
			domain_tax_mult = -0.15
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_subroman_taxation_trigger = yes }
		
		can_pass = {
			custom_description = {
			text = "cannot_dynamically_control_subroman_taxation"
				always = no
			}
		}
		on_pass = {
			set_variable = {
				name = subroman_taxation_cooldown
				years = @subroman_taxation_cooldown_years
			}
		}
	}
	subroman_taxation_2 = { #Neglected Roman Taxation Infrastructure Equivalent
		modifier = {
			domain_limit = 2
			domain_tax_mult = -0.10
		}
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_subroman_taxation_trigger = yes }
		
		can_pass = {
			custom_description = {
			text = "cannot_dynamically_control_subroman_taxation"
				always = no
			}
		}
		on_pass = {
			set_variable = {
				name = subroman_taxation_cooldown
				years = @subroman_taxation_cooldown_years
			}
		}
	}
	subroman_taxation_3 = { #Default Roman Taxation Infrastructure
		modifier = { domain_limit = 3 }
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_subroman_taxation_trigger = yes }
		
		can_pass = {
			custom_description = {
			text = "cannot_dynamically_control_subroman_taxation"
				always = no
			}
		}
		on_pass = {
			set_variable = {
				name = subroman_taxation_cooldown
				years = @subroman_taxation_cooldown_years
			}
		}
	}
}

subroman_popular_opinion = {
	default = subroman_popular_opinion_0
	cumulative = no
	flag = subroman_popular_opinion
	flag = realm_law #Needed for certain action capabilities
	flag = hidden_law #aka, not a true "Realm Law"; not manipulatible like one
	
	subroman_popular_opinion_0 = {
		modifier = {}
		can_keep = { realm_law_use_subroman_taxation_trigger = yes }
		can_pass = {
			custom_description = {
			text = "cannot_dynamically_control_subroman_opinion"
				always = no
			}
		}
	}
	subroman_popular_opinion_1 = {
		modifier = { county_opinion_add = -10 }
		can_keep = { realm_law_use_subroman_taxation_trigger = yes }
		can_pass = {
			custom_description = {
			text = "cannot_dynamically_control_subroman_opinion"
				always = no
			}
		}
	}
}

#Hidden "Feudal Transtion" Laws; replaces feudal_transition variables in CK2
subroman_feudal_transition = {
	default = subroman_feudal_transition_0
	cumulative = no
	flag = realm_law #Needed for certain action capabilities
	flag = hidden_law #aka, not a true "Realm Law"; just used to track feudal transition stuff
	flag = feudalization_track #This _will_ be shown elsewhere in the GUI
	
	#These have no "real" meaning except for better tracking fo feudal_transition variables
	subroman_feudal_transition_0 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_1 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_2 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_3 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_4 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_5 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_6 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_7 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_8 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
	subroman_feudal_transition_9 = {
		can_keep = { realm_law_use_feudal_transition_trigger = yes }
		can_pass = {
			custom_description = {
				text = fedualization_can_not_be_controlled_manually
				always = no
			}
		}
	}
}