##### Changed from Vanilla: Removed ineligible decision
form_switzerland_kingdom_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	major = yes

	ai_check_interval = 120

	desc = form_switzerland_kingdom_decision_desc
	selection_tooltip = form_switzerland_kingdom_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed ineligible decision
form_austria_kingdom_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	major = yes

	ai_check_interval = 120

	desc = form_austria_kingdom_decision_desc
	selection_tooltip = form_austria_kingdom_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed ineligible decision
reform_carolingian_empire_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	major = yes

	ai_check_interval = 120

	desc = reform_carolingian_empire_decision_desc
	selection_tooltip = reform_carolingian_empire_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed ineligible decision
unify_burgundy_kingdom_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	major = yes

	ai_check_interval = 120

	desc = unify_burgundy_kingdom_decision_desc
	selection_tooltip = unify_burgundy_kingdom_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed ineligible decision
empower_sicilian_parliament_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	major = yes

	ai_check_interval = 120

	desc = empower_sicilian_parliament_decision_desc
	selection_tooltip = empower_sicilian_parliament_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

#Little Medieval French Renaissance.
promote_gothic_innovations_decision = { #12th century Renaissance
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"

	desc = promote_gothic_innovations_decision_desc
	selection_tooltip = promote_gothic_innovations_decision_tooltip
	major = yes
	ai_goal = yes

	is_shown = {
		OR = {
			culture = { has_cultural_pillar = heritage_latin }
			culture = { has_cultural_pillar = heritage_frankish }
		}
		NOT = { has_culture = culture:italian }
		is_ruler = yes
		is_landed = yes
		root.culture = {
			has_cultural_era_or_later = culture_era_early_medieval
		}
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_promoted_gothic_innovations
			}
		}
		highest_held_title_tier >= 4 #Kings and Emperors only.
		OR = {
			has_title = title:k_france
			has_title = title:e_france
			has_title = title:k_burgundy
		}
		NOR = {
			has_government = theocracy_government
			has_government = clan_government
			has_government = tribal_government
		}
	}
	
	is_valid = {
		prestige_level >= 4
		learning >= 10
		NOT = { has_realm_law = crown_authority_0 }
		#Must control core provinces either in the North or the South:
		OR = {
			AND = {
				completely_controls = title:d_valois
				completely_controls = title:d_orleans
			}
			AND = {
				completely_controls = title:d_provence
				completely_controls = title:d_toulouse
			}
		}
		#Must have basic innovations:
		root.culture = {
			has_innovation = innovation_royal_prerogative
			has_innovation = innovation_knighthood
			has_innovation = innovation_windmills
		}
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_at_war = no
	}

	cost = {
		gold = 500
		prestige = 3000
	}

	effect = {
		show_as_tooltip = {
			promote_gothic_innovations_decision_scripted_effect = yes
		}
		trigger_event = {
			id = middle_europe_decisions.0012
		}
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_promoted_gothic_innovations
			}
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 15
		ai_value_modifier = {
			ai_boldness = 1.0
		}
	}
}

##### Changed from Vanilla: Removed ineligible decision
restore_holy_roman_empire_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	major = yes

	ai_check_interval = 120

	desc = restore_holy_roman_empire_decision_desc
	selection_tooltip = restore_holy_roman_empire_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed all references to global_culture events
establish_norman_culture_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes

	ai_check_interval = 120

	desc = establish_norman_culture_decision_desc
	selection_tooltip = establish_norman_culture_decision_tooltip

	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}

##### Changed from Vanilla: Removed all references to k_sorbia
establish_the_electorate_of_saxony_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	major = yes

	ai_check_interval = 120

	desc = establish_the_electorate_of_saxony_decision_desc
	selection_tooltip = establish_the_electorate_of_saxony_decision_tooltip
	
	is_shown = { always = no }
	
	is_valid = { always = no }

	is_valid_showing_failures_only = { always = no }

	cost = {}

	effect = {}
	
	ai_potential = { always = no }
}


